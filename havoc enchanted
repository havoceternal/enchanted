--[=[
 d888b  db    db d888888b      .d888b.      db      db    db  .d8b.  
88' Y8b 88    88   `88'        VP  `8D      88      88    88 d8' `8b 
88      88    88    88            odD'      88      88    88 88ooo88 
88  ooo 88    88    88          .88'        88      88    88 88~~~88 
88. ~8~ 88b  d88   .88.        j88.         88booo. 88b  d88 88   88    @uniquadev
 Y888P  ~Y8888P' Y888888P      888888D      Y88888P ~Y8888P' YP   YP  CONVERTER 
]=]

-- Instances: 527 | Scripts: 35 | Modules: 0 | Tags: 0
local G2L = {};

-- StarterGui.havocenchanted
G2L["1"] = Instance.new("ScreenGui", game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui"));
G2L["1"]["IgnoreGuiInset"] = true;
G2L["1"]["ScreenInsets"] = Enum.ScreenInsets.DeviceSafeInsets;
G2L["1"]["Name"] = [[havocenchanted]];
G2L["1"]["ResetOnSpawn"] = false;


-- StarterGui.havocenchanted.ESPSFolder
G2L["2"] = Instance.new("Folder", G2L["1"]);
G2L["2"]["Name"] = [[ESPSFolder]];


-- StarterGui.havocenchanted.ESPSFolder.Controller
G2L["3"] = Instance.new("LocalScript", G2L["2"]);
G2L["3"]["Name"] = [[Controller]];


-- StarterGui.havocenchanted.MainFrame
G2L["4"] = Instance.new("Frame", G2L["1"]);
G2L["4"]["BorderSizePixel"] = 0;
G2L["4"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 16);
G2L["4"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["4"]["Size"] = UDim2.new(0.41995, 0, 0.3516, 0);
G2L["4"]["Position"] = UDim2.new(0.54298, 0, 0.53225, 0);
G2L["4"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["4"]["Name"] = [[MainFrame]];


-- StarterGui.havocenchanted.MainFrame.UICorner
G2L["5"] = Instance.new("UICorner", G2L["4"]);
G2L["5"]["CornerRadius"] = UDim.new(0.03, 0);


-- StarterGui.havocenchanted.MainFrame.Glow
G2L["6"] = Instance.new("ImageLabel", G2L["4"]);
G2L["6"]["ZIndex"] = -1;
G2L["6"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["6"]["Image"] = [[rbxassetid://5028857084]];
G2L["6"]["Size"] = UDim2.new(1.0978, 0, 1.10526, 0);
G2L["6"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["6"]["BackgroundTransparency"] = 1;
G2L["6"]["Name"] = [[Glow]];
G2L["6"]["Position"] = UDim2.new(-0.0504, 0, -0.0539, 0);


-- StarterGui.havocenchanted.MainFrame.Glow.UIGradient
G2L["7"] = Instance.new("UIGradient", G2L["6"]);



-- StarterGui.havocenchanted.MainFrame.Glow.GLOW
G2L["8"] = Instance.new("LocalScript", G2L["6"]);
G2L["8"]["Name"] = [[GLOW]];


-- StarterGui.havocenchanted.MainFrame.Glow.UIAspectRatioConstraint
G2L["9"] = Instance.new("UIAspectRatioConstraint", G2L["6"]);
G2L["9"]["AspectRatio"] = 1.83793;


-- StarterGui.havocenchanted.MainFrame.Drag
G2L["a"] = Instance.new("Frame", G2L["4"]);
G2L["a"]["ZIndex"] = 2;
G2L["a"]["BorderSizePixel"] = 0;
G2L["a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["a"]["Size"] = UDim2.new(1, 0, 0.1108, 0);
G2L["a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["a"]["Name"] = [[Drag]];
G2L["a"]["BackgroundTransparency"] = 1;


-- StarterGui.havocenchanted.MainFrame.Drag.DragScript
G2L["b"] = Instance.new("LocalScript", G2L["a"]);
G2L["b"]["Name"] = [[DragScript]];


-- StarterGui.havocenchanted.MainFrame.Drag.UIAspectRatioConstraint
G2L["c"] = Instance.new("UIAspectRatioConstraint", G2L["a"]);
G2L["c"]["AspectRatio"] = 16.33885;


-- StarterGui.havocenchanted.MainFrame.ViewFrame
G2L["d"] = Instance.new("Frame", G2L["4"]);
G2L["d"]["BorderSizePixel"] = 0;
G2L["d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["d"]["Size"] = UDim2.new(0.79341, 0, 0.8892, 0);
G2L["d"]["Position"] = UDim2.new(0.20659, 0, 0.1108, 0);
G2L["d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["d"]["Name"] = [[ViewFrame]];
G2L["d"]["BackgroundTransparency"] = 1;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.LocalPlayer
G2L["e"] = Instance.new("ScrollingFrame", G2L["d"]);
G2L["e"]["Visible"] = false;
G2L["e"]["Active"] = true;
G2L["e"]["ScrollingDirection"] = Enum.ScrollingDirection.Y;
G2L["e"]["BorderSizePixel"] = 0;
G2L["e"]["CanvasSize"] = UDim2.new(0, 0, 2.5, 0);
G2L["e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["e"]["Name"] = [[LocalPlayer]];
G2L["e"]["AutomaticCanvasSize"] = Enum.AutomaticSize.Y;
G2L["e"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["e"]["ScrollBarImageColor3"] = Color3.fromRGB(0, 0, 0);
G2L["e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["e"]["ScrollBarThickness"] = 0;
G2L["e"]["BackgroundTransparency"] = 1;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.LocalPlayer.UIListLayout
G2L["f"] = Instance.new("UIListLayout", G2L["e"]);
G2L["f"]["HorizontalAlignment"] = Enum.HorizontalAlignment.Center;
G2L["f"]["Padding"] = UDim.new(0.05, 0);
G2L["f"]["SortOrder"] = Enum.SortOrder.LayoutOrder;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.LocalPlayer.Cframe
G2L["10"] = Instance.new("Frame", G2L["e"]);
G2L["10"]["BorderSizePixel"] = 0;
G2L["10"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 8);
G2L["10"]["AutomaticSize"] = Enum.AutomaticSize.Y;
G2L["10"]["Size"] = UDim2.new(0.906, 0, 0.676, 0);
G2L["10"]["Position"] = UDim2.new(0.0566, 0, -0, 0);
G2L["10"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["10"]["Name"] = [[Cframe]];
G2L["10"]["LayoutOrder"] = 2;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.LocalPlayer.Cframe.UICorner
G2L["11"] = Instance.new("UICorner", G2L["10"]);
G2L["11"]["CornerRadius"] = UDim.new(0.05, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.LocalPlayer.Cframe.Title
G2L["12"] = Instance.new("TextLabel", G2L["10"]);
G2L["12"]["TextWrapped"] = true;
G2L["12"]["BorderSizePixel"] = 0;
G2L["12"]["TextSize"] = 14;
G2L["12"]["TextScaled"] = true;
G2L["12"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["12"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["12"]["TextColor3"] = Color3.fromRGB(0, 0, 255);
G2L["12"]["BackgroundTransparency"] = 1;
G2L["12"]["Size"] = UDim2.new(1, 0, 0.14026, 0);
G2L["12"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["12"]["Text"] = [[CFRAME MOVEMENT]];
G2L["12"]["Name"] = [[Title]];
G2L["12"]["Position"] = UDim2.new(-0, 0, -0, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.LocalPlayer.Cframe.Title.UIAspectRatioConstraint
G2L["13"] = Instance.new("UIAspectRatioConstraint", G2L["12"]);
G2L["13"]["AspectRatio"] = 15.44224;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.LocalPlayer.Cframe.UIListLayout
G2L["14"] = Instance.new("UIListLayout", G2L["10"]);
G2L["14"]["SortOrder"] = Enum.SortOrder.LayoutOrder;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.LocalPlayer.Cframe.UIAspectRatioConstraint
G2L["15"] = Instance.new("UIAspectRatioConstraint", G2L["10"]);
G2L["15"]["AspectRatio"] = 2.1659;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.LocalPlayer.Cframe.CFRAMEWALK
G2L["16"] = Instance.new("Frame", G2L["10"]);
G2L["16"]["BorderSizePixel"] = 0;
G2L["16"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["16"]["Size"] = UDim2.new(1, 0, 0.1553, 0);
G2L["16"]["Position"] = UDim2.new(0, 0, 0.14026, 0);
G2L["16"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["16"]["Name"] = [[CFRAMEWALK]];
G2L["16"]["LayoutOrder"] = 1;
G2L["16"]["BackgroundTransparency"] = 1;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.LocalPlayer.Cframe.CFRAMEWALK.Trigger
G2L["17"] = Instance.new("TextButton", G2L["16"]);
G2L["17"]["TextWrapped"] = true;
G2L["17"]["BorderSizePixel"] = 0;
G2L["17"]["TextColor3"] = Color3.fromRGB(0, 0, 169);
G2L["17"]["TextSize"] = 14;
G2L["17"]["TextScaled"] = true;
G2L["17"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 169);
G2L["17"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["17"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["17"]["BackgroundTransparency"] = 1;
G2L["17"]["Name"] = [[Trigger]];
G2L["17"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["17"]["Text"] = [[CFRAME WALK]];


-- StarterGui.havocenchanted.MainFrame.ViewFrame.LocalPlayer.Cframe.CFRAMEWALK.Trigger.UITextSizeConstraint
G2L["18"] = Instance.new("UITextSizeConstraint", G2L["17"]);
G2L["18"]["MaxTextSize"] = 40;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.LocalPlayer.Cframe.CFRAMEWALK.Trigger.UIAspectRatioConstraint
G2L["19"] = Instance.new("UIAspectRatioConstraint", G2L["17"]);
G2L["19"]["AspectRatio"] = 13.9463;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.LocalPlayer.Cframe.CFRAMEWALK.Toggle
G2L["1a"] = Instance.new("TextLabel", G2L["16"]);
G2L["1a"]["BorderSizePixel"] = 0;
G2L["1a"]["TextSize"] = 14;
G2L["1a"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 171);
G2L["1a"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["1a"]["TextColor3"] = Color3.fromRGB(0, 0, 223);
G2L["1a"]["Size"] = UDim2.new(0.05745, 0, 0.76715, 0);
G2L["1a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1a"]["Text"] = [[]];
G2L["1a"]["Name"] = [[Toggle]];
G2L["1a"]["Position"] = UDim2.new(0.88346, 0, 0.15794, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.LocalPlayer.Cframe.CFRAMEWALK.Toggle.UICorner
G2L["1b"] = Instance.new("UICorner", G2L["1a"]);
G2L["1b"]["CornerRadius"] = UDim.new(0.2, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.LocalPlayer.Cframe.CFRAMEWALK.Toggle.UIAspectRatioConstraint
G2L["1c"] = Instance.new("UIAspectRatioConstraint", G2L["1a"]);
G2L["1c"]["AspectRatio"] = 1.04435;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.LocalPlayer.Cframe.CFRAMEWALK.Handle
G2L["1d"] = Instance.new("LocalScript", G2L["16"]);
G2L["1d"]["Name"] = [[Handle]];


-- StarterGui.havocenchanted.MainFrame.ViewFrame.LocalPlayer.Cframe.CFRAMEWALK.UIAspectRatioConstraint
G2L["1e"] = Instance.new("UIAspectRatioConstraint", G2L["16"]);
G2L["1e"]["AspectRatio"] = 13.9463;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.LocalPlayer.Cframe.CFRAMEWALK.KeyBind
G2L["1f"] = Instance.new("TextButton", G2L["16"]);
G2L["1f"]["TextWrapped"] = true;
G2L["1f"]["BorderSizePixel"] = 0;
G2L["1f"]["TextColor3"] = Color3.fromRGB(0, 0, 169);
G2L["1f"]["TextSize"] = 14;
G2L["1f"]["TextScaled"] = true;
G2L["1f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["1f"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["1f"]["Size"] = UDim2.new(0.30638, 0, 1, 0);
G2L["1f"]["BackgroundTransparency"] = 1;
G2L["1f"]["Name"] = [[KeyBind]];
G2L["1f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1f"]["Text"] = [[F]];
G2L["1f"]["Position"] = UDim2.new(-0, 0, 0, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.LocalPlayer.Cframe.CFRAMEWALK.KeyBind.UITextSizeConstraint
G2L["20"] = Instance.new("UITextSizeConstraint", G2L["1f"]);
G2L["20"]["MaxTextSize"] = 40;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.LocalPlayer.Cframe.CFRAMESPEED
G2L["21"] = Instance.new("Frame", G2L["10"]);
G2L["21"]["BorderSizePixel"] = 0;
G2L["21"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["21"]["Size"] = UDim2.new(1, 0, 0.1553, 0);
G2L["21"]["Position"] = UDim2.new(0, 0, 0.14026, 0);
G2L["21"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["21"]["Name"] = [[CFRAMESPEED]];
G2L["21"]["LayoutOrder"] = 2;
G2L["21"]["BackgroundTransparency"] = 1;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.LocalPlayer.Cframe.CFRAMESPEED.UIAspectRatioConstraint
G2L["22"] = Instance.new("UIAspectRatioConstraint", G2L["21"]);
G2L["22"]["AspectRatio"] = 13.9463;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.LocalPlayer.Cframe.CFRAMESPEED.SPEED
G2L["23"] = Instance.new("TextBox", G2L["21"]);
G2L["23"]["Name"] = [[SPEED]];
G2L["23"]["PlaceholderColor3"] = Color3.fromRGB(0, 0, 208);
G2L["23"]["BorderSizePixel"] = 0;
G2L["23"]["TextWrapped"] = true;
G2L["23"]["TextSize"] = 14;
G2L["23"]["TextColor3"] = Color3.fromRGB(0, 0, 169);
G2L["23"]["TextScaled"] = true;
G2L["23"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["23"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["23"]["PlaceholderText"] = [[CFRAME SPEED]];
G2L["23"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["23"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["23"]["Text"] = [[100]];
G2L["23"]["BackgroundTransparency"] = 1;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.LocalPlayer.Cframe.CFRAMESPEED.SPEED.UITextSizeConstraint
G2L["24"] = Instance.new("UITextSizeConstraint", G2L["23"]);
G2L["24"]["MaxTextSize"] = 40;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.LocalPlayer.Cframe.CFRAMESPEED.SPEED.UIAspectRatioConstraint
G2L["25"] = Instance.new("UIAspectRatioConstraint", G2L["23"]);
G2L["25"]["AspectRatio"] = 13.9463;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.LocalPlayer.Cframe.FLY
G2L["26"] = Instance.new("Frame", G2L["10"]);
G2L["26"]["BorderSizePixel"] = 0;
G2L["26"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["26"]["Size"] = UDim2.new(1, 0, 0.1553, 0);
G2L["26"]["Position"] = UDim2.new(0, 0, 0.14026, 0);
G2L["26"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["26"]["Name"] = [[FLY]];
G2L["26"]["LayoutOrder"] = 3;
G2L["26"]["BackgroundTransparency"] = 1;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.LocalPlayer.Cframe.FLY.Trigger
G2L["27"] = Instance.new("TextButton", G2L["26"]);
G2L["27"]["TextWrapped"] = true;
G2L["27"]["BorderSizePixel"] = 0;
G2L["27"]["TextColor3"] = Color3.fromRGB(0, 0, 169);
G2L["27"]["TextSize"] = 14;
G2L["27"]["TextScaled"] = true;
G2L["27"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 169);
G2L["27"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["27"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["27"]["BackgroundTransparency"] = 1;
G2L["27"]["Name"] = [[Trigger]];
G2L["27"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["27"]["Text"] = [[FLY]];


-- StarterGui.havocenchanted.MainFrame.ViewFrame.LocalPlayer.Cframe.FLY.Trigger.UITextSizeConstraint
G2L["28"] = Instance.new("UITextSizeConstraint", G2L["27"]);
G2L["28"]["MaxTextSize"] = 40;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.LocalPlayer.Cframe.FLY.Trigger.UIAspectRatioConstraint
G2L["29"] = Instance.new("UIAspectRatioConstraint", G2L["27"]);
G2L["29"]["AspectRatio"] = 13.9463;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.LocalPlayer.Cframe.FLY.Toggle
G2L["2a"] = Instance.new("TextLabel", G2L["26"]);
G2L["2a"]["BorderSizePixel"] = 0;
G2L["2a"]["TextSize"] = 14;
G2L["2a"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 171);
G2L["2a"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["2a"]["TextColor3"] = Color3.fromRGB(0, 0, 223);
G2L["2a"]["Size"] = UDim2.new(0.05745, 0, 0.76715, 0);
G2L["2a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2a"]["Text"] = [[]];
G2L["2a"]["Name"] = [[Toggle]];
G2L["2a"]["Position"] = UDim2.new(0.88346, 0, 0.15794, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.LocalPlayer.Cframe.FLY.Toggle.UICorner
G2L["2b"] = Instance.new("UICorner", G2L["2a"]);
G2L["2b"]["CornerRadius"] = UDim.new(0.2, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.LocalPlayer.Cframe.FLY.Toggle.UIAspectRatioConstraint
G2L["2c"] = Instance.new("UIAspectRatioConstraint", G2L["2a"]);
G2L["2c"]["AspectRatio"] = 1.04435;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.LocalPlayer.Cframe.FLY.UIAspectRatioConstraint
G2L["2d"] = Instance.new("UIAspectRatioConstraint", G2L["26"]);
G2L["2d"]["AspectRatio"] = 13.9463;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.LocalPlayer.Cframe.FLY.KeyBind
G2L["2e"] = Instance.new("TextButton", G2L["26"]);
G2L["2e"]["TextWrapped"] = true;
G2L["2e"]["BorderSizePixel"] = 0;
G2L["2e"]["TextColor3"] = Color3.fromRGB(0, 0, 169);
G2L["2e"]["TextSize"] = 14;
G2L["2e"]["TextScaled"] = true;
G2L["2e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["2e"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["2e"]["Size"] = UDim2.new(0.30638, 0, 1, 0);
G2L["2e"]["BackgroundTransparency"] = 1;
G2L["2e"]["Name"] = [[KeyBind]];
G2L["2e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["2e"]["Text"] = [[H]];
G2L["2e"]["Position"] = UDim2.new(-0, 0, 0, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.LocalPlayer.Cframe.FLY.KeyBind.UITextSizeConstraint
G2L["2f"] = Instance.new("UITextSizeConstraint", G2L["2e"]);
G2L["2f"]["MaxTextSize"] = 40;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.LocalPlayer.Cframe.FLY.Handle
G2L["30"] = Instance.new("LocalScript", G2L["26"]);
G2L["30"]["Name"] = [[Handle]];


-- StarterGui.havocenchanted.MainFrame.ViewFrame.LocalPlayer.Cframe.FLYSPEED
G2L["31"] = Instance.new("Frame", G2L["10"]);
G2L["31"]["BorderSizePixel"] = 0;
G2L["31"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["31"]["Size"] = UDim2.new(1, 0, 0.1553, 0);
G2L["31"]["Position"] = UDim2.new(0, 0, 0.14026, 0);
G2L["31"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["31"]["Name"] = [[FLYSPEED]];
G2L["31"]["LayoutOrder"] = 4;
G2L["31"]["BackgroundTransparency"] = 1;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.LocalPlayer.Cframe.FLYSPEED.UIAspectRatioConstraint
G2L["32"] = Instance.new("UIAspectRatioConstraint", G2L["31"]);
G2L["32"]["AspectRatio"] = 13.9463;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.LocalPlayer.Cframe.FLYSPEED.SPEED
G2L["33"] = Instance.new("TextBox", G2L["31"]);
G2L["33"]["Name"] = [[SPEED]];
G2L["33"]["PlaceholderColor3"] = Color3.fromRGB(0, 0, 208);
G2L["33"]["BorderSizePixel"] = 0;
G2L["33"]["TextWrapped"] = true;
G2L["33"]["TextSize"] = 14;
G2L["33"]["TextColor3"] = Color3.fromRGB(0, 0, 169);
G2L["33"]["TextScaled"] = true;
G2L["33"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["33"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["33"]["PlaceholderText"] = [[FLY SPEED]];
G2L["33"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["33"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["33"]["Text"] = [[200]];
G2L["33"]["BackgroundTransparency"] = 1;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.LocalPlayer.Cframe.FLYSPEED.SPEED.UITextSizeConstraint
G2L["34"] = Instance.new("UITextSizeConstraint", G2L["33"]);
G2L["34"]["MaxTextSize"] = 40;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.LocalPlayer.Cframe.FLYSPEED.SPEED.UIAspectRatioConstraint
G2L["35"] = Instance.new("UIAspectRatioConstraint", G2L["33"]);
G2L["35"]["AspectRatio"] = 13.9463;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.LocalPlayer.UIAspectRatioConstraint
G2L["36"] = Instance.new("UIAspectRatioConstraint", G2L["e"]);
G2L["36"]["AspectRatio"] = 1.61538;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.LocalPlayer.Playersettings
G2L["37"] = Instance.new("Frame", G2L["e"]);
G2L["37"]["BorderSizePixel"] = 0;
G2L["37"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 8);
G2L["37"]["AutomaticSize"] = Enum.AutomaticSize.Y;
G2L["37"]["Size"] = UDim2.new(0.906, 0, 0.676, 0);
G2L["37"]["Position"] = UDim2.new(0.0566, 0, -0, 0);
G2L["37"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["37"]["Name"] = [[Playersettings]];
G2L["37"]["LayoutOrder"] = 3;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.LocalPlayer.Playersettings.UICorner
G2L["38"] = Instance.new("UICorner", G2L["37"]);
G2L["38"]["CornerRadius"] = UDim.new(0.05, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.LocalPlayer.Playersettings.Title
G2L["39"] = Instance.new("TextLabel", G2L["37"]);
G2L["39"]["TextWrapped"] = true;
G2L["39"]["BorderSizePixel"] = 0;
G2L["39"]["TextSize"] = 14;
G2L["39"]["TextScaled"] = true;
G2L["39"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["39"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["39"]["TextColor3"] = Color3.fromRGB(0, 0, 255);
G2L["39"]["BackgroundTransparency"] = 1;
G2L["39"]["Size"] = UDim2.new(1, 0, 0.14026, 0);
G2L["39"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["39"]["Text"] = [[CHARACTER SETTINGS]];
G2L["39"]["Name"] = [[Title]];
G2L["39"]["Position"] = UDim2.new(-0, 0, -0, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.LocalPlayer.Playersettings.Title.UIAspectRatioConstraint
G2L["3a"] = Instance.new("UIAspectRatioConstraint", G2L["39"]);
G2L["3a"]["AspectRatio"] = 15.44224;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.LocalPlayer.Playersettings.UIListLayout
G2L["3b"] = Instance.new("UIListLayout", G2L["37"]);
G2L["3b"]["SortOrder"] = Enum.SortOrder.LayoutOrder;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.LocalPlayer.Playersettings.UIAspectRatioConstraint
G2L["3c"] = Instance.new("UIAspectRatioConstraint", G2L["37"]);
G2L["3c"]["AspectRatio"] = 2.1659;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.LocalPlayer.Playersettings.INFSTAMINA
G2L["3d"] = Instance.new("Frame", G2L["37"]);
G2L["3d"]["BorderSizePixel"] = 0;
G2L["3d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["3d"]["Size"] = UDim2.new(1, 0, 0.1553, 0);
G2L["3d"]["Position"] = UDim2.new(0, 0, 0.14026, 0);
G2L["3d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3d"]["Name"] = [[INFSTAMINA]];
G2L["3d"]["LayoutOrder"] = 1;
G2L["3d"]["BackgroundTransparency"] = 1;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.LocalPlayer.Playersettings.INFSTAMINA.Trigger
G2L["3e"] = Instance.new("TextButton", G2L["3d"]);
G2L["3e"]["TextWrapped"] = true;
G2L["3e"]["BorderSizePixel"] = 0;
G2L["3e"]["TextColor3"] = Color3.fromRGB(0, 0, 169);
G2L["3e"]["TextSize"] = 14;
G2L["3e"]["TextScaled"] = true;
G2L["3e"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 169);
G2L["3e"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["3e"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["3e"]["BackgroundTransparency"] = 1;
G2L["3e"]["Name"] = [[Trigger]];
G2L["3e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["3e"]["Text"] = [[INF STAMINA]];


-- StarterGui.havocenchanted.MainFrame.ViewFrame.LocalPlayer.Playersettings.INFSTAMINA.Trigger.UITextSizeConstraint
G2L["3f"] = Instance.new("UITextSizeConstraint", G2L["3e"]);
G2L["3f"]["MaxTextSize"] = 40;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.LocalPlayer.Playersettings.INFSTAMINA.Trigger.UIAspectRatioConstraint
G2L["40"] = Instance.new("UIAspectRatioConstraint", G2L["3e"]);
G2L["40"]["AspectRatio"] = 13.9463;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.LocalPlayer.Playersettings.INFSTAMINA.Toggle
G2L["41"] = Instance.new("TextLabel", G2L["3d"]);
G2L["41"]["BorderSizePixel"] = 0;
G2L["41"]["TextSize"] = 14;
G2L["41"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 171);
G2L["41"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["41"]["TextColor3"] = Color3.fromRGB(0, 0, 223);
G2L["41"]["Size"] = UDim2.new(0.05745, 0, 0.76715, 0);
G2L["41"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["41"]["Text"] = [[]];
G2L["41"]["Name"] = [[Toggle]];
G2L["41"]["Position"] = UDim2.new(0.88346, 0, 0.15794, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.LocalPlayer.Playersettings.INFSTAMINA.Toggle.UICorner
G2L["42"] = Instance.new("UICorner", G2L["41"]);
G2L["42"]["CornerRadius"] = UDim.new(0.2, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.LocalPlayer.Playersettings.INFSTAMINA.Toggle.UIAspectRatioConstraint
G2L["43"] = Instance.new("UIAspectRatioConstraint", G2L["41"]);
G2L["43"]["AspectRatio"] = 1.04435;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.LocalPlayer.Playersettings.INFSTAMINA.UIAspectRatioConstraint
G2L["44"] = Instance.new("UIAspectRatioConstraint", G2L["3d"]);
G2L["44"]["AspectRatio"] = 13.9463;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.LocalPlayer.Playersettings.INFSTAMINA.Handle
G2L["45"] = Instance.new("LocalScript", G2L["3d"]);
G2L["45"]["Name"] = [[Handle]];


-- StarterGui.havocenchanted.MainFrame.ViewFrame.LocalPlayer.Playersettings.NoShootingRecoil
G2L["46"] = Instance.new("Frame", G2L["37"]);
G2L["46"]["BorderSizePixel"] = 0;
G2L["46"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["46"]["Size"] = UDim2.new(1, 0, 0.1553, 0);
G2L["46"]["Position"] = UDim2.new(0, 0, 0.14026, 0);
G2L["46"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["46"]["Name"] = [[NoShootingRecoil]];
G2L["46"]["LayoutOrder"] = 2;
G2L["46"]["BackgroundTransparency"] = 1;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.LocalPlayer.Playersettings.NoShootingRecoil.Trigger
G2L["47"] = Instance.new("TextButton", G2L["46"]);
G2L["47"]["TextWrapped"] = true;
G2L["47"]["BorderSizePixel"] = 0;
G2L["47"]["TextColor3"] = Color3.fromRGB(0, 0, 169);
G2L["47"]["TextSize"] = 14;
G2L["47"]["TextScaled"] = true;
G2L["47"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 169);
G2L["47"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["47"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["47"]["BackgroundTransparency"] = 1;
G2L["47"]["Name"] = [[Trigger]];
G2L["47"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["47"]["Text"] = [[NO SHOOTING RECOIL]];


-- StarterGui.havocenchanted.MainFrame.ViewFrame.LocalPlayer.Playersettings.NoShootingRecoil.Trigger.UITextSizeConstraint
G2L["48"] = Instance.new("UITextSizeConstraint", G2L["47"]);
G2L["48"]["MaxTextSize"] = 40;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.LocalPlayer.Playersettings.NoShootingRecoil.Trigger.UIAspectRatioConstraint
G2L["49"] = Instance.new("UIAspectRatioConstraint", G2L["47"]);
G2L["49"]["AspectRatio"] = 13.9463;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.LocalPlayer.Playersettings.NoShootingRecoil.Toggle
G2L["4a"] = Instance.new("TextLabel", G2L["46"]);
G2L["4a"]["BorderSizePixel"] = 0;
G2L["4a"]["TextSize"] = 14;
G2L["4a"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 171);
G2L["4a"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["4a"]["TextColor3"] = Color3.fromRGB(0, 0, 223);
G2L["4a"]["Size"] = UDim2.new(0.05745, 0, 0.76715, 0);
G2L["4a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["4a"]["Text"] = [[]];
G2L["4a"]["Name"] = [[Toggle]];
G2L["4a"]["Position"] = UDim2.new(0.88346, 0, 0.15794, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.LocalPlayer.Playersettings.NoShootingRecoil.Toggle.UICorner
G2L["4b"] = Instance.new("UICorner", G2L["4a"]);
G2L["4b"]["CornerRadius"] = UDim.new(0.2, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.LocalPlayer.Playersettings.NoShootingRecoil.Toggle.UIAspectRatioConstraint
G2L["4c"] = Instance.new("UIAspectRatioConstraint", G2L["4a"]);
G2L["4c"]["AspectRatio"] = 1.04435;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.LocalPlayer.Playersettings.NoShootingRecoil.UIAspectRatioConstraint
G2L["4d"] = Instance.new("UIAspectRatioConstraint", G2L["46"]);
G2L["4d"]["AspectRatio"] = 13.9463;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.LocalPlayer.Playersettings.NoShootingRecoil.Handle
G2L["4e"] = Instance.new("LocalScript", G2L["46"]);
G2L["4e"]["Name"] = [[Handle]];


-- StarterGui.havocenchanted.MainFrame.ViewFrame.LocalPlayer.Playersettings.AntiStomp
G2L["4f"] = Instance.new("Frame", G2L["37"]);
G2L["4f"]["BorderSizePixel"] = 0;
G2L["4f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["4f"]["Size"] = UDim2.new(1, 0, 0.1553, 0);
G2L["4f"]["Position"] = UDim2.new(0, 0, 0.14026, 0);
G2L["4f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["4f"]["Name"] = [[AntiStomp]];
G2L["4f"]["LayoutOrder"] = 3;
G2L["4f"]["BackgroundTransparency"] = 1;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.LocalPlayer.Playersettings.AntiStomp.Trigger
G2L["50"] = Instance.new("TextButton", G2L["4f"]);
G2L["50"]["TextWrapped"] = true;
G2L["50"]["BorderSizePixel"] = 0;
G2L["50"]["TextColor3"] = Color3.fromRGB(0, 0, 169);
G2L["50"]["TextSize"] = 14;
G2L["50"]["TextScaled"] = true;
G2L["50"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 169);
G2L["50"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["50"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["50"]["BackgroundTransparency"] = 1;
G2L["50"]["Name"] = [[Trigger]];
G2L["50"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["50"]["Text"] = [[ANTI STOMP]];


-- StarterGui.havocenchanted.MainFrame.ViewFrame.LocalPlayer.Playersettings.AntiStomp.Trigger.UITextSizeConstraint
G2L["51"] = Instance.new("UITextSizeConstraint", G2L["50"]);
G2L["51"]["MaxTextSize"] = 40;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.LocalPlayer.Playersettings.AntiStomp.Trigger.UIAspectRatioConstraint
G2L["52"] = Instance.new("UIAspectRatioConstraint", G2L["50"]);
G2L["52"]["AspectRatio"] = 13.9463;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.LocalPlayer.Playersettings.AntiStomp.Toggle
G2L["53"] = Instance.new("TextLabel", G2L["4f"]);
G2L["53"]["BorderSizePixel"] = 0;
G2L["53"]["TextSize"] = 14;
G2L["53"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 171);
G2L["53"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["53"]["TextColor3"] = Color3.fromRGB(0, 0, 223);
G2L["53"]["Size"] = UDim2.new(0.05745, 0, 0.76715, 0);
G2L["53"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["53"]["Text"] = [[]];
G2L["53"]["Name"] = [[Toggle]];
G2L["53"]["Position"] = UDim2.new(0.88346, 0, 0.15794, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.LocalPlayer.Playersettings.AntiStomp.Toggle.UICorner
G2L["54"] = Instance.new("UICorner", G2L["53"]);
G2L["54"]["CornerRadius"] = UDim.new(0.2, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.LocalPlayer.Playersettings.AntiStomp.Toggle.UIAspectRatioConstraint
G2L["55"] = Instance.new("UIAspectRatioConstraint", G2L["53"]);
G2L["55"]["AspectRatio"] = 1.04435;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.LocalPlayer.Playersettings.AntiStomp.UIAspectRatioConstraint
G2L["56"] = Instance.new("UIAspectRatioConstraint", G2L["4f"]);
G2L["56"]["AspectRatio"] = 13.9463;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.LocalPlayer.Playersettings.AntiStomp.Handle
G2L["57"] = Instance.new("LocalScript", G2L["4f"]);
G2L["57"]["Name"] = [[Handle]];


-- StarterGui.havocenchanted.MainFrame.ViewFrame.LocalPlayer.Playersettings.NoSeats
G2L["58"] = Instance.new("Frame", G2L["37"]);
G2L["58"]["BorderSizePixel"] = 0;
G2L["58"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["58"]["Size"] = UDim2.new(1, 0, 0.1553, 0);
G2L["58"]["Position"] = UDim2.new(0, 0, 0.14026, 0);
G2L["58"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["58"]["Name"] = [[NoSeats]];
G2L["58"]["LayoutOrder"] = 3;
G2L["58"]["BackgroundTransparency"] = 1;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.LocalPlayer.Playersettings.NoSeats.Trigger
G2L["59"] = Instance.new("TextButton", G2L["58"]);
G2L["59"]["TextWrapped"] = true;
G2L["59"]["BorderSizePixel"] = 0;
G2L["59"]["TextColor3"] = Color3.fromRGB(0, 0, 169);
G2L["59"]["TextSize"] = 14;
G2L["59"]["TextScaled"] = true;
G2L["59"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 169);
G2L["59"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["59"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["59"]["BackgroundTransparency"] = 1;
G2L["59"]["Name"] = [[Trigger]];
G2L["59"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["59"]["Text"] = [[NO SEATS]];


-- StarterGui.havocenchanted.MainFrame.ViewFrame.LocalPlayer.Playersettings.NoSeats.Trigger.UITextSizeConstraint
G2L["5a"] = Instance.new("UITextSizeConstraint", G2L["59"]);
G2L["5a"]["MaxTextSize"] = 40;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.LocalPlayer.Playersettings.NoSeats.Trigger.UIAspectRatioConstraint
G2L["5b"] = Instance.new("UIAspectRatioConstraint", G2L["59"]);
G2L["5b"]["AspectRatio"] = 13.9463;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.LocalPlayer.Playersettings.NoSeats.Toggle
G2L["5c"] = Instance.new("TextLabel", G2L["58"]);
G2L["5c"]["BorderSizePixel"] = 0;
G2L["5c"]["TextSize"] = 14;
G2L["5c"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 171);
G2L["5c"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["5c"]["TextColor3"] = Color3.fromRGB(0, 0, 223);
G2L["5c"]["Size"] = UDim2.new(0.05745, 0, 0.76715, 0);
G2L["5c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["5c"]["Text"] = [[]];
G2L["5c"]["Name"] = [[Toggle]];
G2L["5c"]["Position"] = UDim2.new(0.88346, 0, 0.15794, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.LocalPlayer.Playersettings.NoSeats.Toggle.UICorner
G2L["5d"] = Instance.new("UICorner", G2L["5c"]);
G2L["5d"]["CornerRadius"] = UDim.new(0.2, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.LocalPlayer.Playersettings.NoSeats.Toggle.UIAspectRatioConstraint
G2L["5e"] = Instance.new("UIAspectRatioConstraint", G2L["5c"]);
G2L["5e"]["AspectRatio"] = 1.04435;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.LocalPlayer.Playersettings.NoSeats.UIAspectRatioConstraint
G2L["5f"] = Instance.new("UIAspectRatioConstraint", G2L["58"]);
G2L["5f"]["AspectRatio"] = 13.9463;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.LocalPlayer.Playersettings.NoSeats.Handle
G2L["60"] = Instance.new("LocalScript", G2L["58"]);
G2L["60"]["Name"] = [[Handle]];


-- StarterGui.havocenchanted.MainFrame.ViewFrame.LocalPlayer.UIPadding
G2L["61"] = Instance.new("UIPadding", G2L["e"]);
G2L["61"]["PaddingTop"] = UDim.new(0.03, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player
G2L["62"] = Instance.new("ScrollingFrame", G2L["d"]);
G2L["62"]["Visible"] = false;
G2L["62"]["Active"] = true;
G2L["62"]["ScrollingDirection"] = Enum.ScrollingDirection.Y;
G2L["62"]["BorderSizePixel"] = 0;
G2L["62"]["CanvasSize"] = UDim2.new(0, 0, 3, 0);
G2L["62"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["62"]["Name"] = [[Player]];
G2L["62"]["AutomaticCanvasSize"] = Enum.AutomaticSize.Y;
G2L["62"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["62"]["ScrollBarImageColor3"] = Color3.fromRGB(0, 0, 0);
G2L["62"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["62"]["ScrollBarThickness"] = 0;
G2L["62"]["BackgroundTransparency"] = 1;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.UIListLayout
G2L["63"] = Instance.new("UIListLayout", G2L["62"]);
G2L["63"]["HorizontalAlignment"] = Enum.HorizontalAlignment.Center;
G2L["63"]["Padding"] = UDim.new(0.05, 0);
G2L["63"]["SortOrder"] = Enum.SortOrder.LayoutOrder;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.UIAspectRatioConstraint
G2L["64"] = Instance.new("UIAspectRatioConstraint", G2L["62"]);
G2L["64"]["AspectRatio"] = 1.61538;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.Esp
G2L["65"] = Instance.new("Frame", G2L["62"]);
G2L["65"]["BorderSizePixel"] = 0;
G2L["65"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 8);
G2L["65"]["AutomaticSize"] = Enum.AutomaticSize.Y;
G2L["65"]["Size"] = UDim2.new(0.90639, 0, 0.67436, 0);
G2L["65"]["Position"] = UDim2.new(0.0468, 0, 0.03093, 0);
G2L["65"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["65"]["Name"] = [[Esp]];


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.Esp.UICorner
G2L["66"] = Instance.new("UICorner", G2L["65"]);
G2L["66"]["CornerRadius"] = UDim.new(0.05, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.Esp.Title
G2L["67"] = Instance.new("TextLabel", G2L["65"]);
G2L["67"]["TextWrapped"] = true;
G2L["67"]["BorderSizePixel"] = 0;
G2L["67"]["TextSize"] = 14;
G2L["67"]["TextScaled"] = true;
G2L["67"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["67"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["67"]["TextColor3"] = Color3.fromRGB(0, 0, 255);
G2L["67"]["BackgroundTransparency"] = 1;
G2L["67"]["Size"] = UDim2.new(1, 0, 0.14026, 0);
G2L["67"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["67"]["Text"] = [[ESP]];
G2L["67"]["Name"] = [[Title]];
G2L["67"]["Position"] = UDim2.new(-0, 0, -0, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.Esp.Title.UIAspectRatioConstraint
G2L["68"] = Instance.new("UIAspectRatioConstraint", G2L["67"]);
G2L["68"]["AspectRatio"] = 15.44224;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.Esp.UIListLayout
G2L["69"] = Instance.new("UIListLayout", G2L["65"]);
G2L["69"]["SortOrder"] = Enum.SortOrder.LayoutOrder;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.Esp.ESP
G2L["6a"] = Instance.new("Frame", G2L["65"]);
G2L["6a"]["BorderSizePixel"] = 0;
G2L["6a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["6a"]["Size"] = UDim2.new(1, 0, 0.1553, 0);
G2L["6a"]["Position"] = UDim2.new(0, 0, 0.29556, 0);
G2L["6a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["6a"]["Name"] = [[ESP]];
G2L["6a"]["LayoutOrder"] = 2;
G2L["6a"]["BackgroundTransparency"] = 1;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.Esp.ESP.Trigger
G2L["6b"] = Instance.new("TextButton", G2L["6a"]);
G2L["6b"]["TextWrapped"] = true;
G2L["6b"]["BorderSizePixel"] = 0;
G2L["6b"]["TextColor3"] = Color3.fromRGB(0, 0, 169);
G2L["6b"]["TextSize"] = 14;
G2L["6b"]["TextScaled"] = true;
G2L["6b"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 169);
G2L["6b"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["6b"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["6b"]["BackgroundTransparency"] = 1;
G2L["6b"]["Name"] = [[Trigger]];
G2L["6b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["6b"]["Text"] = [[ESP]];


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.Esp.ESP.Trigger.UITextSizeConstraint
G2L["6c"] = Instance.new("UITextSizeConstraint", G2L["6b"]);
G2L["6c"]["MaxTextSize"] = 40;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.Esp.ESP.Trigger.UIAspectRatioConstraint
G2L["6d"] = Instance.new("UIAspectRatioConstraint", G2L["6b"]);
G2L["6d"]["AspectRatio"] = 13.9463;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.Esp.ESP.Toggle
G2L["6e"] = Instance.new("TextLabel", G2L["6a"]);
G2L["6e"]["BorderSizePixel"] = 0;
G2L["6e"]["TextSize"] = 14;
G2L["6e"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 171);
G2L["6e"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["6e"]["TextColor3"] = Color3.fromRGB(0, 0, 223);
G2L["6e"]["Size"] = UDim2.new(0.05745, 0, 0.76715, 0);
G2L["6e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["6e"]["Text"] = [[]];
G2L["6e"]["Name"] = [[Toggle]];
G2L["6e"]["Position"] = UDim2.new(0.88346, 0, 0.15794, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.Esp.ESP.Toggle.UICorner
G2L["6f"] = Instance.new("UICorner", G2L["6e"]);
G2L["6f"]["CornerRadius"] = UDim.new(0.2, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.Esp.ESP.Toggle.UIAspectRatioConstraint
G2L["70"] = Instance.new("UIAspectRatioConstraint", G2L["6e"]);
G2L["70"]["AspectRatio"] = 1.04435;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.Esp.ESP.UIAspectRatioConstraint
G2L["71"] = Instance.new("UIAspectRatioConstraint", G2L["6a"]);
G2L["71"]["AspectRatio"] = 13.9463;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.Esp.ALWAYSONTOP
G2L["72"] = Instance.new("Frame", G2L["65"]);
G2L["72"]["BorderSizePixel"] = 0;
G2L["72"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["72"]["Size"] = UDim2.new(1, 0, 0.1553, 0);
G2L["72"]["Position"] = UDim2.new(0, 0, 0.29556, 0);
G2L["72"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["72"]["Name"] = [[ALWAYSONTOP]];
G2L["72"]["LayoutOrder"] = 2;
G2L["72"]["BackgroundTransparency"] = 1;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.Esp.ALWAYSONTOP.Trigger
G2L["73"] = Instance.new("TextButton", G2L["72"]);
G2L["73"]["TextWrapped"] = true;
G2L["73"]["BorderSizePixel"] = 0;
G2L["73"]["TextColor3"] = Color3.fromRGB(0, 0, 169);
G2L["73"]["TextSize"] = 14;
G2L["73"]["TextScaled"] = true;
G2L["73"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 169);
G2L["73"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["73"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["73"]["BackgroundTransparency"] = 1;
G2L["73"]["Name"] = [[Trigger]];
G2L["73"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["73"]["Text"] = [[ALWAYS ON TOP]];


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.Esp.ALWAYSONTOP.Trigger.UITextSizeConstraint
G2L["74"] = Instance.new("UITextSizeConstraint", G2L["73"]);
G2L["74"]["MaxTextSize"] = 40;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.Esp.ALWAYSONTOP.Trigger.UIAspectRatioConstraint
G2L["75"] = Instance.new("UIAspectRatioConstraint", G2L["73"]);
G2L["75"]["AspectRatio"] = 13.9463;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.Esp.ALWAYSONTOP.Toggle
G2L["76"] = Instance.new("TextLabel", G2L["72"]);
G2L["76"]["BorderSizePixel"] = 0;
G2L["76"]["TextSize"] = 14;
G2L["76"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 171);
G2L["76"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["76"]["TextColor3"] = Color3.fromRGB(0, 0, 223);
G2L["76"]["Size"] = UDim2.new(0.05745, 0, 0.76715, 0);
G2L["76"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["76"]["Text"] = [[]];
G2L["76"]["Name"] = [[Toggle]];
G2L["76"]["Position"] = UDim2.new(0.88346, 0, 0.15794, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.Esp.ALWAYSONTOP.Toggle.UICorner
G2L["77"] = Instance.new("UICorner", G2L["76"]);
G2L["77"]["CornerRadius"] = UDim.new(0.2, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.Esp.ALWAYSONTOP.Toggle.UIAspectRatioConstraint
G2L["78"] = Instance.new("UIAspectRatioConstraint", G2L["76"]);
G2L["78"]["AspectRatio"] = 1.04435;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.Esp.ALWAYSONTOP.UIAspectRatioConstraint
G2L["79"] = Instance.new("UIAspectRatioConstraint", G2L["72"]);
G2L["79"]["AspectRatio"] = 13.9463;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.Esp.BOX
G2L["7a"] = Instance.new("Frame", G2L["65"]);
G2L["7a"]["BorderSizePixel"] = 0;
G2L["7a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["7a"]["Size"] = UDim2.new(1, 0, 0.1553, 0);
G2L["7a"]["Position"] = UDim2.new(0, 0, 0.29556, 0);
G2L["7a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["7a"]["Name"] = [[BOX]];
G2L["7a"]["LayoutOrder"] = 3;
G2L["7a"]["BackgroundTransparency"] = 1;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.Esp.BOX.Trigger
G2L["7b"] = Instance.new("TextButton", G2L["7a"]);
G2L["7b"]["TextWrapped"] = true;
G2L["7b"]["BorderSizePixel"] = 0;
G2L["7b"]["TextColor3"] = Color3.fromRGB(0, 0, 169);
G2L["7b"]["TextSize"] = 14;
G2L["7b"]["TextScaled"] = true;
G2L["7b"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 169);
G2L["7b"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["7b"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["7b"]["BackgroundTransparency"] = 1;
G2L["7b"]["Name"] = [[Trigger]];
G2L["7b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["7b"]["Text"] = [[BOX]];


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.Esp.BOX.Trigger.UITextSizeConstraint
G2L["7c"] = Instance.new("UITextSizeConstraint", G2L["7b"]);
G2L["7c"]["MaxTextSize"] = 40;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.Esp.BOX.Trigger.UIAspectRatioConstraint
G2L["7d"] = Instance.new("UIAspectRatioConstraint", G2L["7b"]);
G2L["7d"]["AspectRatio"] = 13.9463;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.Esp.BOX.Toggle
G2L["7e"] = Instance.new("TextLabel", G2L["7a"]);
G2L["7e"]["BorderSizePixel"] = 0;
G2L["7e"]["TextSize"] = 14;
G2L["7e"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 171);
G2L["7e"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["7e"]["TextColor3"] = Color3.fromRGB(0, 0, 223);
G2L["7e"]["Size"] = UDim2.new(0.05745, 0, 0.76715, 0);
G2L["7e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["7e"]["Text"] = [[]];
G2L["7e"]["Name"] = [[Toggle]];
G2L["7e"]["Position"] = UDim2.new(0.88346, 0, 0.15794, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.Esp.BOX.Toggle.UICorner
G2L["7f"] = Instance.new("UICorner", G2L["7e"]);
G2L["7f"]["CornerRadius"] = UDim.new(0.2, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.Esp.BOX.Toggle.UIAspectRatioConstraint
G2L["80"] = Instance.new("UIAspectRatioConstraint", G2L["7e"]);
G2L["80"]["AspectRatio"] = 1.04435;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.Esp.BOX.UIAspectRatioConstraint
G2L["81"] = Instance.new("UIAspectRatioConstraint", G2L["7a"]);
G2L["81"]["AspectRatio"] = 13.9463;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.Esp.ESP
G2L["82"] = Instance.new("LocalScript", G2L["65"]);
G2L["82"]["Name"] = [[ESP]];


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.Esp.ESPGUI
G2L["83"] = Instance.new("BillboardGui", G2L["65"]);
G2L["83"]["Active"] = true;
G2L["83"]["AlwaysOnTop"] = true;
G2L["83"]["Size"] = UDim2.new(7, 0, 9, 0);
G2L["83"]["Enabled"] = false;
G2L["83"]["ResetOnSpawn"] = false;
G2L["83"]["Name"] = [[ESPGUI]];
G2L["83"]["ZIndexBehavior"] = Enum.ZIndexBehavior.Sibling;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.Esp.ESPGUI.PLAYERNAME
G2L["84"] = Instance.new("TextLabel", G2L["83"]);
G2L["84"]["TextWrapped"] = true;
G2L["84"]["BorderSizePixel"] = 0;
G2L["84"]["TextSize"] = 14;
G2L["84"]["TextScaled"] = true;
G2L["84"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["84"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["84"]["TextColor3"] = Color3.fromRGB(0, 0, 0);
G2L["84"]["BackgroundTransparency"] = 1;
G2L["84"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["84"]["Size"] = UDim2.new(0, 100, 0, 16);
G2L["84"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["84"]["Text"] = [[scafrysnanty]];
G2L["84"]["Name"] = [[PLAYERNAME]];
G2L["84"]["Position"] = UDim2.new(0.5, 0, 0, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.Esp.ESPGUI.BOX
G2L["85"] = Instance.new("ImageLabel", G2L["83"]);
G2L["85"]["BorderSizePixel"] = 0;
G2L["85"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["85"]["ImageColor3"] = Color3.fromRGB(0, 0, 0);
G2L["85"]["Image"] = [[rbxassetid://130107238038303]];
G2L["85"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["85"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["85"]["BackgroundTransparency"] = 1;
G2L["85"]["Name"] = [[BOX]];


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.Esp.ESPGUI.Health
G2L["86"] = Instance.new("Frame", G2L["83"]);
G2L["86"]["BorderSizePixel"] = 0;
G2L["86"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0);
G2L["86"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["86"]["Size"] = UDim2.new(0.09, 0, 0.75, 0);
G2L["86"]["Position"] = UDim2.new(0.95, 0, 0.5, 0);
G2L["86"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["86"]["Name"] = [[Health]];


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.Esp.ESPGUI.Health.Bar
G2L["87"] = Instance.new("Frame", G2L["86"]);
G2L["87"]["BorderSizePixel"] = 0;
G2L["87"]["BackgroundColor3"] = Color3.fromRGB(27, 4, 96);
G2L["87"]["AnchorPoint"] = Vector2.new(0.5, 0.5);
G2L["87"]["Size"] = UDim2.new(0.8, 0, 0.975, 0);
G2L["87"]["Position"] = UDim2.new(0.5, 0, 0.5, 0);
G2L["87"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["87"]["Name"] = [[Bar]];
G2L["87"]["BackgroundTransparency"] = 1;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.Esp.ESPGUI.Health.Bar.Slide
G2L["88"] = Instance.new("Frame", G2L["87"]);
G2L["88"]["BorderSizePixel"] = 0;
G2L["88"]["BackgroundColor3"] = Color3.fromRGB(27, 4, 96);
G2L["88"]["AnchorPoint"] = Vector2.new(0.5, 1);
G2L["88"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["88"]["Position"] = UDim2.new(0.5, 0, 1, 0);
G2L["88"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["88"]["Name"] = [[Slide]];


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.UIPadding
G2L["89"] = Instance.new("UIPadding", G2L["62"]);
G2L["89"]["PaddingTop"] = UDim.new(0.03, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.View
G2L["8a"] = Instance.new("Frame", G2L["62"]);
G2L["8a"]["BorderSizePixel"] = 0;
G2L["8a"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 8);
G2L["8a"]["AutomaticSize"] = Enum.AutomaticSize.Y;
G2L["8a"]["Size"] = UDim2.new(0.90639, 0, 0.67436, 0);
G2L["8a"]["Position"] = UDim2.new(0.0468, 0, 0.03093, 0);
G2L["8a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["8a"]["Name"] = [[View]];
G2L["8a"]["LayoutOrder"] = 2;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.View.UICorner
G2L["8b"] = Instance.new("UICorner", G2L["8a"]);
G2L["8b"]["CornerRadius"] = UDim.new(0.05, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.View.Title
G2L["8c"] = Instance.new("TextLabel", G2L["8a"]);
G2L["8c"]["TextWrapped"] = true;
G2L["8c"]["BorderSizePixel"] = 0;
G2L["8c"]["TextSize"] = 14;
G2L["8c"]["TextScaled"] = true;
G2L["8c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["8c"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["8c"]["TextColor3"] = Color3.fromRGB(0, 0, 255);
G2L["8c"]["BackgroundTransparency"] = 1;
G2L["8c"]["Size"] = UDim2.new(1, 0, 0.14026, 0);
G2L["8c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["8c"]["Text"] = [[VIEW]];
G2L["8c"]["Name"] = [[Title]];
G2L["8c"]["Position"] = UDim2.new(-0, 0, -0, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.View.Title.UIAspectRatioConstraint
G2L["8d"] = Instance.new("UIAspectRatioConstraint", G2L["8c"]);
G2L["8d"]["AspectRatio"] = 15.44224;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.View.UIListLayout
G2L["8e"] = Instance.new("UIListLayout", G2L["8a"]);
G2L["8e"]["SortOrder"] = Enum.SortOrder.LayoutOrder;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.View.VIEW
G2L["8f"] = Instance.new("Frame", G2L["8a"]);
G2L["8f"]["BorderSizePixel"] = 0;
G2L["8f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["8f"]["Size"] = UDim2.new(1, 0, 0.1553, 0);
G2L["8f"]["Position"] = UDim2.new(0, 0, 0.29556, 0);
G2L["8f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["8f"]["Name"] = [[VIEW]];
G2L["8f"]["LayoutOrder"] = 1;
G2L["8f"]["BackgroundTransparency"] = 1;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.View.VIEW.Trigger
G2L["90"] = Instance.new("TextButton", G2L["8f"]);
G2L["90"]["TextWrapped"] = true;
G2L["90"]["BorderSizePixel"] = 0;
G2L["90"]["TextColor3"] = Color3.fromRGB(0, 0, 169);
G2L["90"]["TextSize"] = 14;
G2L["90"]["TextScaled"] = true;
G2L["90"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 169);
G2L["90"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["90"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["90"]["BackgroundTransparency"] = 1;
G2L["90"]["Name"] = [[Trigger]];
G2L["90"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["90"]["Text"] = [[SPECTATE]];


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.View.VIEW.Trigger.UITextSizeConstraint
G2L["91"] = Instance.new("UITextSizeConstraint", G2L["90"]);
G2L["91"]["MaxTextSize"] = 40;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.View.VIEW.Trigger.UIAspectRatioConstraint
G2L["92"] = Instance.new("UIAspectRatioConstraint", G2L["90"]);
G2L["92"]["AspectRatio"] = 13.9463;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.View.VIEW.Toggle
G2L["93"] = Instance.new("TextLabel", G2L["8f"]);
G2L["93"]["BorderSizePixel"] = 0;
G2L["93"]["TextSize"] = 14;
G2L["93"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 171);
G2L["93"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["93"]["TextColor3"] = Color3.fromRGB(0, 0, 223);
G2L["93"]["Size"] = UDim2.new(0.05745, 0, 0.76715, 0);
G2L["93"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["93"]["Text"] = [[]];
G2L["93"]["Name"] = [[Toggle]];
G2L["93"]["Position"] = UDim2.new(0.88346, 0, 0.15794, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.View.VIEW.Toggle.UICorner
G2L["94"] = Instance.new("UICorner", G2L["93"]);
G2L["94"]["CornerRadius"] = UDim.new(0.2, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.View.VIEW.Toggle.UIAspectRatioConstraint
G2L["95"] = Instance.new("UIAspectRatioConstraint", G2L["93"]);
G2L["95"]["AspectRatio"] = 1.04435;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.View.VIEW.UIAspectRatioConstraint
G2L["96"] = Instance.new("UIAspectRatioConstraint", G2L["8f"]);
G2L["96"]["AspectRatio"] = 13.9463;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.View.UIAspectRatioConstraint
G2L["97"] = Instance.new("UIAspectRatioConstraint", G2L["8a"]);
G2L["97"]["AspectRatio"] = 2.17121;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.View.TARGETNAME
G2L["98"] = Instance.new("Frame", G2L["8a"]);
G2L["98"]["BorderSizePixel"] = 0;
G2L["98"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["98"]["Size"] = UDim2.new(1, 0, 0.1553, 0);
G2L["98"]["Position"] = UDim2.new(0, 0, 0.14026, 0);
G2L["98"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["98"]["Name"] = [[TARGETNAME]];
G2L["98"]["LayoutOrder"] = 2;
G2L["98"]["BackgroundTransparency"] = 1;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.View.TARGETNAME.UIAspectRatioConstraint
G2L["99"] = Instance.new("UIAspectRatioConstraint", G2L["98"]);
G2L["99"]["AspectRatio"] = 13.9463;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.View.TARGETNAME.TARGET
G2L["9a"] = Instance.new("TextBox", G2L["98"]);
G2L["9a"]["Name"] = [[TARGET]];
G2L["9a"]["PlaceholderColor3"] = Color3.fromRGB(0, 0, 208);
G2L["9a"]["BorderSizePixel"] = 0;
G2L["9a"]["TextWrapped"] = true;
G2L["9a"]["TextSize"] = 14;
G2L["9a"]["TextColor3"] = Color3.fromRGB(0, 0, 169);
G2L["9a"]["TextScaled"] = true;
G2L["9a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["9a"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["9a"]["ClearTextOnFocus"] = false;
G2L["9a"]["PlaceholderText"] = [[TARGET NAME OR DISPLAY]];
G2L["9a"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["9a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["9a"]["Text"] = [[]];
G2L["9a"]["BackgroundTransparency"] = 1;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.View.TARGETNAME.TARGET.UITextSizeConstraint
G2L["9b"] = Instance.new("UITextSizeConstraint", G2L["9a"]);
G2L["9b"]["MaxTextSize"] = 40;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.View.TARGETNAME.TARGET.UIAspectRatioConstraint
G2L["9c"] = Instance.new("UIAspectRatioConstraint", G2L["9a"]);
G2L["9c"]["AspectRatio"] = 13.9463;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.View.Spectate
G2L["9d"] = Instance.new("LocalScript", G2L["8a"]);
G2L["9d"]["Name"] = [[Spectate]];


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.View.TargetNameHandler
G2L["9e"] = Instance.new("LocalScript", G2L["8a"]);
G2L["9e"]["Name"] = [[TargetNameHandler]];


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.RageAim
G2L["9f"] = Instance.new("Frame", G2L["62"]);
G2L["9f"]["BorderSizePixel"] = 0;
G2L["9f"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 8);
G2L["9f"]["AutomaticSize"] = Enum.AutomaticSize.Y;
G2L["9f"]["Size"] = UDim2.new(0.90639, 0, 0.67436, 0);
G2L["9f"]["Position"] = UDim2.new(0.0468, 0, 0.03093, 0);
G2L["9f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["9f"]["Name"] = [[RageAim]];
G2L["9f"]["LayoutOrder"] = 1;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.RageAim.UICorner
G2L["a0"] = Instance.new("UICorner", G2L["9f"]);
G2L["a0"]["CornerRadius"] = UDim.new(0.05, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.RageAim.Title
G2L["a1"] = Instance.new("TextLabel", G2L["9f"]);
G2L["a1"]["TextWrapped"] = true;
G2L["a1"]["BorderSizePixel"] = 0;
G2L["a1"]["TextSize"] = 14;
G2L["a1"]["TextScaled"] = true;
G2L["a1"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["a1"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["a1"]["TextColor3"] = Color3.fromRGB(0, 0, 255);
G2L["a1"]["BackgroundTransparency"] = 1;
G2L["a1"]["Size"] = UDim2.new(1, 0, 0.14026, 0);
G2L["a1"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["a1"]["Text"] = [[RAGEAIM]];
G2L["a1"]["Name"] = [[Title]];
G2L["a1"]["Position"] = UDim2.new(-0, 0, -0, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.RageAim.Title.UIAspectRatioConstraint
G2L["a2"] = Instance.new("UIAspectRatioConstraint", G2L["a1"]);
G2L["a2"]["AspectRatio"] = 15.44224;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.RageAim.UIListLayout
G2L["a3"] = Instance.new("UIListLayout", G2L["9f"]);
G2L["a3"]["SortOrder"] = Enum.SortOrder.LayoutOrder;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.RageAim.KILLAURA
G2L["a4"] = Instance.new("Frame", G2L["9f"]);
G2L["a4"]["BorderSizePixel"] = 0;
G2L["a4"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["a4"]["Size"] = UDim2.new(1, 0, 0.1553, 0);
G2L["a4"]["Position"] = UDim2.new(0, 0, 0.29556, 0);
G2L["a4"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["a4"]["Name"] = [[KILLAURA]];
G2L["a4"]["LayoutOrder"] = 2;
G2L["a4"]["BackgroundTransparency"] = 1;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.RageAim.KILLAURA.Trigger
G2L["a5"] = Instance.new("TextButton", G2L["a4"]);
G2L["a5"]["TextWrapped"] = true;
G2L["a5"]["BorderSizePixel"] = 0;
G2L["a5"]["TextColor3"] = Color3.fromRGB(0, 0, 169);
G2L["a5"]["TextSize"] = 14;
G2L["a5"]["TextScaled"] = true;
G2L["a5"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 169);
G2L["a5"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["a5"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["a5"]["BackgroundTransparency"] = 1;
G2L["a5"]["Name"] = [[Trigger]];
G2L["a5"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["a5"]["Text"] = [[KILL AURA]];


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.RageAim.KILLAURA.Trigger.UITextSizeConstraint
G2L["a6"] = Instance.new("UITextSizeConstraint", G2L["a5"]);
G2L["a6"]["MaxTextSize"] = 40;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.RageAim.KILLAURA.Trigger.UIAspectRatioConstraint
G2L["a7"] = Instance.new("UIAspectRatioConstraint", G2L["a5"]);
G2L["a7"]["AspectRatio"] = 13.9463;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.RageAim.KILLAURA.Toggle
G2L["a8"] = Instance.new("TextLabel", G2L["a4"]);
G2L["a8"]["BorderSizePixel"] = 0;
G2L["a8"]["TextSize"] = 14;
G2L["a8"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 171);
G2L["a8"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["a8"]["TextColor3"] = Color3.fromRGB(0, 0, 223);
G2L["a8"]["Size"] = UDim2.new(0.05745, 0, 0.76715, 0);
G2L["a8"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["a8"]["Text"] = [[]];
G2L["a8"]["Name"] = [[Toggle]];
G2L["a8"]["Position"] = UDim2.new(0.88346, 0, 0.15794, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.RageAim.KILLAURA.Toggle.UICorner
G2L["a9"] = Instance.new("UICorner", G2L["a8"]);
G2L["a9"]["CornerRadius"] = UDim.new(0.2, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.RageAim.KILLAURA.Toggle.UIAspectRatioConstraint
G2L["aa"] = Instance.new("UIAspectRatioConstraint", G2L["a8"]);
G2L["aa"]["AspectRatio"] = 1.04435;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.RageAim.KILLAURA.UIAspectRatioConstraint
G2L["ab"] = Instance.new("UIAspectRatioConstraint", G2L["a4"]);
G2L["ab"]["AspectRatio"] = 13.9463;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.RageAim.Togglers
G2L["ac"] = Instance.new("LocalScript", G2L["9f"]);
G2L["ac"]["Name"] = [[Togglers]];


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.RageAim.UIAspectRatioConstraint
G2L["ad"] = Instance.new("UIAspectRatioConstraint", G2L["9f"]);
G2L["ad"]["AspectRatio"] = 2.17121;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.RageAim.KillAura
G2L["ae"] = Instance.new("LocalScript", G2L["9f"]);
G2L["ae"]["Name"] = [[KillAura]];


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.RageAim.WHITELIST
G2L["af"] = Instance.new("Frame", G2L["9f"]);
G2L["af"]["BorderSizePixel"] = 0;
G2L["af"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["af"]["Size"] = UDim2.new(1, 0, 0.1553, 0);
G2L["af"]["Position"] = UDim2.new(0, 0, 0.14026, 0);
G2L["af"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["af"]["Name"] = [[WHITELIST]];
G2L["af"]["LayoutOrder"] = 2;
G2L["af"]["BackgroundTransparency"] = 1;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.RageAim.WHITELIST.UIAspectRatioConstraint
G2L["b0"] = Instance.new("UIAspectRatioConstraint", G2L["af"]);
G2L["b0"]["AspectRatio"] = 13.9463;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.RageAim.WHITELIST.TARGET
G2L["b1"] = Instance.new("TextBox", G2L["af"]);
G2L["b1"]["Name"] = [[TARGET]];
G2L["b1"]["PlaceholderColor3"] = Color3.fromRGB(0, 0, 208);
G2L["b1"]["BorderSizePixel"] = 0;
G2L["b1"]["TextWrapped"] = true;
G2L["b1"]["TextSize"] = 14;
G2L["b1"]["TextColor3"] = Color3.fromRGB(0, 0, 169);
G2L["b1"]["TextScaled"] = true;
G2L["b1"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["b1"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["b1"]["ClearTextOnFocus"] = false;
G2L["b1"]["PlaceholderText"] = [[WHITELIST (SEPERATE WITH ",")]];
G2L["b1"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["b1"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["b1"]["Text"] = [[]];
G2L["b1"]["BackgroundTransparency"] = 1;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.RageAim.WHITELIST.TARGET.UITextSizeConstraint
G2L["b2"] = Instance.new("UITextSizeConstraint", G2L["b1"]);
G2L["b2"]["MaxTextSize"] = 40;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.RageAim.WHITELIST.TARGET.UIAspectRatioConstraint
G2L["b3"] = Instance.new("UIAspectRatioConstraint", G2L["b1"]);
G2L["b3"]["AspectRatio"] = 13.9463;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.RageAim.BLACKLIST
G2L["b4"] = Instance.new("Frame", G2L["9f"]);
G2L["b4"]["BorderSizePixel"] = 0;
G2L["b4"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["b4"]["Size"] = UDim2.new(1, 0, 0.1553, 0);
G2L["b4"]["Position"] = UDim2.new(0, 0, 0.14026, 0);
G2L["b4"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["b4"]["Name"] = [[BLACKLIST]];
G2L["b4"]["LayoutOrder"] = 3;
G2L["b4"]["BackgroundTransparency"] = 1;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.RageAim.BLACKLIST.UIAspectRatioConstraint
G2L["b5"] = Instance.new("UIAspectRatioConstraint", G2L["b4"]);
G2L["b5"]["AspectRatio"] = 13.9463;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.RageAim.BLACKLIST.TARGET
G2L["b6"] = Instance.new("TextBox", G2L["b4"]);
G2L["b6"]["Name"] = [[TARGET]];
G2L["b6"]["PlaceholderColor3"] = Color3.fromRGB(0, 0, 208);
G2L["b6"]["BorderSizePixel"] = 0;
G2L["b6"]["TextWrapped"] = true;
G2L["b6"]["TextSize"] = 14;
G2L["b6"]["TextColor3"] = Color3.fromRGB(0, 0, 169);
G2L["b6"]["TextScaled"] = true;
G2L["b6"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["b6"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["b6"]["ClearTextOnFocus"] = false;
G2L["b6"]["PlaceholderText"] = [[BLACKLIST (SEPERATE WITH ",")]];
G2L["b6"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["b6"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["b6"]["Text"] = [[]];
G2L["b6"]["BackgroundTransparency"] = 1;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.RageAim.BLACKLIST.TARGET.UITextSizeConstraint
G2L["b7"] = Instance.new("UITextSizeConstraint", G2L["b6"]);
G2L["b7"]["MaxTextSize"] = 40;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.RageAim.BLACKLIST.TARGET.UIAspectRatioConstraint
G2L["b8"] = Instance.new("UIAspectRatioConstraint", G2L["b6"]);
G2L["b8"]["AspectRatio"] = 13.9463;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.RageAim.Whitelist
G2L["b9"] = Instance.new("LocalScript", G2L["9f"]);
G2L["b9"]["Name"] = [[Whitelist]];


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.RageAim.Blacklist
G2L["ba"] = Instance.new("LocalScript", G2L["9f"]);
G2L["ba"]["Name"] = [[Blacklist]];


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.RageAim.WALLBANG
G2L["bb"] = Instance.new("Frame", G2L["9f"]);
G2L["bb"]["BorderSizePixel"] = 0;
G2L["bb"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["bb"]["Size"] = UDim2.new(1, 0, 0.1553, 0);
G2L["bb"]["Position"] = UDim2.new(0, 0, 0.29556, 0);
G2L["bb"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["bb"]["Name"] = [[WALLBANG]];
G2L["bb"]["LayoutOrder"] = 4;
G2L["bb"]["BackgroundTransparency"] = 1;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.RageAim.WALLBANG.Trigger
G2L["bc"] = Instance.new("TextButton", G2L["bb"]);
G2L["bc"]["TextWrapped"] = true;
G2L["bc"]["BorderSizePixel"] = 0;
G2L["bc"]["TextColor3"] = Color3.fromRGB(0, 0, 169);
G2L["bc"]["TextSize"] = 14;
G2L["bc"]["TextScaled"] = true;
G2L["bc"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 169);
G2L["bc"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["bc"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["bc"]["BackgroundTransparency"] = 1;
G2L["bc"]["Name"] = [[Trigger]];
G2L["bc"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["bc"]["Text"] = [[WALL BANG]];


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.RageAim.WALLBANG.Trigger.UITextSizeConstraint
G2L["bd"] = Instance.new("UITextSizeConstraint", G2L["bc"]);
G2L["bd"]["MaxTextSize"] = 40;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.RageAim.WALLBANG.Trigger.UIAspectRatioConstraint
G2L["be"] = Instance.new("UIAspectRatioConstraint", G2L["bc"]);
G2L["be"]["AspectRatio"] = 13.9463;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.RageAim.WALLBANG.Toggle
G2L["bf"] = Instance.new("TextLabel", G2L["bb"]);
G2L["bf"]["BorderSizePixel"] = 0;
G2L["bf"]["TextSize"] = 14;
G2L["bf"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 171);
G2L["bf"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["bf"]["TextColor3"] = Color3.fromRGB(0, 0, 223);
G2L["bf"]["Size"] = UDim2.new(0.05745, 0, 0.76715, 0);
G2L["bf"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["bf"]["Text"] = [[]];
G2L["bf"]["Name"] = [[Toggle]];
G2L["bf"]["Position"] = UDim2.new(0.88346, 0, 0.15794, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.RageAim.WALLBANG.Toggle.UICorner
G2L["c0"] = Instance.new("UICorner", G2L["bf"]);
G2L["c0"]["CornerRadius"] = UDim.new(0.2, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.RageAim.WALLBANG.Toggle.UIAspectRatioConstraint
G2L["c1"] = Instance.new("UIAspectRatioConstraint", G2L["bf"]);
G2L["c1"]["AspectRatio"] = 1.04435;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.RageAim.WALLBANG.UIAspectRatioConstraint
G2L["c2"] = Instance.new("UIAspectRatioConstraint", G2L["bb"]);
G2L["c2"]["AspectRatio"] = 13.9463;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.RageAim.RageAim
G2L["c3"] = Instance.new("LocalScript", G2L["9f"]);
G2L["c3"]["Name"] = [[RageAim]];


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Settings
G2L["c4"] = Instance.new("ScrollingFrame", G2L["d"]);
G2L["c4"]["Visible"] = false;
G2L["c4"]["Active"] = true;
G2L["c4"]["ScrollingDirection"] = Enum.ScrollingDirection.Y;
G2L["c4"]["BorderSizePixel"] = 0;
G2L["c4"]["CanvasSize"] = UDim2.new(0, 0, 0, 0);
G2L["c4"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["c4"]["Name"] = [[Settings]];
G2L["c4"]["AutomaticCanvasSize"] = Enum.AutomaticSize.Y;
G2L["c4"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["c4"]["ScrollBarImageColor3"] = Color3.fromRGB(0, 0, 0);
G2L["c4"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["c4"]["ScrollBarThickness"] = 0;
G2L["c4"]["BackgroundTransparency"] = 1;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Settings.UIListLayout
G2L["c5"] = Instance.new("UIListLayout", G2L["c4"]);
G2L["c5"]["HorizontalAlignment"] = Enum.HorizontalAlignment.Center;
G2L["c5"]["Padding"] = UDim.new(0.05, 0);
G2L["c5"]["SortOrder"] = Enum.SortOrder.LayoutOrder;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Settings.UIAspectRatioConstraint
G2L["c6"] = Instance.new("UIAspectRatioConstraint", G2L["c4"]);
G2L["c6"]["AspectRatio"] = 1.61538;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Settings.MainSettings
G2L["c7"] = Instance.new("Frame", G2L["c4"]);
G2L["c7"]["BorderSizePixel"] = 0;
G2L["c7"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 8);
G2L["c7"]["Size"] = UDim2.new(0.90639, 0, 0.67601, 0);
G2L["c7"]["Position"] = UDim2.new(0.0566, 0, -0, 0);
G2L["c7"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["c7"]["Name"] = [[MainSettings]];


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Settings.MainSettings.UICorner
G2L["c8"] = Instance.new("UICorner", G2L["c7"]);
G2L["c8"]["CornerRadius"] = UDim.new(0.05, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Settings.MainSettings.Title
G2L["c9"] = Instance.new("TextLabel", G2L["c7"]);
G2L["c9"]["TextWrapped"] = true;
G2L["c9"]["BorderSizePixel"] = 0;
G2L["c9"]["TextSize"] = 14;
G2L["c9"]["TextScaled"] = true;
G2L["c9"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["c9"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["c9"]["TextColor3"] = Color3.fromRGB(0, 0, 255);
G2L["c9"]["BackgroundTransparency"] = 1;
G2L["c9"]["Size"] = UDim2.new(1, 0, 0.14026, 0);
G2L["c9"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["c9"]["Text"] = [[MAIN SETTINGS]];
G2L["c9"]["Name"] = [[Title]];
G2L["c9"]["Position"] = UDim2.new(-0, 0, -0, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Settings.MainSettings.Title.UIAspectRatioConstraint
G2L["ca"] = Instance.new("UIAspectRatioConstraint", G2L["c9"]);
G2L["ca"]["AspectRatio"] = 15.44224;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Settings.MainSettings.UIVISIBILITY
G2L["cb"] = Instance.new("Frame", G2L["c7"]);
G2L["cb"]["BorderSizePixel"] = 0;
G2L["cb"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["cb"]["Size"] = UDim2.new(1, 0, 0.1553, 0);
G2L["cb"]["Position"] = UDim2.new(0, 0, 0.14026, 0);
G2L["cb"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["cb"]["Name"] = [[UIVISIBILITY]];
G2L["cb"]["LayoutOrder"] = 1;
G2L["cb"]["BackgroundTransparency"] = 1;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Settings.MainSettings.UIVISIBILITY.Trigger
G2L["cc"] = Instance.new("TextButton", G2L["cb"]);
G2L["cc"]["TextWrapped"] = true;
G2L["cc"]["BorderSizePixel"] = 0;
G2L["cc"]["TextColor3"] = Color3.fromRGB(0, 0, 169);
G2L["cc"]["TextSize"] = 14;
G2L["cc"]["TextScaled"] = true;
G2L["cc"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 169);
G2L["cc"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["cc"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["cc"]["BackgroundTransparency"] = 1;
G2L["cc"]["Name"] = [[Trigger]];
G2L["cc"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["cc"]["Text"] = [[UI VISIBILITY]];


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Settings.MainSettings.UIVISIBILITY.Trigger.UITextSizeConstraint
G2L["cd"] = Instance.new("UITextSizeConstraint", G2L["cc"]);
G2L["cd"]["MaxTextSize"] = 40;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Settings.MainSettings.UIVISIBILITY.Trigger.UIAspectRatioConstraint
G2L["ce"] = Instance.new("UIAspectRatioConstraint", G2L["cc"]);
G2L["ce"]["AspectRatio"] = 13.9463;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Settings.MainSettings.UIVISIBILITY.Handle
G2L["cf"] = Instance.new("LocalScript", G2L["cb"]);
G2L["cf"]["Name"] = [[Handle]];


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Settings.MainSettings.UIVISIBILITY.UIAspectRatioConstraint
G2L["d0"] = Instance.new("UIAspectRatioConstraint", G2L["cb"]);
G2L["d0"]["AspectRatio"] = 13.9463;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Settings.MainSettings.UIVISIBILITY.KeyBind
G2L["d1"] = Instance.new("TextButton", G2L["cb"]);
G2L["d1"]["TextWrapped"] = true;
G2L["d1"]["BorderSizePixel"] = 0;
G2L["d1"]["TextColor3"] = Color3.fromRGB(0, 0, 169);
G2L["d1"]["TextSize"] = 14;
G2L["d1"]["TextScaled"] = true;
G2L["d1"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["d1"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["d1"]["Size"] = UDim2.new(0.30638, 0, 1, 0);
G2L["d1"]["BackgroundTransparency"] = 1;
G2L["d1"]["Name"] = [[KeyBind]];
G2L["d1"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["d1"]["Text"] = [[LeftControl]];
G2L["d1"]["Position"] = UDim2.new(-0, 0, 0, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Settings.MainSettings.UIVISIBILITY.KeyBind.UITextSizeConstraint
G2L["d2"] = Instance.new("UITextSizeConstraint", G2L["d1"]);
G2L["d2"]["MaxTextSize"] = 40;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Settings.MainSettings.UIListLayout
G2L["d3"] = Instance.new("UIListLayout", G2L["c7"]);
G2L["d3"]["SortOrder"] = Enum.SortOrder.LayoutOrder;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Settings.MainSettings.JOIN_LEAVENOTI
G2L["d4"] = Instance.new("Frame", G2L["c7"]);
G2L["d4"]["BorderSizePixel"] = 0;
G2L["d4"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["d4"]["Size"] = UDim2.new(1, 0, 0.1553, 0);
G2L["d4"]["Position"] = UDim2.new(0, 0, 0.14026, 0);
G2L["d4"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["d4"]["Name"] = [[JOIN_LEAVENOTI]];
G2L["d4"]["LayoutOrder"] = 1;
G2L["d4"]["BackgroundTransparency"] = 1;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Settings.MainSettings.JOIN_LEAVENOTI.Trigger
G2L["d5"] = Instance.new("TextButton", G2L["d4"]);
G2L["d5"]["TextWrapped"] = true;
G2L["d5"]["BorderSizePixel"] = 0;
G2L["d5"]["TextColor3"] = Color3.fromRGB(0, 0, 169);
G2L["d5"]["TextSize"] = 14;
G2L["d5"]["TextScaled"] = true;
G2L["d5"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 169);
G2L["d5"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["d5"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["d5"]["BackgroundTransparency"] = 1;
G2L["d5"]["Name"] = [[Trigger]];
G2L["d5"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["d5"]["Text"] = [[JOIN/LEAVE NOTIFY]];


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Settings.MainSettings.JOIN_LEAVENOTI.Trigger.UITextSizeConstraint
G2L["d6"] = Instance.new("UITextSizeConstraint", G2L["d5"]);
G2L["d6"]["MaxTextSize"] = 40;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Settings.MainSettings.JOIN_LEAVENOTI.Trigger.UIAspectRatioConstraint
G2L["d7"] = Instance.new("UIAspectRatioConstraint", G2L["d5"]);
G2L["d7"]["AspectRatio"] = 13.9463;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Settings.MainSettings.JOIN_LEAVENOTI.Toggle
G2L["d8"] = Instance.new("TextLabel", G2L["d4"]);
G2L["d8"]["BorderSizePixel"] = 0;
G2L["d8"]["TextSize"] = 14;
G2L["d8"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 171);
G2L["d8"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["d8"]["TextColor3"] = Color3.fromRGB(0, 0, 223);
G2L["d8"]["Size"] = UDim2.new(0.05745, 0, 0.76715, 0);
G2L["d8"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["d8"]["Text"] = [[]];
G2L["d8"]["Name"] = [[Toggle]];
G2L["d8"]["Position"] = UDim2.new(0.88346, 0, 0.15794, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Settings.MainSettings.JOIN_LEAVENOTI.Toggle.UICorner
G2L["d9"] = Instance.new("UICorner", G2L["d8"]);
G2L["d9"]["CornerRadius"] = UDim.new(0.2, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Settings.MainSettings.JOIN_LEAVENOTI.Toggle.UIAspectRatioConstraint
G2L["da"] = Instance.new("UIAspectRatioConstraint", G2L["d8"]);
G2L["da"]["AspectRatio"] = 1.04435;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Settings.MainSettings.JOIN_LEAVENOTI.UIAspectRatioConstraint
G2L["db"] = Instance.new("UIAspectRatioConstraint", G2L["d4"]);
G2L["db"]["AspectRatio"] = 13.9463;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Settings.MainSettings.Handle
G2L["dc"] = Instance.new("LocalScript", G2L["c7"]);
G2L["dc"]["Name"] = [[Handle]];


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Settings.MainSettings.REMOVESNOW
G2L["dd"] = Instance.new("Frame", G2L["c7"]);
G2L["dd"]["BorderSizePixel"] = 0;
G2L["dd"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["dd"]["Size"] = UDim2.new(1, 0, 0.1553, 0);
G2L["dd"]["Position"] = UDim2.new(0, 0, 0.29556, 0);
G2L["dd"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["dd"]["Name"] = [[REMOVESNOW]];
G2L["dd"]["LayoutOrder"] = 2;
G2L["dd"]["BackgroundTransparency"] = 1;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Settings.MainSettings.REMOVESNOW.Trigger
G2L["de"] = Instance.new("TextButton", G2L["dd"]);
G2L["de"]["TextWrapped"] = true;
G2L["de"]["BorderSizePixel"] = 0;
G2L["de"]["TextColor3"] = Color3.fromRGB(0, 0, 169);
G2L["de"]["TextSize"] = 14;
G2L["de"]["TextScaled"] = true;
G2L["de"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 169);
G2L["de"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["de"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["de"]["BackgroundTransparency"] = 1;
G2L["de"]["Name"] = [[Trigger]];
G2L["de"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["de"]["Text"] = [[REMOVE SNOW]];


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Settings.MainSettings.REMOVESNOW.Trigger.UITextSizeConstraint
G2L["df"] = Instance.new("UITextSizeConstraint", G2L["de"]);
G2L["df"]["MaxTextSize"] = 40;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Settings.MainSettings.REMOVESNOW.Trigger.UIAspectRatioConstraint
G2L["e0"] = Instance.new("UIAspectRatioConstraint", G2L["de"]);
G2L["e0"]["AspectRatio"] = 13.9463;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Settings.MainSettings.REMOVESNOW.Toggle
G2L["e1"] = Instance.new("TextLabel", G2L["dd"]);
G2L["e1"]["BorderSizePixel"] = 0;
G2L["e1"]["TextSize"] = 14;
G2L["e1"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 171);
G2L["e1"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["e1"]["TextColor3"] = Color3.fromRGB(0, 0, 223);
G2L["e1"]["Size"] = UDim2.new(0.05745, 0, 0.76715, 0);
G2L["e1"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["e1"]["Text"] = [[]];
G2L["e1"]["Name"] = [[Toggle]];
G2L["e1"]["Position"] = UDim2.new(0.88346, 0, 0.15794, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Settings.MainSettings.REMOVESNOW.Toggle.UICorner
G2L["e2"] = Instance.new("UICorner", G2L["e1"]);
G2L["e2"]["CornerRadius"] = UDim.new(0.2, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Settings.MainSettings.REMOVESNOW.Toggle.UIAspectRatioConstraint
G2L["e3"] = Instance.new("UIAspectRatioConstraint", G2L["e1"]);
G2L["e3"]["AspectRatio"] = 1.04435;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Settings.MainSettings.REMOVESNOW.Handle
G2L["e4"] = Instance.new("LocalScript", G2L["dd"]);
G2L["e4"]["Name"] = [[Handle]];


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Settings.MainSettings.REMOVESNOW.UIAspectRatioConstraint
G2L["e5"] = Instance.new("UIAspectRatioConstraint", G2L["dd"]);
G2L["e5"]["AspectRatio"] = 13.9463;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Settings.UIPadding
G2L["e6"] = Instance.new("UIPadding", G2L["c4"]);
G2L["e6"]["PaddingTop"] = UDim.new(0.03, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AutoSettings
G2L["e7"] = Instance.new("ScrollingFrame", G2L["d"]);
G2L["e7"]["Visible"] = false;
G2L["e7"]["Active"] = true;
G2L["e7"]["ScrollingDirection"] = Enum.ScrollingDirection.Y;
G2L["e7"]["BorderSizePixel"] = 0;
G2L["e7"]["CanvasSize"] = UDim2.new(0, 0, 0, 0);
G2L["e7"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["e7"]["Name"] = [[AutoSettings]];
G2L["e7"]["AutomaticCanvasSize"] = Enum.AutomaticSize.Y;
G2L["e7"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["e7"]["ScrollBarImageColor3"] = Color3.fromRGB(0, 0, 0);
G2L["e7"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["e7"]["ScrollBarThickness"] = 0;
G2L["e7"]["BackgroundTransparency"] = 1;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AutoSettings.UIListLayout
G2L["e8"] = Instance.new("UIListLayout", G2L["e7"]);
G2L["e8"]["HorizontalAlignment"] = Enum.HorizontalAlignment.Center;
G2L["e8"]["SortOrder"] = Enum.SortOrder.LayoutOrder;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AutoSettings.Configuration
G2L["e9"] = Instance.new("Frame", G2L["e7"]);
G2L["e9"]["BorderSizePixel"] = 0;
G2L["e9"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 8);
G2L["e9"]["AutomaticSize"] = Enum.AutomaticSize.Y;
G2L["e9"]["Size"] = UDim2.new(0.90639, 0, 0.77882, 0);
G2L["e9"]["Position"] = UDim2.new(0.0468, 0, 0, 0);
G2L["e9"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["e9"]["Name"] = [[Configuration]];
G2L["e9"]["LayoutOrder"] = 1;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AutoSettings.Configuration.UICorner
G2L["ea"] = Instance.new("UICorner", G2L["e9"]);
G2L["ea"]["CornerRadius"] = UDim.new(0.05, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AutoSettings.Configuration.UIListLayout
G2L["eb"] = Instance.new("UIListLayout", G2L["e9"]);
G2L["eb"]["SortOrder"] = Enum.SortOrder.LayoutOrder;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AutoSettings.Configuration.Title
G2L["ec"] = Instance.new("TextLabel", G2L["e9"]);
G2L["ec"]["TextWrapped"] = true;
G2L["ec"]["BorderSizePixel"] = 0;
G2L["ec"]["TextSize"] = 14;
G2L["ec"]["TextScaled"] = true;
G2L["ec"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["ec"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["ec"]["TextColor3"] = Color3.fromRGB(0, 0, 255);
G2L["ec"]["BackgroundTransparency"] = 1;
G2L["ec"]["Size"] = UDim2.new(1, 0, 0.14026, 0);
G2L["ec"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["ec"]["Text"] = [[CONFIGURATION]];
G2L["ec"]["Name"] = [[Title]];
G2L["ec"]["Position"] = UDim2.new(-0, 0, -0, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AutoSettings.Configuration.Title.UIAspectRatioConstraint
G2L["ed"] = Instance.new("UIAspectRatioConstraint", G2L["ec"]);
G2L["ed"]["AspectRatio"] = 15.44224;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AutoSettings.Configuration.UIAspectRatioConstraint
G2L["ee"] = Instance.new("UIAspectRatioConstraint", G2L["e9"]);
G2L["ee"]["AspectRatio"] = 1.88;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AutoSettings.Configuration.AUTOSTOMP
G2L["ef"] = Instance.new("Frame", G2L["e9"]);
G2L["ef"]["BorderSizePixel"] = 0;
G2L["ef"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["ef"]["Size"] = UDim2.new(1, 0, 0.1553, 0);
G2L["ef"]["Position"] = UDim2.new(0, 0, 0.14026, 0);
G2L["ef"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["ef"]["Name"] = [[AUTOSTOMP]];
G2L["ef"]["LayoutOrder"] = 1;
G2L["ef"]["BackgroundTransparency"] = 1;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AutoSettings.Configuration.AUTOSTOMP.Trigger
G2L["f0"] = Instance.new("TextButton", G2L["ef"]);
G2L["f0"]["TextWrapped"] = true;
G2L["f0"]["BorderSizePixel"] = 0;
G2L["f0"]["TextColor3"] = Color3.fromRGB(0, 0, 169);
G2L["f0"]["TextSize"] = 14;
G2L["f0"]["TextScaled"] = true;
G2L["f0"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 169);
G2L["f0"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["f0"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["f0"]["BackgroundTransparency"] = 1;
G2L["f0"]["Name"] = [[Trigger]];
G2L["f0"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["f0"]["Text"] = [[AUTO STOMP]];


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AutoSettings.Configuration.AUTOSTOMP.Trigger.UITextSizeConstraint
G2L["f1"] = Instance.new("UITextSizeConstraint", G2L["f0"]);
G2L["f1"]["MaxTextSize"] = 40;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AutoSettings.Configuration.AUTOSTOMP.Trigger.UIAspectRatioConstraint
G2L["f2"] = Instance.new("UIAspectRatioConstraint", G2L["f0"]);
G2L["f2"]["AspectRatio"] = 13.9463;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AutoSettings.Configuration.AUTOSTOMP.Toggle
G2L["f3"] = Instance.new("TextLabel", G2L["ef"]);
G2L["f3"]["BorderSizePixel"] = 0;
G2L["f3"]["TextSize"] = 14;
G2L["f3"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 171);
G2L["f3"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["f3"]["TextColor3"] = Color3.fromRGB(0, 0, 223);
G2L["f3"]["Size"] = UDim2.new(0.05745, 0, 0.76715, 0);
G2L["f3"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["f3"]["Text"] = [[]];
G2L["f3"]["Name"] = [[Toggle]];
G2L["f3"]["Position"] = UDim2.new(0.88346, 0, 0.15794, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AutoSettings.Configuration.AUTOSTOMP.Toggle.UICorner
G2L["f4"] = Instance.new("UICorner", G2L["f3"]);
G2L["f4"]["CornerRadius"] = UDim.new(0.2, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AutoSettings.Configuration.AUTOSTOMP.Toggle.UIAspectRatioConstraint
G2L["f5"] = Instance.new("UIAspectRatioConstraint", G2L["f3"]);
G2L["f5"]["AspectRatio"] = 1.04435;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AutoSettings.Configuration.AUTOSTOMP.UIAspectRatioConstraint
G2L["f6"] = Instance.new("UIAspectRatioConstraint", G2L["ef"]);
G2L["f6"]["AspectRatio"] = 13.9463;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AutoSettings.Configuration.AUTORELOAD
G2L["f7"] = Instance.new("Frame", G2L["e9"]);
G2L["f7"]["BorderSizePixel"] = 0;
G2L["f7"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["f7"]["Size"] = UDim2.new(1, 0, 0.1553, 0);
G2L["f7"]["Position"] = UDim2.new(0, 0, 0.14026, 0);
G2L["f7"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["f7"]["Name"] = [[AUTORELOAD]];
G2L["f7"]["LayoutOrder"] = 2;
G2L["f7"]["BackgroundTransparency"] = 1;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AutoSettings.Configuration.AUTORELOAD.Trigger
G2L["f8"] = Instance.new("TextButton", G2L["f7"]);
G2L["f8"]["TextWrapped"] = true;
G2L["f8"]["BorderSizePixel"] = 0;
G2L["f8"]["TextColor3"] = Color3.fromRGB(0, 0, 169);
G2L["f8"]["TextSize"] = 14;
G2L["f8"]["TextScaled"] = true;
G2L["f8"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 169);
G2L["f8"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["f8"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["f8"]["BackgroundTransparency"] = 1;
G2L["f8"]["Name"] = [[Trigger]];
G2L["f8"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["f8"]["Text"] = [[AUTO RELOAD]];


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AutoSettings.Configuration.AUTORELOAD.Trigger.UITextSizeConstraint
G2L["f9"] = Instance.new("UITextSizeConstraint", G2L["f8"]);
G2L["f9"]["MaxTextSize"] = 40;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AutoSettings.Configuration.AUTORELOAD.Trigger.UIAspectRatioConstraint
G2L["fa"] = Instance.new("UIAspectRatioConstraint", G2L["f8"]);
G2L["fa"]["AspectRatio"] = 13.9463;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AutoSettings.Configuration.AUTORELOAD.Toggle
G2L["fb"] = Instance.new("TextLabel", G2L["f7"]);
G2L["fb"]["BorderSizePixel"] = 0;
G2L["fb"]["TextSize"] = 14;
G2L["fb"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 171);
G2L["fb"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["fb"]["TextColor3"] = Color3.fromRGB(0, 0, 223);
G2L["fb"]["Size"] = UDim2.new(0.05745, 0, 0.76715, 0);
G2L["fb"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["fb"]["Text"] = [[]];
G2L["fb"]["Name"] = [[Toggle]];
G2L["fb"]["Position"] = UDim2.new(0.88346, 0, 0.15794, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AutoSettings.Configuration.AUTORELOAD.Toggle.UICorner
G2L["fc"] = Instance.new("UICorner", G2L["fb"]);
G2L["fc"]["CornerRadius"] = UDim.new(0.2, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AutoSettings.Configuration.AUTORELOAD.Toggle.UIAspectRatioConstraint
G2L["fd"] = Instance.new("UIAspectRatioConstraint", G2L["fb"]);
G2L["fd"]["AspectRatio"] = 1.04435;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AutoSettings.Configuration.AUTORELOAD.UIAspectRatioConstraint
G2L["fe"] = Instance.new("UIAspectRatioConstraint", G2L["f7"]);
G2L["fe"]["AspectRatio"] = 13.9463;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AutoSettings.Configuration.AUTOSHOOT
G2L["ff"] = Instance.new("Frame", G2L["e9"]);
G2L["ff"]["BorderSizePixel"] = 0;
G2L["ff"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["ff"]["Size"] = UDim2.new(1, 0, 0.1553, 0);
G2L["ff"]["Position"] = UDim2.new(0, 0, 0.14026, 0);
G2L["ff"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["ff"]["Name"] = [[AUTOSHOOT]];
G2L["ff"]["LayoutOrder"] = 3;
G2L["ff"]["BackgroundTransparency"] = 1;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AutoSettings.Configuration.AUTOSHOOT.Trigger
G2L["100"] = Instance.new("TextButton", G2L["ff"]);
G2L["100"]["TextWrapped"] = true;
G2L["100"]["BorderSizePixel"] = 0;
G2L["100"]["TextColor3"] = Color3.fromRGB(0, 0, 169);
G2L["100"]["TextSize"] = 14;
G2L["100"]["TextScaled"] = true;
G2L["100"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 169);
G2L["100"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["100"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["100"]["BackgroundTransparency"] = 1;
G2L["100"]["Name"] = [[Trigger]];
G2L["100"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["100"]["Text"] = [[AUTO SHOOT]];


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AutoSettings.Configuration.AUTOSHOOT.Trigger.UITextSizeConstraint
G2L["101"] = Instance.new("UITextSizeConstraint", G2L["100"]);
G2L["101"]["MaxTextSize"] = 40;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AutoSettings.Configuration.AUTOSHOOT.Trigger.UIAspectRatioConstraint
G2L["102"] = Instance.new("UIAspectRatioConstraint", G2L["100"]);
G2L["102"]["AspectRatio"] = 13.9463;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AutoSettings.Configuration.AUTOSHOOT.Toggle
G2L["103"] = Instance.new("TextLabel", G2L["ff"]);
G2L["103"]["BorderSizePixel"] = 0;
G2L["103"]["TextSize"] = 14;
G2L["103"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 171);
G2L["103"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["103"]["TextColor3"] = Color3.fromRGB(0, 0, 223);
G2L["103"]["Size"] = UDim2.new(0.05745, 0, 0.76715, 0);
G2L["103"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["103"]["Text"] = [[]];
G2L["103"]["Name"] = [[Toggle]];
G2L["103"]["Position"] = UDim2.new(0.88346, 0, 0.15794, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AutoSettings.Configuration.AUTOSHOOT.Toggle.UICorner
G2L["104"] = Instance.new("UICorner", G2L["103"]);
G2L["104"]["CornerRadius"] = UDim.new(0.2, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AutoSettings.Configuration.AUTOSHOOT.Toggle.UIAspectRatioConstraint
G2L["105"] = Instance.new("UIAspectRatioConstraint", G2L["103"]);
G2L["105"]["AspectRatio"] = 1.04435;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AutoSettings.Configuration.AUTOSHOOT.UIAspectRatioConstraint
G2L["106"] = Instance.new("UIAspectRatioConstraint", G2L["ff"]);
G2L["106"]["AspectRatio"] = 13.9463;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AutoSettings.Configuration.AutoSettings
G2L["107"] = Instance.new("LocalScript", G2L["e9"]);
G2L["107"]["Name"] = [[AutoSettings]];


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AutoSettings.Configuration.AUTOMASK
G2L["108"] = Instance.new("Frame", G2L["e9"]);
G2L["108"]["BorderSizePixel"] = 0;
G2L["108"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["108"]["Size"] = UDim2.new(1, 0, 0.1553, 0);
G2L["108"]["Position"] = UDim2.new(0, 0, 0.14026, 0);
G2L["108"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["108"]["Name"] = [[AUTOMASK]];
G2L["108"]["LayoutOrder"] = 4;
G2L["108"]["BackgroundTransparency"] = 1;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AutoSettings.Configuration.AUTOMASK.Trigger
G2L["109"] = Instance.new("TextButton", G2L["108"]);
G2L["109"]["TextWrapped"] = true;
G2L["109"]["BorderSizePixel"] = 0;
G2L["109"]["TextColor3"] = Color3.fromRGB(0, 0, 169);
G2L["109"]["TextSize"] = 14;
G2L["109"]["TextScaled"] = true;
G2L["109"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 169);
G2L["109"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["109"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["109"]["BackgroundTransparency"] = 1;
G2L["109"]["Name"] = [[Trigger]];
G2L["109"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["109"]["Text"] = [[AUTO MASK]];


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AutoSettings.Configuration.AUTOMASK.Trigger.UITextSizeConstraint
G2L["10a"] = Instance.new("UITextSizeConstraint", G2L["109"]);
G2L["10a"]["MaxTextSize"] = 40;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AutoSettings.Configuration.AUTOMASK.Trigger.UIAspectRatioConstraint
G2L["10b"] = Instance.new("UIAspectRatioConstraint", G2L["109"]);
G2L["10b"]["AspectRatio"] = 13.9463;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AutoSettings.Configuration.AUTOMASK.Toggle
G2L["10c"] = Instance.new("TextLabel", G2L["108"]);
G2L["10c"]["BorderSizePixel"] = 0;
G2L["10c"]["TextSize"] = 14;
G2L["10c"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 171);
G2L["10c"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["10c"]["TextColor3"] = Color3.fromRGB(0, 0, 223);
G2L["10c"]["Size"] = UDim2.new(0.05745, 0, 0.76715, 0);
G2L["10c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["10c"]["Text"] = [[]];
G2L["10c"]["Name"] = [[Toggle]];
G2L["10c"]["Position"] = UDim2.new(0.88346, 0, 0.15794, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AutoSettings.Configuration.AUTOMASK.Toggle.UICorner
G2L["10d"] = Instance.new("UICorner", G2L["10c"]);
G2L["10d"]["CornerRadius"] = UDim.new(0.2, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AutoSettings.Configuration.AUTOMASK.Toggle.UIAspectRatioConstraint
G2L["10e"] = Instance.new("UIAspectRatioConstraint", G2L["10c"]);
G2L["10e"]["AspectRatio"] = 1.04435;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AutoSettings.Configuration.AUTOMASK.UIAspectRatioConstraint
G2L["10f"] = Instance.new("UIAspectRatioConstraint", G2L["108"]);
G2L["10f"]["AspectRatio"] = 13.9463;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AutoSettings.UIPadding
G2L["110"] = Instance.new("UIPadding", G2L["e7"]);
G2L["110"]["PaddingTop"] = UDim.new(0.03, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Teleport
G2L["111"] = Instance.new("ScrollingFrame", G2L["d"]);
G2L["111"]["Visible"] = false;
G2L["111"]["Active"] = true;
G2L["111"]["ScrollingDirection"] = Enum.ScrollingDirection.Y;
G2L["111"]["BorderSizePixel"] = 0;
G2L["111"]["CanvasPosition"] = Vector2.new(0, 157.22852);
G2L["111"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["111"]["Name"] = [[Teleport]];
G2L["111"]["AutomaticCanvasSize"] = Enum.AutomaticSize.Y;
G2L["111"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["111"]["ScrollBarImageColor3"] = Color3.fromRGB(0, 0, 0);
G2L["111"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["111"]["ScrollBarThickness"] = 0;
G2L["111"]["BackgroundTransparency"] = 1;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Teleport.UIListLayout
G2L["112"] = Instance.new("UIListLayout", G2L["111"]);
G2L["112"]["HorizontalAlignment"] = Enum.HorizontalAlignment.Center;
G2L["112"]["Padding"] = UDim.new(0.05, 0);
G2L["112"]["SortOrder"] = Enum.SortOrder.LayoutOrder;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Teleport.UIAspectRatioConstraint
G2L["113"] = Instance.new("UIAspectRatioConstraint", G2L["111"]);
G2L["113"]["AspectRatio"] = 1.61538;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Teleport.Places
G2L["114"] = Instance.new("Frame", G2L["111"]);
G2L["114"]["BorderSizePixel"] = 0;
G2L["114"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 8);
G2L["114"]["AutomaticSize"] = Enum.AutomaticSize.Y;
G2L["114"]["Size"] = UDim2.new(0.90639, 0, 0.84494, 0);
G2L["114"]["Position"] = UDim2.new(0.0468, 0, 0, 0);
G2L["114"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["114"]["Name"] = [[Places]];


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Teleport.Places.UICorner
G2L["115"] = Instance.new("UICorner", G2L["114"]);
G2L["115"]["CornerRadius"] = UDim.new(0.05, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Teleport.Places.Title
G2L["116"] = Instance.new("TextLabel", G2L["114"]);
G2L["116"]["TextWrapped"] = true;
G2L["116"]["BorderSizePixel"] = 0;
G2L["116"]["TextSize"] = 14;
G2L["116"]["TextScaled"] = true;
G2L["116"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["116"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["116"]["TextColor3"] = Color3.fromRGB(0, 0, 255);
G2L["116"]["BackgroundTransparency"] = 1;
G2L["116"]["Size"] = UDim2.new(1, 0, 0.14026, 0);
G2L["116"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["116"]["Text"] = [[WORLD]];
G2L["116"]["Name"] = [[Title]];
G2L["116"]["Position"] = UDim2.new(-0, 0, -0, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Teleport.Places.Title.UIAspectRatioConstraint
G2L["117"] = Instance.new("UIAspectRatioConstraint", G2L["116"]);
G2L["117"]["AspectRatio"] = 15.44224;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Teleport.Places.REVOLVER
G2L["118"] = Instance.new("Frame", G2L["114"]);
G2L["118"]["BorderSizePixel"] = 0;
G2L["118"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["118"]["Size"] = UDim2.new(1, 0, 0.1553, 0);
G2L["118"]["Position"] = UDim2.new(0, 0, 0.29556, 0);
G2L["118"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["118"]["Name"] = [[REVOLVER]];
G2L["118"]["LayoutOrder"] = 2;
G2L["118"]["BackgroundTransparency"] = 1;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Teleport.Places.REVOLVER.Trigger
G2L["119"] = Instance.new("TextButton", G2L["118"]);
G2L["119"]["TextWrapped"] = true;
G2L["119"]["BorderSizePixel"] = 0;
G2L["119"]["TextColor3"] = Color3.fromRGB(0, 0, 169);
G2L["119"]["TextSize"] = 14;
G2L["119"]["TextScaled"] = true;
G2L["119"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 169);
G2L["119"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["119"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["119"]["BackgroundTransparency"] = 1;
G2L["119"]["Name"] = [[Trigger]];
G2L["119"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["119"]["Text"] = [[REVOLVER]];


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Teleport.Places.REVOLVER.Trigger.UITextSizeConstraint
G2L["11a"] = Instance.new("UITextSizeConstraint", G2L["119"]);
G2L["11a"]["MaxTextSize"] = 40;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Teleport.Places.REVOLVER.Trigger.UIAspectRatioConstraint
G2L["11b"] = Instance.new("UIAspectRatioConstraint", G2L["119"]);
G2L["11b"]["AspectRatio"] = 13.9463;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Teleport.Places.REVOLVER.UIAspectRatioConstraint
G2L["11c"] = Instance.new("UIAspectRatioConstraint", G2L["118"]);
G2L["11c"]["AspectRatio"] = 13.9463;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Teleport.Places.UIListLayout
G2L["11d"] = Instance.new("UIListLayout", G2L["114"]);
G2L["11d"]["SortOrder"] = Enum.SortOrder.LayoutOrder;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Teleport.Places.WAREHOUSE
G2L["11e"] = Instance.new("Frame", G2L["114"]);
G2L["11e"]["BorderSizePixel"] = 0;
G2L["11e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["11e"]["Size"] = UDim2.new(1, 0, 0.1553, 0);
G2L["11e"]["Position"] = UDim2.new(0, 0, 0.29556, 0);
G2L["11e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["11e"]["Name"] = [[WAREHOUSE]];
G2L["11e"]["LayoutOrder"] = 2;
G2L["11e"]["BackgroundTransparency"] = 1;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Teleport.Places.WAREHOUSE.Trigger
G2L["11f"] = Instance.new("TextButton", G2L["11e"]);
G2L["11f"]["TextWrapped"] = true;
G2L["11f"]["BorderSizePixel"] = 0;
G2L["11f"]["TextColor3"] = Color3.fromRGB(0, 0, 169);
G2L["11f"]["TextSize"] = 14;
G2L["11f"]["TextScaled"] = true;
G2L["11f"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 169);
G2L["11f"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["11f"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["11f"]["BackgroundTransparency"] = 1;
G2L["11f"]["Name"] = [[Trigger]];
G2L["11f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["11f"]["Text"] = [[WAREHOUSE]];


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Teleport.Places.WAREHOUSE.Trigger.UITextSizeConstraint
G2L["120"] = Instance.new("UITextSizeConstraint", G2L["11f"]);
G2L["120"]["MaxTextSize"] = 40;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Teleport.Places.WAREHOUSE.Trigger.UIAspectRatioConstraint
G2L["121"] = Instance.new("UIAspectRatioConstraint", G2L["11f"]);
G2L["121"]["AspectRatio"] = 13.9463;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Teleport.Places.WAREHOUSE.UIAspectRatioConstraint
G2L["122"] = Instance.new("UIAspectRatioConstraint", G2L["11e"]);
G2L["122"]["AspectRatio"] = 13.9463;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Teleport.Places.UPHILLZGUN
G2L["123"] = Instance.new("Frame", G2L["114"]);
G2L["123"]["BorderSizePixel"] = 0;
G2L["123"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["123"]["Size"] = UDim2.new(1, 0, 0.1553, 0);
G2L["123"]["Position"] = UDim2.new(0, 0, 0.29556, 0);
G2L["123"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["123"]["Name"] = [[UPHILLZGUN]];
G2L["123"]["LayoutOrder"] = 2;
G2L["123"]["BackgroundTransparency"] = 1;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Teleport.Places.UPHILLZGUN.Trigger
G2L["124"] = Instance.new("TextButton", G2L["123"]);
G2L["124"]["TextWrapped"] = true;
G2L["124"]["BorderSizePixel"] = 0;
G2L["124"]["TextColor3"] = Color3.fromRGB(0, 0, 169);
G2L["124"]["TextSize"] = 14;
G2L["124"]["TextScaled"] = true;
G2L["124"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 169);
G2L["124"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["124"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["124"]["BackgroundTransparency"] = 1;
G2L["124"]["Name"] = [[Trigger]];
G2L["124"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["124"]["Text"] = [[UPHILLZ GUN]];


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Teleport.Places.UPHILLZGUN.Trigger.UITextSizeConstraint
G2L["125"] = Instance.new("UITextSizeConstraint", G2L["124"]);
G2L["125"]["MaxTextSize"] = 40;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Teleport.Places.UPHILLZGUN.Trigger.UIAspectRatioConstraint
G2L["126"] = Instance.new("UIAspectRatioConstraint", G2L["124"]);
G2L["126"]["AspectRatio"] = 13.9463;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Teleport.Places.UPHILLZGUN.UIAspectRatioConstraint
G2L["127"] = Instance.new("UIAspectRatioConstraint", G2L["123"]);
G2L["127"]["AspectRatio"] = 13.9463;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Teleport.Places.MILITARY
G2L["128"] = Instance.new("Frame", G2L["114"]);
G2L["128"]["BorderSizePixel"] = 0;
G2L["128"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["128"]["Size"] = UDim2.new(1, 0, 0.1553, 0);
G2L["128"]["Position"] = UDim2.new(0, 0, 0.29556, 0);
G2L["128"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["128"]["Name"] = [[MILITARY]];
G2L["128"]["LayoutOrder"] = 2;
G2L["128"]["BackgroundTransparency"] = 1;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Teleport.Places.MILITARY.Trigger
G2L["129"] = Instance.new("TextButton", G2L["128"]);
G2L["129"]["TextWrapped"] = true;
G2L["129"]["BorderSizePixel"] = 0;
G2L["129"]["TextColor3"] = Color3.fromRGB(0, 0, 169);
G2L["129"]["TextSize"] = 14;
G2L["129"]["TextScaled"] = true;
G2L["129"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 169);
G2L["129"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["129"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["129"]["BackgroundTransparency"] = 1;
G2L["129"]["Name"] = [[Trigger]];
G2L["129"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["129"]["Text"] = [[MILITARY]];


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Teleport.Places.MILITARY.Trigger.UITextSizeConstraint
G2L["12a"] = Instance.new("UITextSizeConstraint", G2L["129"]);
G2L["12a"]["MaxTextSize"] = 40;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Teleport.Places.MILITARY.Trigger.UIAspectRatioConstraint
G2L["12b"] = Instance.new("UIAspectRatioConstraint", G2L["129"]);
G2L["12b"]["AspectRatio"] = 13.9463;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Teleport.Places.MILITARY.UIAspectRatioConstraint
G2L["12c"] = Instance.new("UIAspectRatioConstraint", G2L["128"]);
G2L["12c"]["AspectRatio"] = 13.9463;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Teleport.Places.DABANK
G2L["12d"] = Instance.new("Frame", G2L["114"]);
G2L["12d"]["BorderSizePixel"] = 0;
G2L["12d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["12d"]["Size"] = UDim2.new(1, 0, 0.1553, 0);
G2L["12d"]["Position"] = UDim2.new(0, 0, 0.29556, 0);
G2L["12d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["12d"]["Name"] = [[DABANK]];
G2L["12d"]["LayoutOrder"] = 2;
G2L["12d"]["BackgroundTransparency"] = 1;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Teleport.Places.DABANK.Trigger
G2L["12e"] = Instance.new("TextButton", G2L["12d"]);
G2L["12e"]["TextWrapped"] = true;
G2L["12e"]["BorderSizePixel"] = 0;
G2L["12e"]["TextColor3"] = Color3.fromRGB(0, 0, 169);
G2L["12e"]["TextSize"] = 14;
G2L["12e"]["TextScaled"] = true;
G2L["12e"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 169);
G2L["12e"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["12e"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["12e"]["BackgroundTransparency"] = 1;
G2L["12e"]["Name"] = [[Trigger]];
G2L["12e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["12e"]["Text"] = [[DA BANK]];


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Teleport.Places.DABANK.Trigger.UITextSizeConstraint
G2L["12f"] = Instance.new("UITextSizeConstraint", G2L["12e"]);
G2L["12f"]["MaxTextSize"] = 40;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Teleport.Places.DABANK.Trigger.UIAspectRatioConstraint
G2L["130"] = Instance.new("UIAspectRatioConstraint", G2L["12e"]);
G2L["130"]["AspectRatio"] = 13.9463;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Teleport.Places.DABANK.UIAspectRatioConstraint
G2L["131"] = Instance.new("UIAspectRatioConstraint", G2L["12d"]);
G2L["131"]["AspectRatio"] = 13.9463;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Teleport.Places.DB
G2L["132"] = Instance.new("Frame", G2L["114"]);
G2L["132"]["BorderSizePixel"] = 0;
G2L["132"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["132"]["Size"] = UDim2.new(1, 0, 0.1553, 0);
G2L["132"]["Position"] = UDim2.new(0, 0, 0.29556, 0);
G2L["132"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["132"]["Name"] = [[DB]];
G2L["132"]["LayoutOrder"] = 2;
G2L["132"]["BackgroundTransparency"] = 1;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Teleport.Places.DB.Trigger
G2L["133"] = Instance.new("TextButton", G2L["132"]);
G2L["133"]["TextWrapped"] = true;
G2L["133"]["BorderSizePixel"] = 0;
G2L["133"]["TextColor3"] = Color3.fromRGB(0, 0, 169);
G2L["133"]["TextSize"] = 14;
G2L["133"]["TextScaled"] = true;
G2L["133"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 169);
G2L["133"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["133"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["133"]["BackgroundTransparency"] = 1;
G2L["133"]["Name"] = [[Trigger]];
G2L["133"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["133"]["Text"] = [[DB]];


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Teleport.Places.DB.Trigger.UITextSizeConstraint
G2L["134"] = Instance.new("UITextSizeConstraint", G2L["133"]);
G2L["134"]["MaxTextSize"] = 40;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Teleport.Places.DB.Trigger.UIAspectRatioConstraint
G2L["135"] = Instance.new("UIAspectRatioConstraint", G2L["133"]);
G2L["135"]["AspectRatio"] = 13.9463;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Teleport.Places.DB.UIAspectRatioConstraint
G2L["136"] = Instance.new("UIAspectRatioConstraint", G2L["132"]);
G2L["136"]["AspectRatio"] = 13.9463;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Teleport.Places.DOWNHILLZGUN
G2L["137"] = Instance.new("Frame", G2L["114"]);
G2L["137"]["BorderSizePixel"] = 0;
G2L["137"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["137"]["Size"] = UDim2.new(1, 0, 0.1553, 0);
G2L["137"]["Position"] = UDim2.new(0, 0, 0.29556, 0);
G2L["137"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["137"]["Name"] = [[DOWNHILLZGUN]];
G2L["137"]["LayoutOrder"] = 2;
G2L["137"]["BackgroundTransparency"] = 1;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Teleport.Places.DOWNHILLZGUN.Trigger
G2L["138"] = Instance.new("TextButton", G2L["137"]);
G2L["138"]["TextWrapped"] = true;
G2L["138"]["BorderSizePixel"] = 0;
G2L["138"]["TextColor3"] = Color3.fromRGB(0, 0, 169);
G2L["138"]["TextSize"] = 14;
G2L["138"]["TextScaled"] = true;
G2L["138"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 169);
G2L["138"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["138"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["138"]["BackgroundTransparency"] = 1;
G2L["138"]["Name"] = [[Trigger]];
G2L["138"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["138"]["Text"] = [[DOWN HILLZ GUN]];


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Teleport.Places.DOWNHILLZGUN.Trigger.UITextSizeConstraint
G2L["139"] = Instance.new("UITextSizeConstraint", G2L["138"]);
G2L["139"]["MaxTextSize"] = 40;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Teleport.Places.DOWNHILLZGUN.Trigger.UIAspectRatioConstraint
G2L["13a"] = Instance.new("UIAspectRatioConstraint", G2L["138"]);
G2L["13a"]["AspectRatio"] = 13.9463;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Teleport.Places.DOWNHILLZGUN.UIAspectRatioConstraint
G2L["13b"] = Instance.new("UIAspectRatioConstraint", G2L["137"]);
G2L["13b"]["AspectRatio"] = 13.9463;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Teleport.Places.Handle
G2L["13c"] = Instance.new("LocalScript", G2L["114"]);
G2L["13c"]["Name"] = [[Handle]];


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Teleport.Places.RIFLE
G2L["13d"] = Instance.new("Frame", G2L["114"]);
G2L["13d"]["BorderSizePixel"] = 0;
G2L["13d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["13d"]["Size"] = UDim2.new(1, 0, 0.1553, 0);
G2L["13d"]["Position"] = UDim2.new(0, 0, 0.29556, 0);
G2L["13d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["13d"]["Name"] = [[RIFLE]];
G2L["13d"]["LayoutOrder"] = 2;
G2L["13d"]["BackgroundTransparency"] = 1;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Teleport.Places.RIFLE.Trigger
G2L["13e"] = Instance.new("TextButton", G2L["13d"]);
G2L["13e"]["TextWrapped"] = true;
G2L["13e"]["BorderSizePixel"] = 0;
G2L["13e"]["TextColor3"] = Color3.fromRGB(0, 0, 169);
G2L["13e"]["TextSize"] = 14;
G2L["13e"]["TextScaled"] = true;
G2L["13e"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 169);
G2L["13e"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["13e"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["13e"]["BackgroundTransparency"] = 1;
G2L["13e"]["Name"] = [[Trigger]];
G2L["13e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["13e"]["Text"] = [[RIFLE]];


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Teleport.Places.RIFLE.Trigger.UITextSizeConstraint
G2L["13f"] = Instance.new("UITextSizeConstraint", G2L["13e"]);
G2L["13f"]["MaxTextSize"] = 40;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Teleport.Places.RIFLE.Trigger.UIAspectRatioConstraint
G2L["140"] = Instance.new("UIAspectRatioConstraint", G2L["13e"]);
G2L["140"]["AspectRatio"] = 13.9463;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Teleport.Places.RIFLE.UIAspectRatioConstraint
G2L["141"] = Instance.new("UIAspectRatioConstraint", G2L["13d"]);
G2L["141"]["AspectRatio"] = 13.9463;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Teleport.Places.UIAspectRatioConstraint
G2L["142"] = Instance.new("UIAspectRatioConstraint", G2L["114"]);
G2L["142"]["AspectRatio"] = 1.56645;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Teleport.UIPadding
G2L["143"] = Instance.new("UIPadding", G2L["111"]);
G2L["143"]["PaddingTop"] = UDim.new(0.03, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Teleport.PlayerTeleport
G2L["144"] = Instance.new("Frame", G2L["111"]);
G2L["144"]["BorderSizePixel"] = 0;
G2L["144"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 8);
G2L["144"]["AutomaticSize"] = Enum.AutomaticSize.Y;
G2L["144"]["Size"] = UDim2.new(0.90639, 0, 0.84494, 0);
G2L["144"]["Position"] = UDim2.new(0.0468, 0, 0, 0);
G2L["144"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["144"]["Name"] = [[PlayerTeleport]];


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Teleport.PlayerTeleport.UICorner
G2L["145"] = Instance.new("UICorner", G2L["144"]);
G2L["145"]["CornerRadius"] = UDim.new(0.05, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Teleport.PlayerTeleport.Title
G2L["146"] = Instance.new("TextLabel", G2L["144"]);
G2L["146"]["TextWrapped"] = true;
G2L["146"]["BorderSizePixel"] = 0;
G2L["146"]["TextSize"] = 14;
G2L["146"]["TextScaled"] = true;
G2L["146"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["146"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["146"]["TextColor3"] = Color3.fromRGB(0, 0, 255);
G2L["146"]["BackgroundTransparency"] = 1;
G2L["146"]["Size"] = UDim2.new(1, 0, 0.14026, 0);
G2L["146"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["146"]["Text"] = [[PLAYER TELEPORT]];
G2L["146"]["Name"] = [[Title]];
G2L["146"]["Position"] = UDim2.new(-0, 0, -0, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Teleport.PlayerTeleport.Title.UIAspectRatioConstraint
G2L["147"] = Instance.new("UIAspectRatioConstraint", G2L["146"]);
G2L["147"]["AspectRatio"] = 15.44224;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Teleport.PlayerTeleport.UIListLayout
G2L["148"] = Instance.new("UIListLayout", G2L["144"]);
G2L["148"]["SortOrder"] = Enum.SortOrder.LayoutOrder;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Teleport.PlayerTeleport.UIAspectRatioConstraint
G2L["149"] = Instance.new("UIAspectRatioConstraint", G2L["144"]);
G2L["149"]["AspectRatio"] = 1.73288;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Teleport.PlayerTeleport.TELEPORT
G2L["14a"] = Instance.new("Frame", G2L["144"]);
G2L["14a"]["BorderSizePixel"] = 0;
G2L["14a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["14a"]["Size"] = UDim2.new(1, 0, 0.1553, 0);
G2L["14a"]["Position"] = UDim2.new(0, 0, 0.29556, 0);
G2L["14a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["14a"]["Name"] = [[TELEPORT]];
G2L["14a"]["LayoutOrder"] = 1;
G2L["14a"]["BackgroundTransparency"] = 1;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Teleport.PlayerTeleport.TELEPORT.Trigger
G2L["14b"] = Instance.new("TextButton", G2L["14a"]);
G2L["14b"]["TextWrapped"] = true;
G2L["14b"]["BorderSizePixel"] = 0;
G2L["14b"]["TextColor3"] = Color3.fromRGB(0, 0, 169);
G2L["14b"]["TextSize"] = 14;
G2L["14b"]["TextScaled"] = true;
G2L["14b"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 169);
G2L["14b"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["14b"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["14b"]["BackgroundTransparency"] = 1;
G2L["14b"]["Name"] = [[Trigger]];
G2L["14b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["14b"]["Text"] = [[TELEPORT]];


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Teleport.PlayerTeleport.TELEPORT.Trigger.UITextSizeConstraint
G2L["14c"] = Instance.new("UITextSizeConstraint", G2L["14b"]);
G2L["14c"]["MaxTextSize"] = 40;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Teleport.PlayerTeleport.TELEPORT.Trigger.UIAspectRatioConstraint
G2L["14d"] = Instance.new("UIAspectRatioConstraint", G2L["14b"]);
G2L["14d"]["AspectRatio"] = 13.9463;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Teleport.PlayerTeleport.TELEPORT.UIAspectRatioConstraint
G2L["14e"] = Instance.new("UIAspectRatioConstraint", G2L["14a"]);
G2L["14e"]["AspectRatio"] = 13.9463;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Teleport.PlayerTeleport.TARGETNAME
G2L["14f"] = Instance.new("Frame", G2L["144"]);
G2L["14f"]["BorderSizePixel"] = 0;
G2L["14f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["14f"]["Size"] = UDim2.new(1, 0, 0.1553, 0);
G2L["14f"]["Position"] = UDim2.new(0, 0, 0.14026, 0);
G2L["14f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["14f"]["Name"] = [[TARGETNAME]];
G2L["14f"]["BackgroundTransparency"] = 1;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Teleport.PlayerTeleport.TARGETNAME.UIAspectRatioConstraint
G2L["150"] = Instance.new("UIAspectRatioConstraint", G2L["14f"]);
G2L["150"]["AspectRatio"] = 13.9463;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Teleport.PlayerTeleport.TARGETNAME.TARGET
G2L["151"] = Instance.new("TextBox", G2L["14f"]);
G2L["151"]["CursorPosition"] = -1;
G2L["151"]["Name"] = [[TARGET]];
G2L["151"]["PlaceholderColor3"] = Color3.fromRGB(0, 0, 208);
G2L["151"]["BorderSizePixel"] = 0;
G2L["151"]["TextWrapped"] = true;
G2L["151"]["TextSize"] = 14;
G2L["151"]["TextColor3"] = Color3.fromRGB(0, 0, 169);
G2L["151"]["TextScaled"] = true;
G2L["151"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["151"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["151"]["ClearTextOnFocus"] = false;
G2L["151"]["PlaceholderText"] = [[TARGET NAME OR DISPLAY]];
G2L["151"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["151"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["151"]["Text"] = [[]];
G2L["151"]["BackgroundTransparency"] = 1;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Teleport.PlayerTeleport.TARGETNAME.TARGET.UITextSizeConstraint
G2L["152"] = Instance.new("UITextSizeConstraint", G2L["151"]);
G2L["152"]["MaxTextSize"] = 40;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Teleport.PlayerTeleport.TARGETNAME.TARGET.UIAspectRatioConstraint
G2L["153"] = Instance.new("UIAspectRatioConstraint", G2L["151"]);
G2L["153"]["AspectRatio"] = 13.9463;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Teleport.PlayerTeleport.Handle
G2L["154"] = Instance.new("LocalScript", G2L["144"]);
G2L["154"]["Name"] = [[Handle]];


-- StarterGui.havocenchanted.MainFrame.ViewFrame.UIAspectRatioConstraint
G2L["155"] = Instance.new("UIAspectRatioConstraint", G2L["d"]);
G2L["155"]["AspectRatio"] = 1.61538;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Orbit
G2L["156"] = Instance.new("ScrollingFrame", G2L["d"]);
G2L["156"]["Visible"] = false;
G2L["156"]["Active"] = true;
G2L["156"]["ScrollingDirection"] = Enum.ScrollingDirection.Y;
G2L["156"]["BorderSizePixel"] = 0;
G2L["156"]["CanvasSize"] = UDim2.new(0, 0, 0, 0);
G2L["156"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["156"]["Name"] = [[Orbit]];
G2L["156"]["AutomaticCanvasSize"] = Enum.AutomaticSize.Y;
G2L["156"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["156"]["ScrollBarImageColor3"] = Color3.fromRGB(0, 0, 0);
G2L["156"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["156"]["ScrollBarThickness"] = 0;
G2L["156"]["BackgroundTransparency"] = 1;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Orbit.UIListLayout
G2L["157"] = Instance.new("UIListLayout", G2L["156"]);
G2L["157"]["HorizontalAlignment"] = Enum.HorizontalAlignment.Center;
G2L["157"]["Padding"] = UDim.new(0.05, 0);
G2L["157"]["SortOrder"] = Enum.SortOrder.LayoutOrder;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Orbit.UIAspectRatioConstraint
G2L["158"] = Instance.new("UIAspectRatioConstraint", G2L["156"]);
G2L["158"]["AspectRatio"] = 1.61538;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Orbit.Target
G2L["159"] = Instance.new("Frame", G2L["156"]);
G2L["159"]["BorderSizePixel"] = 0;
G2L["159"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 8);
G2L["159"]["AutomaticSize"] = Enum.AutomaticSize.Y;
G2L["159"]["Size"] = UDim2.new(0.90639, 0, 0.84494, 0);
G2L["159"]["Position"] = UDim2.new(0.0468, 0, 0, 0);
G2L["159"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["159"]["Name"] = [[Target]];


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Orbit.Target.UICorner
G2L["15a"] = Instance.new("UICorner", G2L["159"]);
G2L["15a"]["CornerRadius"] = UDim.new(0.05, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Orbit.Target.Title
G2L["15b"] = Instance.new("TextLabel", G2L["159"]);
G2L["15b"]["TextWrapped"] = true;
G2L["15b"]["BorderSizePixel"] = 0;
G2L["15b"]["TextSize"] = 14;
G2L["15b"]["TextScaled"] = true;
G2L["15b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["15b"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["15b"]["TextColor3"] = Color3.fromRGB(0, 0, 255);
G2L["15b"]["BackgroundTransparency"] = 1;
G2L["15b"]["Size"] = UDim2.new(1, 0, 0.14026, 0);
G2L["15b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["15b"]["Text"] = [[TARGET]];
G2L["15b"]["Name"] = [[Title]];
G2L["15b"]["Position"] = UDim2.new(-0, 0, -0, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Orbit.Target.Title.UIAspectRatioConstraint
G2L["15c"] = Instance.new("UIAspectRatioConstraint", G2L["15b"]);
G2L["15c"]["AspectRatio"] = 15.44224;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Orbit.Target.UIListLayout
G2L["15d"] = Instance.new("UIListLayout", G2L["159"]);
G2L["15d"]["SortOrder"] = Enum.SortOrder.LayoutOrder;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Orbit.Target.UIAspectRatioConstraint
G2L["15e"] = Instance.new("UIAspectRatioConstraint", G2L["159"]);
G2L["15e"]["AspectRatio"] = 1.73288;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Orbit.Target.TARGETNAME
G2L["15f"] = Instance.new("Frame", G2L["159"]);
G2L["15f"]["BorderSizePixel"] = 0;
G2L["15f"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["15f"]["Size"] = UDim2.new(1, 0, 0.1553, 0);
G2L["15f"]["Position"] = UDim2.new(0, 0, 0.14026, 0);
G2L["15f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["15f"]["Name"] = [[TARGETNAME]];
G2L["15f"]["LayoutOrder"] = 4;
G2L["15f"]["BackgroundTransparency"] = 1;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Orbit.Target.TARGETNAME.UIAspectRatioConstraint
G2L["160"] = Instance.new("UIAspectRatioConstraint", G2L["15f"]);
G2L["160"]["AspectRatio"] = 13.9463;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Orbit.Target.TARGETNAME.TARGET
G2L["161"] = Instance.new("TextBox", G2L["15f"]);
G2L["161"]["Name"] = [[TARGET]];
G2L["161"]["PlaceholderColor3"] = Color3.fromRGB(0, 0, 208);
G2L["161"]["BorderSizePixel"] = 0;
G2L["161"]["TextWrapped"] = true;
G2L["161"]["TextSize"] = 14;
G2L["161"]["TextColor3"] = Color3.fromRGB(0, 0, 169);
G2L["161"]["TextScaled"] = true;
G2L["161"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["161"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["161"]["ClearTextOnFocus"] = false;
G2L["161"]["PlaceholderText"] = [[TARGET NAME OR DISPLAY]];
G2L["161"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["161"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["161"]["Text"] = [[]];
G2L["161"]["BackgroundTransparency"] = 1;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Orbit.Target.TARGETNAME.TARGET.UITextSizeConstraint
G2L["162"] = Instance.new("UITextSizeConstraint", G2L["161"]);
G2L["162"]["MaxTextSize"] = 40;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Orbit.Target.TARGETNAME.TARGET.UIAspectRatioConstraint
G2L["163"] = Instance.new("UIAspectRatioConstraint", G2L["161"]);
G2L["163"]["AspectRatio"] = 13.9463;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Orbit.Target.SELECTONSCREEN
G2L["164"] = Instance.new("Frame", G2L["159"]);
G2L["164"]["BorderSizePixel"] = 0;
G2L["164"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["164"]["Size"] = UDim2.new(1, 0, 0.155, 0);
G2L["164"]["Position"] = UDim2.new(0, 0, 0.36072, 0);
G2L["164"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["164"]["Name"] = [[SELECTONSCREEN]];
G2L["164"]["LayoutOrder"] = 5;
G2L["164"]["BackgroundTransparency"] = 1;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Orbit.Target.SELECTONSCREEN.Trigger
G2L["165"] = Instance.new("TextButton", G2L["164"]);
G2L["165"]["TextWrapped"] = true;
G2L["165"]["BorderSizePixel"] = 0;
G2L["165"]["TextColor3"] = Color3.fromRGB(0, 0, 169);
G2L["165"]["TextSize"] = 14;
G2L["165"]["TextScaled"] = true;
G2L["165"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 169);
G2L["165"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["165"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["165"]["BackgroundTransparency"] = 1;
G2L["165"]["Name"] = [[Trigger]];
G2L["165"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["165"]["Text"] = [[CLICK ON TARGET TO SELECT]];


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Orbit.Target.SELECTONSCREEN.Trigger.UITextSizeConstraint
G2L["166"] = Instance.new("UITextSizeConstraint", G2L["165"]);
G2L["166"]["MaxTextSize"] = 40;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Orbit.Target.SELECTONSCREEN.Trigger.UIAspectRatioConstraint
G2L["167"] = Instance.new("UIAspectRatioConstraint", G2L["165"]);
G2L["167"]["AspectRatio"] = 11.17985;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Orbit.Target.SELECTONSCREEN.Handle
G2L["168"] = Instance.new("LocalScript", G2L["164"]);
G2L["168"]["Name"] = [[Handle]];


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Orbit.Target.SELECTONSCREEN.UIAspectRatioConstraint
G2L["169"] = Instance.new("UIAspectRatioConstraint", G2L["164"]);
G2L["169"]["AspectRatio"] = 11.17985;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Orbit.Target.Orbit
G2L["16a"] = Instance.new("LocalScript", G2L["159"]);
G2L["16a"]["Name"] = [[Orbit]];


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Orbit.Target.Togglers
G2L["16b"] = Instance.new("LocalScript", G2L["159"]);
G2L["16b"]["Name"] = [[Togglers]];


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Orbit.Target.TargetNameHandler
G2L["16c"] = Instance.new("LocalScript", G2L["159"]);
G2L["16c"]["Name"] = [[TargetNameHandler]];


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Orbit.Target.ORBIT
G2L["16d"] = Instance.new("Frame", G2L["159"]);
G2L["16d"]["BorderSizePixel"] = 0;
G2L["16d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["16d"]["Size"] = UDim2.new(1, 0, 0.1553, 0);
G2L["16d"]["Position"] = UDim2.new(0, 0, 0.14026, 0);
G2L["16d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["16d"]["Name"] = [[ORBIT]];
G2L["16d"]["LayoutOrder"] = 1;
G2L["16d"]["BackgroundTransparency"] = 1;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Orbit.Target.ORBIT.Toggle
G2L["16e"] = Instance.new("TextLabel", G2L["16d"]);
G2L["16e"]["BorderSizePixel"] = 0;
G2L["16e"]["TextSize"] = 14;
G2L["16e"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 171);
G2L["16e"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["16e"]["TextColor3"] = Color3.fromRGB(0, 0, 223);
G2L["16e"]["Size"] = UDim2.new(0.05745, 0, 0.76715, 0);
G2L["16e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["16e"]["Text"] = [[]];
G2L["16e"]["Name"] = [[Toggle]];
G2L["16e"]["Position"] = UDim2.new(0.88346, 0, 0.15794, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Orbit.Target.ORBIT.Toggle.UICorner
G2L["16f"] = Instance.new("UICorner", G2L["16e"]);
G2L["16f"]["CornerRadius"] = UDim.new(0.2, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Orbit.Target.ORBIT.Toggle.UIAspectRatioConstraint
G2L["170"] = Instance.new("UIAspectRatioConstraint", G2L["16e"]);
G2L["170"]["AspectRatio"] = 1.04435;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Orbit.Target.ORBIT.UIAspectRatioConstraint
G2L["171"] = Instance.new("UIAspectRatioConstraint", G2L["16d"]);
G2L["171"]["AspectRatio"] = 13.9463;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Orbit.Target.ORBIT.KeyBind
G2L["172"] = Instance.new("TextButton", G2L["16d"]);
G2L["172"]["TextWrapped"] = true;
G2L["172"]["BorderSizePixel"] = 0;
G2L["172"]["TextColor3"] = Color3.fromRGB(0, 0, 169);
G2L["172"]["TextSize"] = 14;
G2L["172"]["TextScaled"] = true;
G2L["172"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["172"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["172"]["ZIndex"] = 2;
G2L["172"]["Size"] = UDim2.new(0.30638, 0, 1, 0);
G2L["172"]["BackgroundTransparency"] = 1;
G2L["172"]["Name"] = [[KeyBind]];
G2L["172"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["172"]["Text"] = [[LeftAlt]];
G2L["172"]["Position"] = UDim2.new(-0, 0, 0, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Orbit.Target.ORBIT.KeyBind.UITextSizeConstraint
G2L["173"] = Instance.new("UITextSizeConstraint", G2L["172"]);
G2L["173"]["MaxTextSize"] = 40;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Orbit.Target.ORBIT.Trigger
G2L["174"] = Instance.new("TextButton", G2L["16d"]);
G2L["174"]["TextWrapped"] = true;
G2L["174"]["BorderSizePixel"] = 0;
G2L["174"]["TextColor3"] = Color3.fromRGB(0, 0, 169);
G2L["174"]["TextSize"] = 14;
G2L["174"]["TextScaled"] = true;
G2L["174"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 169);
G2L["174"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["174"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["174"]["BackgroundTransparency"] = 1;
G2L["174"]["Name"] = [[Trigger]];
G2L["174"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["174"]["Text"] = [[ORBIT]];


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Orbit.Target.ORBIT.Trigger.UITextSizeConstraint
G2L["175"] = Instance.new("UITextSizeConstraint", G2L["174"]);
G2L["175"]["MaxTextSize"] = 40;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Orbit.Target.ORBIT.Trigger.UIAspectRatioConstraint
G2L["176"] = Instance.new("UIAspectRatioConstraint", G2L["174"]);
G2L["176"]["AspectRatio"] = 13.9463;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Orbit.Target.Keybind
G2L["177"] = Instance.new("LocalScript", G2L["159"]);
G2L["177"]["Name"] = [[Keybind]];


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Orbit.Target.AUTOSTOMP
G2L["178"] = Instance.new("Frame", G2L["159"]);
G2L["178"]["BorderSizePixel"] = 0;
G2L["178"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["178"]["Size"] = UDim2.new(1, 0, 0.155, 0);
G2L["178"]["Position"] = UDim2.new(0, 0, 0.36072, 0);
G2L["178"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["178"]["Name"] = [[AUTOSTOMP]];
G2L["178"]["LayoutOrder"] = 2;
G2L["178"]["BackgroundTransparency"] = 1;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Orbit.Target.AUTOSTOMP.Trigger
G2L["179"] = Instance.new("TextButton", G2L["178"]);
G2L["179"]["TextWrapped"] = true;
G2L["179"]["BorderSizePixel"] = 0;
G2L["179"]["TextColor3"] = Color3.fromRGB(0, 0, 169);
G2L["179"]["TextSize"] = 14;
G2L["179"]["TextScaled"] = true;
G2L["179"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 169);
G2L["179"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["179"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["179"]["BackgroundTransparency"] = 1;
G2L["179"]["Name"] = [[Trigger]];
G2L["179"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["179"]["Text"] = [[AUTO STOMP]];


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Orbit.Target.AUTOSTOMP.Trigger.UITextSizeConstraint
G2L["17a"] = Instance.new("UITextSizeConstraint", G2L["179"]);
G2L["17a"]["MaxTextSize"] = 40;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Orbit.Target.AUTOSTOMP.Trigger.UIAspectRatioConstraint
G2L["17b"] = Instance.new("UIAspectRatioConstraint", G2L["179"]);
G2L["17b"]["AspectRatio"] = 13.9463;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Orbit.Target.AUTOSTOMP.Toggle
G2L["17c"] = Instance.new("TextLabel", G2L["178"]);
G2L["17c"]["BorderSizePixel"] = 0;
G2L["17c"]["TextSize"] = 14;
G2L["17c"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 171);
G2L["17c"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["17c"]["TextColor3"] = Color3.fromRGB(0, 0, 223);
G2L["17c"]["Size"] = UDim2.new(0.05745, 0, 0.76715, 0);
G2L["17c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["17c"]["Text"] = [[]];
G2L["17c"]["Name"] = [[Toggle]];
G2L["17c"]["Position"] = UDim2.new(0.883, 0, 0.158, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Orbit.Target.AUTOSTOMP.Toggle.UICorner
G2L["17d"] = Instance.new("UICorner", G2L["17c"]);
G2L["17d"]["CornerRadius"] = UDim.new(0.2, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Orbit.Target.AUTOSTOMP.Toggle.UIAspectRatioConstraint
G2L["17e"] = Instance.new("UIAspectRatioConstraint", G2L["17c"]);
G2L["17e"]["AspectRatio"] = 1.04435;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Orbit.Target.AUTOSTOMP.UIAspectRatioConstraint
G2L["17f"] = Instance.new("UIAspectRatioConstraint", G2L["178"]);
G2L["17f"]["AspectRatio"] = 13.9463;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Orbit.Target.VOID
G2L["180"] = Instance.new("Frame", G2L["159"]);
G2L["180"]["BorderSizePixel"] = 0;
G2L["180"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["180"]["Size"] = UDim2.new(1, 0, 0.155, 0);
G2L["180"]["Position"] = UDim2.new(0, 0, 0.36072, 0);
G2L["180"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["180"]["Name"] = [[VOID]];
G2L["180"]["LayoutOrder"] = 3;
G2L["180"]["BackgroundTransparency"] = 1;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Orbit.Target.VOID.Trigger
G2L["181"] = Instance.new("TextButton", G2L["180"]);
G2L["181"]["TextWrapped"] = true;
G2L["181"]["BorderSizePixel"] = 0;
G2L["181"]["TextColor3"] = Color3.fromRGB(0, 0, 169);
G2L["181"]["TextSize"] = 14;
G2L["181"]["TextScaled"] = true;
G2L["181"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 169);
G2L["181"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["181"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["181"]["BackgroundTransparency"] = 1;
G2L["181"]["Name"] = [[Trigger]];
G2L["181"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["181"]["Text"] = [[VOID]];


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Orbit.Target.VOID.Trigger.UITextSizeConstraint
G2L["182"] = Instance.new("UITextSizeConstraint", G2L["181"]);
G2L["182"]["MaxTextSize"] = 40;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Orbit.Target.VOID.Trigger.UIAspectRatioConstraint
G2L["183"] = Instance.new("UIAspectRatioConstraint", G2L["181"]);
G2L["183"]["AspectRatio"] = 13.9463;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Orbit.Target.VOID.Toggle
G2L["184"] = Instance.new("TextLabel", G2L["180"]);
G2L["184"]["BorderSizePixel"] = 0;
G2L["184"]["TextSize"] = 14;
G2L["184"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 171);
G2L["184"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["184"]["TextColor3"] = Color3.fromRGB(0, 0, 223);
G2L["184"]["Size"] = UDim2.new(0.05745, 0, 0.76715, 0);
G2L["184"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["184"]["Text"] = [[]];
G2L["184"]["Name"] = [[Toggle]];
G2L["184"]["Position"] = UDim2.new(0.883, 0, 0.158, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Orbit.Target.VOID.Toggle.UICorner
G2L["185"] = Instance.new("UICorner", G2L["184"]);
G2L["185"]["CornerRadius"] = UDim.new(0.2, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Orbit.Target.VOID.Toggle.UIAspectRatioConstraint
G2L["186"] = Instance.new("UIAspectRatioConstraint", G2L["184"]);
G2L["186"]["AspectRatio"] = 1.04435;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Orbit.Target.VOID.UIAspectRatioConstraint
G2L["187"] = Instance.new("UIAspectRatioConstraint", G2L["180"]);
G2L["187"]["AspectRatio"] = 13.9463;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.Orbit.UIPadding
G2L["188"] = Instance.new("UIPadding", G2L["156"]);
G2L["188"]["PaddingTop"] = UDim.new(0.03, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock
G2L["189"] = Instance.new("ScrollingFrame", G2L["d"]);
G2L["189"]["Visible"] = false;
G2L["189"]["Active"] = true;
G2L["189"]["ScrollingDirection"] = Enum.ScrollingDirection.Y;
G2L["189"]["BorderSizePixel"] = 0;
G2L["189"]["CanvasSize"] = UDim2.new(0, 0, 2.5, 0);
G2L["189"]["CanvasPosition"] = Vector2.new(0, 140);
G2L["189"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["189"]["Name"] = [[AimLock]];
G2L["189"]["AutomaticCanvasSize"] = Enum.AutomaticSize.Y;
G2L["189"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["189"]["ScrollBarImageColor3"] = Color3.fromRGB(0, 0, 0);
G2L["189"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["189"]["ScrollBarThickness"] = 0;
G2L["189"]["BackgroundTransparency"] = 1;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock
G2L["18a"] = Instance.new("Frame", G2L["189"]);
G2L["18a"]["BorderSizePixel"] = 0;
G2L["18a"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 8);
G2L["18a"]["AutomaticSize"] = Enum.AutomaticSize.Y;
G2L["18a"]["Size"] = UDim2.new(0.90639, 0, 0.77882, 0);
G2L["18a"]["Position"] = UDim2.new(0.0468, 0, 0, 0);
G2L["18a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["18a"]["Name"] = [[AimLock]];
G2L["18a"]["LayoutOrder"] = 1;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.UICorner
G2L["18b"] = Instance.new("UICorner", G2L["18a"]);
G2L["18b"]["CornerRadius"] = UDim.new(0.05, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.Title
G2L["18c"] = Instance.new("TextLabel", G2L["18a"]);
G2L["18c"]["TextWrapped"] = true;
G2L["18c"]["BorderSizePixel"] = 0;
G2L["18c"]["TextSize"] = 14;
G2L["18c"]["TextScaled"] = true;
G2L["18c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["18c"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["18c"]["TextColor3"] = Color3.fromRGB(0, 0, 255);
G2L["18c"]["BackgroundTransparency"] = 1;
G2L["18c"]["Size"] = UDim2.new(1, 0, 0.14026, 0);
G2L["18c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["18c"]["Text"] = [[AIMLOCK]];
G2L["18c"]["Name"] = [[Title]];
G2L["18c"]["Position"] = UDim2.new(-0, 0, -0, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.Title.UIAspectRatioConstraint
G2L["18d"] = Instance.new("UIAspectRatioConstraint", G2L["18c"]);
G2L["18d"]["AspectRatio"] = 15.44224;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.AIMLOCK
G2L["18e"] = Instance.new("Frame", G2L["18a"]);
G2L["18e"]["BorderSizePixel"] = 0;
G2L["18e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["18e"]["Size"] = UDim2.new(1, 0, 0.1553, 0);
G2L["18e"]["Position"] = UDim2.new(0, 0, 0.14026, 0);
G2L["18e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["18e"]["Name"] = [[AIMLOCK]];
G2L["18e"]["LayoutOrder"] = 1;
G2L["18e"]["BackgroundTransparency"] = 1;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.AIMLOCK.Toggle
G2L["18f"] = Instance.new("TextLabel", G2L["18e"]);
G2L["18f"]["BorderSizePixel"] = 0;
G2L["18f"]["TextSize"] = 14;
G2L["18f"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 171);
G2L["18f"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["18f"]["TextColor3"] = Color3.fromRGB(0, 0, 223);
G2L["18f"]["Size"] = UDim2.new(0.05745, 0, 0.76715, 0);
G2L["18f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["18f"]["Text"] = [[]];
G2L["18f"]["Name"] = [[Toggle]];
G2L["18f"]["Position"] = UDim2.new(0.88346, 0, 0.15794, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.AIMLOCK.Toggle.UICorner
G2L["190"] = Instance.new("UICorner", G2L["18f"]);
G2L["190"]["CornerRadius"] = UDim.new(0.2, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.AIMLOCK.Toggle.UIAspectRatioConstraint
G2L["191"] = Instance.new("UIAspectRatioConstraint", G2L["18f"]);
G2L["191"]["AspectRatio"] = 1.04435;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.AIMLOCK.UIAspectRatioConstraint
G2L["192"] = Instance.new("UIAspectRatioConstraint", G2L["18e"]);
G2L["192"]["AspectRatio"] = 13.9463;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.AIMLOCK.KeyBind
G2L["193"] = Instance.new("TextButton", G2L["18e"]);
G2L["193"]["TextWrapped"] = true;
G2L["193"]["BorderSizePixel"] = 0;
G2L["193"]["TextColor3"] = Color3.fromRGB(0, 0, 169);
G2L["193"]["TextSize"] = 14;
G2L["193"]["TextScaled"] = true;
G2L["193"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["193"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["193"]["ZIndex"] = 2;
G2L["193"]["Size"] = UDim2.new(0.30638, 0, 1, 0);
G2L["193"]["BackgroundTransparency"] = 1;
G2L["193"]["Name"] = [[KeyBind]];
G2L["193"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["193"]["Text"] = [[C]];
G2L["193"]["Position"] = UDim2.new(-0, 0, 0, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.AIMLOCK.KeyBind.UITextSizeConstraint
G2L["194"] = Instance.new("UITextSizeConstraint", G2L["193"]);
G2L["194"]["MaxTextSize"] = 40;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.AIMLOCK.Trigger
G2L["195"] = Instance.new("TextButton", G2L["18e"]);
G2L["195"]["TextWrapped"] = true;
G2L["195"]["BorderSizePixel"] = 0;
G2L["195"]["TextColor3"] = Color3.fromRGB(0, 0, 169);
G2L["195"]["TextSize"] = 14;
G2L["195"]["TextScaled"] = true;
G2L["195"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 169);
G2L["195"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["195"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["195"]["BackgroundTransparency"] = 1;
G2L["195"]["Name"] = [[Trigger]];
G2L["195"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["195"]["Text"] = [[AIMLOCK]];


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.AIMLOCK.Trigger.UITextSizeConstraint
G2L["196"] = Instance.new("UITextSizeConstraint", G2L["195"]);
G2L["196"]["MaxTextSize"] = 40;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.AIMLOCK.Trigger.UIAspectRatioConstraint
G2L["197"] = Instance.new("UIAspectRatioConstraint", G2L["195"]);
G2L["197"]["AspectRatio"] = 13.9463;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.UIListLayout
G2L["198"] = Instance.new("UIListLayout", G2L["18a"]);
G2L["198"]["SortOrder"] = Enum.SortOrder.LayoutOrder;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.CAMERALOCK
G2L["199"] = Instance.new("Frame", G2L["18a"]);
G2L["199"]["BorderSizePixel"] = 0;
G2L["199"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["199"]["Size"] = UDim2.new(1, 0, 0.36872, 0);
G2L["199"]["Position"] = UDim2.new(0, 0, 0.38763, 0);
G2L["199"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["199"]["Name"] = [[CAMERALOCK]];
G2L["199"]["LayoutOrder"] = 6;
G2L["199"]["BackgroundTransparency"] = 1;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.CAMERALOCK.Trigger
G2L["19a"] = Instance.new("TextButton", G2L["199"]);
G2L["19a"]["TextWrapped"] = true;
G2L["19a"]["BorderSizePixel"] = 0;
G2L["19a"]["TextColor3"] = Color3.fromRGB(0, 0, 169);
G2L["19a"]["TextSize"] = 14;
G2L["19a"]["TextScaled"] = true;
G2L["19a"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 169);
G2L["19a"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["19a"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["19a"]["BackgroundTransparency"] = 1;
G2L["19a"]["Name"] = [[Trigger]];
G2L["19a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["19a"]["Text"] = [[CAMERA LOCK]];


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.CAMERALOCK.Trigger.UITextSizeConstraint
G2L["19b"] = Instance.new("UITextSizeConstraint", G2L["19a"]);
G2L["19b"]["MaxTextSize"] = 40;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.CAMERALOCK.Trigger.UIAspectRatioConstraint
G2L["19c"] = Instance.new("UIAspectRatioConstraint", G2L["19a"]);
G2L["19c"]["AspectRatio"] = 13.9463;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.CAMERALOCK.DropDownFrame
G2L["19d"] = Instance.new("Frame", G2L["199"]);
G2L["19d"]["Visible"] = false;
G2L["19d"]["ZIndex"] = 2;
G2L["19d"]["BorderSizePixel"] = 0;
G2L["19d"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 85);
G2L["19d"]["Size"] = UDim2.new(1, 0, 2.57035, 0);
G2L["19d"]["Position"] = UDim2.new(0, 0, 0.4, 0);
G2L["19d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["19d"]["Name"] = [[DropDownFrame]];


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.CAMERALOCK.DropDownFrame.DropDownScrolling
G2L["19e"] = Instance.new("ScrollingFrame", G2L["19d"]);
G2L["19e"]["Active"] = true;
G2L["19e"]["ZIndex"] = 2;
G2L["19e"]["BorderSizePixel"] = 0;
G2L["19e"]["BackgroundColor3"] = Color3.fromRGB(86, 0, 0);
G2L["19e"]["Name"] = [[DropDownScrolling]];
G2L["19e"]["AutomaticCanvasSize"] = Enum.AutomaticSize.Y;
G2L["19e"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["19e"]["ScrollBarImageColor3"] = Color3.fromRGB(0, 0, 255);
G2L["19e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["19e"]["ScrollBarThickness"] = 4;
G2L["19e"]["BackgroundTransparency"] = 1;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.CAMERALOCK.DropDownFrame.DropDownScrolling.UIListLayout
G2L["19f"] = Instance.new("UIListLayout", G2L["19e"]);
G2L["19f"]["SortOrder"] = Enum.SortOrder.LayoutOrder;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.CAMERALOCK.DropDownFrame.DropDownScrolling.HumanoidRootPart
G2L["1a0"] = Instance.new("TextButton", G2L["19e"]);
G2L["1a0"]["TextWrapped"] = true;
G2L["1a0"]["BorderSizePixel"] = 0;
G2L["1a0"]["TextColor3"] = Color3.fromRGB(0, 0, 169);
G2L["1a0"]["TextSize"] = 14;
G2L["1a0"]["TextScaled"] = true;
G2L["1a0"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["1a0"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["1a0"]["ZIndex"] = 2;
G2L["1a0"]["Size"] = UDim2.new(1, 0, 0.4, 0);
G2L["1a0"]["BackgroundTransparency"] = 1;
G2L["1a0"]["LayoutOrder"] = 1;
G2L["1a0"]["Name"] = [[HumanoidRootPart]];
G2L["1a0"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1a0"]["Text"] = [[HumanoidRootPart]];
G2L["1a0"]["Position"] = UDim2.new(0, 0, -0.01977, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.CAMERALOCK.DropDownFrame.DropDownScrolling.HumanoidRootPart.UIAspectRatioConstraint
G2L["1a1"] = Instance.new("UIAspectRatioConstraint", G2L["1a0"]);
G2L["1a1"]["AspectRatio"] = 13.56456;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.CAMERALOCK.DropDownFrame.DropDownScrolling.UpperTorso
G2L["1a2"] = Instance.new("TextButton", G2L["19e"]);
G2L["1a2"]["TextWrapped"] = true;
G2L["1a2"]["BorderSizePixel"] = 0;
G2L["1a2"]["TextColor3"] = Color3.fromRGB(0, 0, 169);
G2L["1a2"]["TextSize"] = 14;
G2L["1a2"]["TextScaled"] = true;
G2L["1a2"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["1a2"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["1a2"]["ZIndex"] = 2;
G2L["1a2"]["Size"] = UDim2.new(1, 0, 0.4, 0);
G2L["1a2"]["BackgroundTransparency"] = 1;
G2L["1a2"]["LayoutOrder"] = 2;
G2L["1a2"]["Name"] = [[UpperTorso]];
G2L["1a2"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1a2"]["Text"] = [[UpperTorso]];
G2L["1a2"]["Position"] = UDim2.new(0, 0, -0.01977, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.CAMERALOCK.DropDownFrame.DropDownScrolling.UpperTorso.UIAspectRatioConstraint
G2L["1a3"] = Instance.new("UIAspectRatioConstraint", G2L["1a2"]);
G2L["1a3"]["AspectRatio"] = 13.56456;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.CAMERALOCK.DropDownFrame.DropDownScrolling.LowerTorso
G2L["1a4"] = Instance.new("TextButton", G2L["19e"]);
G2L["1a4"]["TextWrapped"] = true;
G2L["1a4"]["BorderSizePixel"] = 0;
G2L["1a4"]["TextColor3"] = Color3.fromRGB(0, 0, 169);
G2L["1a4"]["TextSize"] = 14;
G2L["1a4"]["TextScaled"] = true;
G2L["1a4"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["1a4"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["1a4"]["ZIndex"] = 2;
G2L["1a4"]["Size"] = UDim2.new(1, 0, 0.4, 0);
G2L["1a4"]["BackgroundTransparency"] = 1;
G2L["1a4"]["LayoutOrder"] = 3;
G2L["1a4"]["Name"] = [[LowerTorso]];
G2L["1a4"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1a4"]["Text"] = [[LowerTorso]];
G2L["1a4"]["Position"] = UDim2.new(0, 0, -0.01977, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.CAMERALOCK.DropDownFrame.DropDownScrolling.LowerTorso.UIAspectRatioConstraint
G2L["1a5"] = Instance.new("UIAspectRatioConstraint", G2L["1a4"]);
G2L["1a5"]["AspectRatio"] = 13.56456;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.CAMERALOCK.DropDownFrame.DropDownScrolling.Head
G2L["1a6"] = Instance.new("TextButton", G2L["19e"]);
G2L["1a6"]["TextWrapped"] = true;
G2L["1a6"]["BorderSizePixel"] = 0;
G2L["1a6"]["TextColor3"] = Color3.fromRGB(0, 0, 169);
G2L["1a6"]["TextSize"] = 14;
G2L["1a6"]["TextScaled"] = true;
G2L["1a6"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["1a6"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["1a6"]["ZIndex"] = 2;
G2L["1a6"]["Size"] = UDim2.new(1, 0, 0.4, 0);
G2L["1a6"]["BackgroundTransparency"] = 1;
G2L["1a6"]["Name"] = [[Head]];
G2L["1a6"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1a6"]["Text"] = [[Head]];
G2L["1a6"]["Position"] = UDim2.new(0, 0, -0.01977, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.CAMERALOCK.DropDownFrame.DropDownScrolling.Head.UIAspectRatioConstraint
G2L["1a7"] = Instance.new("UIAspectRatioConstraint", G2L["1a6"]);
G2L["1a7"]["AspectRatio"] = 13.56456;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.CAMERALOCK.DropDownFrame.DropDownScrolling.UIAspectRatioConstraint
G2L["1a8"] = Instance.new("UIAspectRatioConstraint", G2L["19e"]);
G2L["1a8"]["AspectRatio"] = 5.42583;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.CAMERALOCK.DropDownFrame.UICorner
G2L["1a9"] = Instance.new("UICorner", G2L["19d"]);
G2L["1a9"]["CornerRadius"] = UDim.new(0.1, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.CAMERALOCK.DropDownFrame.UIAspectRatioConstraint
G2L["1aa"] = Instance.new("UIAspectRatioConstraint", G2L["19d"]);
G2L["1aa"]["AspectRatio"] = 5.42583;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.CAMERALOCK.LOCKON
G2L["1ab"] = Instance.new("TextLabel", G2L["199"]);
G2L["1ab"]["TextWrapped"] = true;
G2L["1ab"]["BorderSizePixel"] = 0;
G2L["1ab"]["TextSize"] = 14;
G2L["1ab"]["TextScaled"] = true;
G2L["1ab"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["1ab"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["1ab"]["TextColor3"] = Color3.fromRGB(0, 0, 200);
G2L["1ab"]["BackgroundTransparency"] = 1;
G2L["1ab"]["Size"] = UDim2.new(1.00022, 0, 0.93111, 0);
G2L["1ab"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1ab"]["Text"] = [[Head]];
G2L["1ab"]["Name"] = [[LOCKON]];
G2L["1ab"]["Position"] = UDim2.new(-0.00365, 0, 0.46407, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.CAMERALOCK.LOCKON.UIAspectRatioConstraint
G2L["1ac"] = Instance.new("UIAspectRatioConstraint", G2L["1ab"]);
G2L["1ac"]["AspectRatio"] = 14.98145;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.CAMERALOCK.Arrow
G2L["1ad"] = Instance.new("TextLabel", G2L["199"]);
G2L["1ad"]["TextWrapped"] = true;
G2L["1ad"]["BorderSizePixel"] = 0;
G2L["1ad"]["TextSize"] = 14;
G2L["1ad"]["TextScaled"] = true;
G2L["1ad"]["BackgroundColor3"] = Color3.fromRGB(135, 0, 0);
G2L["1ad"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["1ad"]["TextColor3"] = Color3.fromRGB(0, 0, 169);
G2L["1ad"]["BackgroundTransparency"] = 1;
G2L["1ad"]["Size"] = UDim2.new(0.05745, 0, 0.76715, 0);
G2L["1ad"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1ad"]["Text"] = [[<]];
G2L["1ad"]["Name"] = [[Arrow]];
G2L["1ad"]["Position"] = UDim2.new(0.88346, 0, 0.05, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.CAMERALOCK.Arrow.UICorner
G2L["1ae"] = Instance.new("UICorner", G2L["1ad"]);
G2L["1ae"]["CornerRadius"] = UDim.new(0.2, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.CAMERALOCK.Arrow.UIAspectRatioConstraint
G2L["1af"] = Instance.new("UIAspectRatioConstraint", G2L["1ad"]);
G2L["1af"]["AspectRatio"] = 1.04435;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.CAMERALOCK.UIAspectRatioConstraint
G2L["1b0"] = Instance.new("UIAspectRatioConstraint", G2L["199"]);
G2L["1b0"]["AspectRatio"] = 5.87411;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.AIMLOCKTOGGLE
G2L["1b1"] = Instance.new("Frame", G2L["18a"]);
G2L["1b1"]["BorderSizePixel"] = 0;
G2L["1b1"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["1b1"]["Size"] = UDim2.new(1, 0, 0.36872, 0);
G2L["1b1"]["Position"] = UDim2.new(0, 0, 0.38763, 0);
G2L["1b1"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1b1"]["Name"] = [[AIMLOCKTOGGLE]];
G2L["1b1"]["LayoutOrder"] = 7;
G2L["1b1"]["BackgroundTransparency"] = 1;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.AIMLOCKTOGGLE.Trigger
G2L["1b2"] = Instance.new("TextButton", G2L["1b1"]);
G2L["1b2"]["TextWrapped"] = true;
G2L["1b2"]["BorderSizePixel"] = 0;
G2L["1b2"]["TextColor3"] = Color3.fromRGB(0, 0, 169);
G2L["1b2"]["TextSize"] = 14;
G2L["1b2"]["TextScaled"] = true;
G2L["1b2"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 169);
G2L["1b2"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["1b2"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["1b2"]["BackgroundTransparency"] = 1;
G2L["1b2"]["Name"] = [[Trigger]];
G2L["1b2"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1b2"]["Text"] = [[AIMLOCK TRIGGER MODE]];


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.AIMLOCKTOGGLE.Trigger.UITextSizeConstraint
G2L["1b3"] = Instance.new("UITextSizeConstraint", G2L["1b2"]);
G2L["1b3"]["MaxTextSize"] = 40;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.AIMLOCKTOGGLE.Trigger.UIAspectRatioConstraint
G2L["1b4"] = Instance.new("UIAspectRatioConstraint", G2L["1b2"]);
G2L["1b4"]["AspectRatio"] = 13.9463;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.AIMLOCKTOGGLE.DropDownFrame
G2L["1b5"] = Instance.new("Frame", G2L["1b1"]);
G2L["1b5"]["Visible"] = false;
G2L["1b5"]["ZIndex"] = 2;
G2L["1b5"]["BorderSizePixel"] = 0;
G2L["1b5"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 85);
G2L["1b5"]["Size"] = UDim2.new(1, 0, 2.57035, 0);
G2L["1b5"]["Position"] = UDim2.new(0.00022, 0, 0.4, 0);
G2L["1b5"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1b5"]["Name"] = [[DropDownFrame]];


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.AIMLOCKTOGGLE.DropDownFrame.DropDownScrolling
G2L["1b6"] = Instance.new("ScrollingFrame", G2L["1b5"]);
G2L["1b6"]["Active"] = true;
G2L["1b6"]["ZIndex"] = 2;
G2L["1b6"]["BorderSizePixel"] = 0;
G2L["1b6"]["BackgroundColor3"] = Color3.fromRGB(86, 0, 0);
G2L["1b6"]["Name"] = [[DropDownScrolling]];
G2L["1b6"]["AutomaticCanvasSize"] = Enum.AutomaticSize.Y;
G2L["1b6"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["1b6"]["ScrollBarImageColor3"] = Color3.fromRGB(0, 0, 255);
G2L["1b6"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1b6"]["ScrollBarThickness"] = 4;
G2L["1b6"]["BackgroundTransparency"] = 1;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.AIMLOCKTOGGLE.DropDownFrame.DropDownScrolling.UIListLayout
G2L["1b7"] = Instance.new("UIListLayout", G2L["1b6"]);
G2L["1b7"]["SortOrder"] = Enum.SortOrder.LayoutOrder;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.AIMLOCKTOGGLE.DropDownFrame.DropDownScrolling.Toggle
G2L["1b8"] = Instance.new("TextButton", G2L["1b6"]);
G2L["1b8"]["TextWrapped"] = true;
G2L["1b8"]["BorderSizePixel"] = 0;
G2L["1b8"]["TextColor3"] = Color3.fromRGB(0, 0, 169);
G2L["1b8"]["TextSize"] = 14;
G2L["1b8"]["TextScaled"] = true;
G2L["1b8"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 171);
G2L["1b8"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["1b8"]["ZIndex"] = 2;
G2L["1b8"]["Size"] = UDim2.new(1, 0, 0.4, 0);
G2L["1b8"]["BackgroundTransparency"] = 1;
G2L["1b8"]["LayoutOrder"] = 1;
G2L["1b8"]["Name"] = [[Toggle]];
G2L["1b8"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1b8"]["Text"] = [[TOGGLE]];
G2L["1b8"]["Position"] = UDim2.new(0, 0, -0.01977, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.AIMLOCKTOGGLE.DropDownFrame.DropDownScrolling.Toggle.UIAspectRatioConstraint
G2L["1b9"] = Instance.new("UIAspectRatioConstraint", G2L["1b8"]);
G2L["1b9"]["AspectRatio"] = 13.56456;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.AIMLOCKTOGGLE.DropDownFrame.DropDownScrolling.Hold
G2L["1ba"] = Instance.new("TextButton", G2L["1b6"]);
G2L["1ba"]["TextWrapped"] = true;
G2L["1ba"]["BorderSizePixel"] = 0;
G2L["1ba"]["TextColor3"] = Color3.fromRGB(0, 0, 169);
G2L["1ba"]["TextSize"] = 14;
G2L["1ba"]["TextScaled"] = true;
G2L["1ba"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["1ba"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["1ba"]["ZIndex"] = 2;
G2L["1ba"]["Size"] = UDim2.new(1, 0, 0.4, 0);
G2L["1ba"]["BackgroundTransparency"] = 1;
G2L["1ba"]["Name"] = [[Hold]];
G2L["1ba"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1ba"]["Text"] = [[HOLD]];
G2L["1ba"]["Position"] = UDim2.new(0, 0, -0.01977, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.AIMLOCKTOGGLE.DropDownFrame.DropDownScrolling.Hold.UIAspectRatioConstraint
G2L["1bb"] = Instance.new("UIAspectRatioConstraint", G2L["1ba"]);
G2L["1bb"]["AspectRatio"] = 13.56456;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.AIMLOCKTOGGLE.DropDownFrame.DropDownScrolling.UIAspectRatioConstraint
G2L["1bc"] = Instance.new("UIAspectRatioConstraint", G2L["1b6"]);
G2L["1bc"]["AspectRatio"] = 5.42583;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.AIMLOCKTOGGLE.DropDownFrame.UICorner
G2L["1bd"] = Instance.new("UICorner", G2L["1b5"]);
G2L["1bd"]["CornerRadius"] = UDim.new(0.1, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.AIMLOCKTOGGLE.DropDownFrame.UIAspectRatioConstraint
G2L["1be"] = Instance.new("UIAspectRatioConstraint", G2L["1b5"]);
G2L["1be"]["AspectRatio"] = 5.42583;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.AIMLOCKTOGGLE.MODE
G2L["1bf"] = Instance.new("TextLabel", G2L["1b1"]);
G2L["1bf"]["TextWrapped"] = true;
G2L["1bf"]["BorderSizePixel"] = 0;
G2L["1bf"]["TextSize"] = 14;
G2L["1bf"]["TextScaled"] = true;
G2L["1bf"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["1bf"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["1bf"]["TextColor3"] = Color3.fromRGB(0, 0, 200);
G2L["1bf"]["BackgroundTransparency"] = 1;
G2L["1bf"]["Size"] = UDim2.new(1.00022, 0, 0.93111, 0);
G2L["1bf"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1bf"]["Text"] = [[HOLD]];
G2L["1bf"]["Name"] = [[MODE]];
G2L["1bf"]["Position"] = UDim2.new(-0.00365, 0, 0.46407, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.AIMLOCKTOGGLE.MODE.UIAspectRatioConstraint
G2L["1c0"] = Instance.new("UIAspectRatioConstraint", G2L["1bf"]);
G2L["1c0"]["AspectRatio"] = 14.98145;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.AIMLOCKTOGGLE.Arrow
G2L["1c1"] = Instance.new("TextLabel", G2L["1b1"]);
G2L["1c1"]["TextWrapped"] = true;
G2L["1c1"]["BorderSizePixel"] = 0;
G2L["1c1"]["TextSize"] = 14;
G2L["1c1"]["TextScaled"] = true;
G2L["1c1"]["BackgroundColor3"] = Color3.fromRGB(135, 0, 0);
G2L["1c1"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L["1c1"]["TextColor3"] = Color3.fromRGB(0, 0, 169);
G2L["1c1"]["BackgroundTransparency"] = 1;
G2L["1c1"]["Size"] = UDim2.new(0.05745, 0, 0.76715, 0);
G2L["1c1"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1c1"]["Text"] = [[<]];
G2L["1c1"]["Name"] = [[Arrow]];
G2L["1c1"]["Position"] = UDim2.new(0.88346, 0, 0.05, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.AIMLOCKTOGGLE.Arrow.UICorner
G2L["1c2"] = Instance.new("UICorner", G2L["1c1"]);
G2L["1c2"]["CornerRadius"] = UDim.new(0.2, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.AIMLOCKTOGGLE.Arrow.UIAspectRatioConstraint
G2L["1c3"] = Instance.new("UIAspectRatioConstraint", G2L["1c1"]);
G2L["1c3"]["AspectRatio"] = 1.04435;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.AIMLOCKTOGGLE.UIAspectRatioConstraint
G2L["1c4"] = Instance.new("UIAspectRatioConstraint", G2L["1b1"]);
G2L["1c4"]["AspectRatio"] = 5.87411;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.ANTIGROUNDSHOOT
G2L["1c5"] = Instance.new("Frame", G2L["18a"]);
G2L["1c5"]["BorderSizePixel"] = 0;
G2L["1c5"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["1c5"]["Size"] = UDim2.new(1, 0, 0.1553, 0);
G2L["1c5"]["Position"] = UDim2.new(0, 0, 0.29556, 0);
G2L["1c5"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1c5"]["Name"] = [[ANTIGROUNDSHOOT]];
G2L["1c5"]["LayoutOrder"] = 4;
G2L["1c5"]["BackgroundTransparency"] = 1;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.ANTIGROUNDSHOOT.Trigger
G2L["1c6"] = Instance.new("TextButton", G2L["1c5"]);
G2L["1c6"]["TextWrapped"] = true;
G2L["1c6"]["BorderSizePixel"] = 0;
G2L["1c6"]["TextColor3"] = Color3.fromRGB(0, 0, 169);
G2L["1c6"]["TextSize"] = 14;
G2L["1c6"]["TextScaled"] = true;
G2L["1c6"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 169);
G2L["1c6"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["1c6"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["1c6"]["BackgroundTransparency"] = 1;
G2L["1c6"]["Name"] = [[Trigger]];
G2L["1c6"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1c6"]["Text"] = [[ANTI GROUND SHOOT]];


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.ANTIGROUNDSHOOT.Trigger.UITextSizeConstraint
G2L["1c7"] = Instance.new("UITextSizeConstraint", G2L["1c6"]);
G2L["1c7"]["MaxTextSize"] = 40;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.ANTIGROUNDSHOOT.Trigger.UIAspectRatioConstraint
G2L["1c8"] = Instance.new("UIAspectRatioConstraint", G2L["1c6"]);
G2L["1c8"]["AspectRatio"] = 13.9463;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.ANTIGROUNDSHOOT.Toggle
G2L["1c9"] = Instance.new("TextLabel", G2L["1c5"]);
G2L["1c9"]["BorderSizePixel"] = 0;
G2L["1c9"]["TextSize"] = 14;
G2L["1c9"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 171);
G2L["1c9"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["1c9"]["TextColor3"] = Color3.fromRGB(0, 0, 223);
G2L["1c9"]["Size"] = UDim2.new(0.05745, 0, 0.76715, 0);
G2L["1c9"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1c9"]["Text"] = [[]];
G2L["1c9"]["Name"] = [[Toggle]];
G2L["1c9"]["Position"] = UDim2.new(0.88346, 0, 0.15794, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.ANTIGROUNDSHOOT.Toggle.UICorner
G2L["1ca"] = Instance.new("UICorner", G2L["1c9"]);
G2L["1ca"]["CornerRadius"] = UDim.new(0.2, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.ANTIGROUNDSHOOT.Toggle.UIAspectRatioConstraint
G2L["1cb"] = Instance.new("UIAspectRatioConstraint", G2L["1c9"]);
G2L["1cb"]["AspectRatio"] = 1.04435;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.ANTIGROUNDSHOOT.UIAspectRatioConstraint
G2L["1cc"] = Instance.new("UIAspectRatioConstraint", G2L["1c5"]);
G2L["1cc"]["AspectRatio"] = 13.9463;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.UIAspectRatioConstraint
G2L["1cd"] = Instance.new("UIAspectRatioConstraint", G2L["18a"]);
G2L["1cd"]["AspectRatio"] = 1.88;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.CREWCHECK
G2L["1ce"] = Instance.new("Frame", G2L["18a"]);
G2L["1ce"]["BorderSizePixel"] = 0;
G2L["1ce"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["1ce"]["Size"] = UDim2.new(1, 0, 0.1553, 0);
G2L["1ce"]["Position"] = UDim2.new(0, 0, 0.29556, 0);
G2L["1ce"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1ce"]["Name"] = [[CREWCHECK]];
G2L["1ce"]["LayoutOrder"] = 2;
G2L["1ce"]["BackgroundTransparency"] = 1;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.CREWCHECK.Trigger
G2L["1cf"] = Instance.new("TextButton", G2L["1ce"]);
G2L["1cf"]["TextWrapped"] = true;
G2L["1cf"]["BorderSizePixel"] = 0;
G2L["1cf"]["TextColor3"] = Color3.fromRGB(0, 0, 169);
G2L["1cf"]["TextSize"] = 14;
G2L["1cf"]["TextScaled"] = true;
G2L["1cf"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 169);
G2L["1cf"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["1cf"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["1cf"]["BackgroundTransparency"] = 1;
G2L["1cf"]["Name"] = [[Trigger]];
G2L["1cf"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1cf"]["Text"] = [[CREW CHECK]];


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.CREWCHECK.Trigger.UITextSizeConstraint
G2L["1d0"] = Instance.new("UITextSizeConstraint", G2L["1cf"]);
G2L["1d0"]["MaxTextSize"] = 40;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.CREWCHECK.Trigger.UIAspectRatioConstraint
G2L["1d1"] = Instance.new("UIAspectRatioConstraint", G2L["1cf"]);
G2L["1d1"]["AspectRatio"] = 13.9463;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.CREWCHECK.Toggle
G2L["1d2"] = Instance.new("TextLabel", G2L["1ce"]);
G2L["1d2"]["BorderSizePixel"] = 0;
G2L["1d2"]["TextSize"] = 14;
G2L["1d2"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 171);
G2L["1d2"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["1d2"]["TextColor3"] = Color3.fromRGB(0, 0, 223);
G2L["1d2"]["Size"] = UDim2.new(0.05745, 0, 0.76715, 0);
G2L["1d2"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1d2"]["Text"] = [[]];
G2L["1d2"]["Name"] = [[Toggle]];
G2L["1d2"]["Position"] = UDim2.new(0.88346, 0, 0.15794, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.CREWCHECK.Toggle.UICorner
G2L["1d3"] = Instance.new("UICorner", G2L["1d2"]);
G2L["1d3"]["CornerRadius"] = UDim.new(0.2, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.CREWCHECK.Toggle.UIAspectRatioConstraint
G2L["1d4"] = Instance.new("UIAspectRatioConstraint", G2L["1d2"]);
G2L["1d4"]["AspectRatio"] = 1.04435;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.CREWCHECK.UIAspectRatioConstraint
G2L["1d5"] = Instance.new("UIAspectRatioConstraint", G2L["1ce"]);
G2L["1d5"]["AspectRatio"] = 13.9463;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.FRIENDCHECK
G2L["1d6"] = Instance.new("Frame", G2L["18a"]);
G2L["1d6"]["BorderSizePixel"] = 0;
G2L["1d6"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["1d6"]["Size"] = UDim2.new(1, 0, 0.1553, 0);
G2L["1d6"]["Position"] = UDim2.new(0, 0, 0.29556, 0);
G2L["1d6"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1d6"]["Name"] = [[FRIENDCHECK]];
G2L["1d6"]["LayoutOrder"] = 3;
G2L["1d6"]["BackgroundTransparency"] = 1;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.FRIENDCHECK.Trigger
G2L["1d7"] = Instance.new("TextButton", G2L["1d6"]);
G2L["1d7"]["TextWrapped"] = true;
G2L["1d7"]["BorderSizePixel"] = 0;
G2L["1d7"]["TextColor3"] = Color3.fromRGB(0, 0, 169);
G2L["1d7"]["TextSize"] = 14;
G2L["1d7"]["TextScaled"] = true;
G2L["1d7"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 169);
G2L["1d7"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["1d7"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["1d7"]["BackgroundTransparency"] = 1;
G2L["1d7"]["Name"] = [[Trigger]];
G2L["1d7"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1d7"]["Text"] = [[FRIEND CHECK]];


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.FRIENDCHECK.Trigger.UITextSizeConstraint
G2L["1d8"] = Instance.new("UITextSizeConstraint", G2L["1d7"]);
G2L["1d8"]["MaxTextSize"] = 40;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.FRIENDCHECK.Trigger.UIAspectRatioConstraint
G2L["1d9"] = Instance.new("UIAspectRatioConstraint", G2L["1d7"]);
G2L["1d9"]["AspectRatio"] = 13.9463;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.FRIENDCHECK.Toggle
G2L["1da"] = Instance.new("TextLabel", G2L["1d6"]);
G2L["1da"]["BorderSizePixel"] = 0;
G2L["1da"]["TextSize"] = 14;
G2L["1da"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 171);
G2L["1da"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["1da"]["TextColor3"] = Color3.fromRGB(0, 0, 223);
G2L["1da"]["Size"] = UDim2.new(0.05745, 0, 0.76715, 0);
G2L["1da"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1da"]["Text"] = [[]];
G2L["1da"]["Name"] = [[Toggle]];
G2L["1da"]["Position"] = UDim2.new(0.88346, 0, 0.15794, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.FRIENDCHECK.Toggle.UICorner
G2L["1db"] = Instance.new("UICorner", G2L["1da"]);
G2L["1db"]["CornerRadius"] = UDim.new(0.2, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.FRIENDCHECK.Toggle.UIAspectRatioConstraint
G2L["1dc"] = Instance.new("UIAspectRatioConstraint", G2L["1da"]);
G2L["1dc"]["AspectRatio"] = 1.04435;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.FRIENDCHECK.UIAspectRatioConstraint
G2L["1dd"] = Instance.new("UIAspectRatioConstraint", G2L["1d6"]);
G2L["1dd"]["AspectRatio"] = 13.9463;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.Togglers
G2L["1de"] = Instance.new("LocalScript", G2L["18a"]);
G2L["1de"]["Name"] = [[Togglers]];


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.Aimlock
G2L["1df"] = Instance.new("LocalScript", G2L["18a"]);
G2L["1df"]["Name"] = [[Aimlock]];


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.Keybind
G2L["1e0"] = Instance.new("LocalScript", G2L["18a"]);
G2L["1e0"]["Name"] = [[Keybind]];


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.Dropdown
G2L["1e1"] = Instance.new("LocalScript", G2L["18a"]);
G2L["1e1"]["Name"] = [[Dropdown]];


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.WALLCHECK
G2L["1e2"] = Instance.new("Frame", G2L["18a"]);
G2L["1e2"]["BorderSizePixel"] = 0;
G2L["1e2"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["1e2"]["Size"] = UDim2.new(1, 0, 0.1553, 0);
G2L["1e2"]["Position"] = UDim2.new(0, 0, 0.29556, 0);
G2L["1e2"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1e2"]["Name"] = [[WALLCHECK]];
G2L["1e2"]["LayoutOrder"] = 5;
G2L["1e2"]["BackgroundTransparency"] = 1;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.WALLCHECK.Trigger
G2L["1e3"] = Instance.new("TextButton", G2L["1e2"]);
G2L["1e3"]["TextWrapped"] = true;
G2L["1e3"]["BorderSizePixel"] = 0;
G2L["1e3"]["TextColor3"] = Color3.fromRGB(0, 0, 169);
G2L["1e3"]["TextSize"] = 14;
G2L["1e3"]["TextScaled"] = true;
G2L["1e3"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 169);
G2L["1e3"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["1e3"]["Size"] = UDim2.new(1, 0, 1, 0);
G2L["1e3"]["BackgroundTransparency"] = 1;
G2L["1e3"]["Name"] = [[Trigger]];
G2L["1e3"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1e3"]["Text"] = [[WALLCHECK]];


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.WALLCHECK.Trigger.UITextSizeConstraint
G2L["1e4"] = Instance.new("UITextSizeConstraint", G2L["1e3"]);
G2L["1e4"]["MaxTextSize"] = 40;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.WALLCHECK.Trigger.UIAspectRatioConstraint
G2L["1e5"] = Instance.new("UIAspectRatioConstraint", G2L["1e3"]);
G2L["1e5"]["AspectRatio"] = 13.9463;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.WALLCHECK.Toggle
G2L["1e6"] = Instance.new("TextLabel", G2L["1e2"]);
G2L["1e6"]["BorderSizePixel"] = 0;
G2L["1e6"]["TextSize"] = 14;
G2L["1e6"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 171);
G2L["1e6"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["1e6"]["TextColor3"] = Color3.fromRGB(0, 0, 223);
G2L["1e6"]["Size"] = UDim2.new(0.05745, 0, 0.76715, 0);
G2L["1e6"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1e6"]["Text"] = [[]];
G2L["1e6"]["Name"] = [[Toggle]];
G2L["1e6"]["Position"] = UDim2.new(0.88346, 0, 0.15794, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.WALLCHECK.Toggle.UICorner
G2L["1e7"] = Instance.new("UICorner", G2L["1e6"]);
G2L["1e7"]["CornerRadius"] = UDim.new(0.2, 0);


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.WALLCHECK.Toggle.UIAspectRatioConstraint
G2L["1e8"] = Instance.new("UIAspectRatioConstraint", G2L["1e6"]);
G2L["1e8"]["AspectRatio"] = 1.04435;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.WALLCHECK.UIAspectRatioConstraint
G2L["1e9"] = Instance.new("UIAspectRatioConstraint", G2L["1e2"]);
G2L["1e9"]["AspectRatio"] = 13.9463;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.UIListLayout
G2L["1ea"] = Instance.new("UIListLayout", G2L["189"]);
G2L["1ea"]["HorizontalAlignment"] = Enum.HorizontalAlignment.Center;
G2L["1ea"]["Padding"] = UDim.new(0.05, 0);
G2L["1ea"]["SortOrder"] = Enum.SortOrder.LayoutOrder;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.UIAspectRatioConstraint
G2L["1eb"] = Instance.new("UIAspectRatioConstraint", G2L["189"]);
G2L["1eb"]["AspectRatio"] = 1.61538;


-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.UIPadding
G2L["1ec"] = Instance.new("UIPadding", G2L["189"]);
G2L["1ec"]["PaddingTop"] = UDim.new(0.03, 0);


-- StarterGui.havocenchanted.MainFrame.SideFrame
G2L["1ed"] = Instance.new("Frame", G2L["4"]);
G2L["1ed"]["BorderSizePixel"] = 0;
G2L["1ed"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["1ed"]["Size"] = UDim2.new(0.20659, 0, 0.8892, 0);
G2L["1ed"]["Position"] = UDim2.new(0, 0, 0.1108, 0);
G2L["1ed"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1ed"]["Name"] = [[SideFrame]];
G2L["1ed"]["BackgroundTransparency"] = 1;


-- StarterGui.havocenchanted.MainFrame.SideFrame.LocalPlayer
G2L["1ee"] = Instance.new("TextButton", G2L["1ed"]);
G2L["1ee"]["TextWrapped"] = true;
G2L["1ee"]["BorderSizePixel"] = 0;
G2L["1ee"]["TextColor3"] = Color3.fromRGB(0, 0, 169);
G2L["1ee"]["TextSize"] = 1;
G2L["1ee"]["TextScaled"] = true;
G2L["1ee"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["1ee"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["1ee"]["Size"] = UDim2.new(1, 0, 0.14283, 0);
G2L["1ee"]["BackgroundTransparency"] = 1;
G2L["1ee"]["Name"] = [[LocalPlayer]];
G2L["1ee"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1ee"]["Text"] = [[LOCAL PLAYER]];
G2L["1ee"]["Position"] = UDim2.new(0, 0, -0, 0);


-- StarterGui.havocenchanted.MainFrame.SideFrame.LocalPlayer.UITextSizeConstraint
G2L["1ef"] = Instance.new("UITextSizeConstraint", G2L["1ee"]);
G2L["1ef"]["MaxTextSize"] = 21;


-- StarterGui.havocenchanted.MainFrame.SideFrame.LocalPlayer.UIAspectRatioConstraint
G2L["1f0"] = Instance.new("UIAspectRatioConstraint", G2L["1ee"]);
G2L["1f0"]["AspectRatio"] = 2.94492;


-- StarterGui.havocenchanted.MainFrame.SideFrame.UIListLayout
G2L["1f1"] = Instance.new("UIListLayout", G2L["1ed"]);
G2L["1f1"]["SortOrder"] = Enum.SortOrder.LayoutOrder;


-- StarterGui.havocenchanted.MainFrame.SideFrame.Player
G2L["1f2"] = Instance.new("TextButton", G2L["1ed"]);
G2L["1f2"]["TextWrapped"] = true;
G2L["1f2"]["BorderSizePixel"] = 0;
G2L["1f2"]["TextColor3"] = Color3.fromRGB(0, 0, 169);
G2L["1f2"]["TextSize"] = 1;
G2L["1f2"]["TextScaled"] = true;
G2L["1f2"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["1f2"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["1f2"]["Size"] = UDim2.new(1, 0, 0.14283, 0);
G2L["1f2"]["BackgroundTransparency"] = 1;
G2L["1f2"]["LayoutOrder"] = 1;
G2L["1f2"]["Name"] = [[Player]];
G2L["1f2"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1f2"]["Text"] = [[PLAYER]];
G2L["1f2"]["Position"] = UDim2.new(0, 0, 0.28565, 0);


-- StarterGui.havocenchanted.MainFrame.SideFrame.Player.UITextSizeConstraint
G2L["1f3"] = Instance.new("UITextSizeConstraint", G2L["1f2"]);
G2L["1f3"]["MaxTextSize"] = 21;


-- StarterGui.havocenchanted.MainFrame.SideFrame.Player.UIAspectRatioConstraint
G2L["1f4"] = Instance.new("UIAspectRatioConstraint", G2L["1f2"]);
G2L["1f4"]["AspectRatio"] = 2.94492;


-- StarterGui.havocenchanted.MainFrame.SideFrame.AutoSettings
G2L["1f5"] = Instance.new("TextButton", G2L["1ed"]);
G2L["1f5"]["TextWrapped"] = true;
G2L["1f5"]["BorderSizePixel"] = 0;
G2L["1f5"]["TextColor3"] = Color3.fromRGB(0, 0, 169);
G2L["1f5"]["TextSize"] = 1;
G2L["1f5"]["TextScaled"] = true;
G2L["1f5"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["1f5"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["1f5"]["Size"] = UDim2.new(1, 0, 0.14283, 0);
G2L["1f5"]["BackgroundTransparency"] = 1;
G2L["1f5"]["LayoutOrder"] = 2;
G2L["1f5"]["Name"] = [[AutoSettings]];
G2L["1f5"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1f5"]["Text"] = [[AutoSettings]];
G2L["1f5"]["Position"] = UDim2.new(0, 0, 0.5713, 0);


-- StarterGui.havocenchanted.MainFrame.SideFrame.AutoSettings.UITextSizeConstraint
G2L["1f6"] = Instance.new("UITextSizeConstraint", G2L["1f5"]);
G2L["1f6"]["MaxTextSize"] = 21;


-- StarterGui.havocenchanted.MainFrame.SideFrame.AutoSettings.UIAspectRatioConstraint
G2L["1f7"] = Instance.new("UIAspectRatioConstraint", G2L["1f5"]);
G2L["1f7"]["AspectRatio"] = 2.94492;


-- StarterGui.havocenchanted.MainFrame.SideFrame.Teleport
G2L["1f8"] = Instance.new("TextButton", G2L["1ed"]);
G2L["1f8"]["TextWrapped"] = true;
G2L["1f8"]["BorderSizePixel"] = 0;
G2L["1f8"]["TextColor3"] = Color3.fromRGB(0, 0, 169);
G2L["1f8"]["TextSize"] = 1;
G2L["1f8"]["TextScaled"] = true;
G2L["1f8"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["1f8"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["1f8"]["Size"] = UDim2.new(1, 0, 0.14283, 0);
G2L["1f8"]["BackgroundTransparency"] = 1;
G2L["1f8"]["LayoutOrder"] = 3;
G2L["1f8"]["Name"] = [[Teleport]];
G2L["1f8"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1f8"]["Text"] = [[TELEPORT]];
G2L["1f8"]["Position"] = UDim2.new(0, 0, 0.71413, 0);


-- StarterGui.havocenchanted.MainFrame.SideFrame.Teleport.UITextSizeConstraint
G2L["1f9"] = Instance.new("UITextSizeConstraint", G2L["1f8"]);
G2L["1f9"]["MaxTextSize"] = 21;


-- StarterGui.havocenchanted.MainFrame.SideFrame.Teleport.UIAspectRatioConstraint
G2L["1fa"] = Instance.new("UIAspectRatioConstraint", G2L["1f8"]);
G2L["1fa"]["AspectRatio"] = 2.94492;


-- StarterGui.havocenchanted.MainFrame.SideFrame.Settings
G2L["1fb"] = Instance.new("TextButton", G2L["1ed"]);
G2L["1fb"]["TextWrapped"] = true;
G2L["1fb"]["BorderSizePixel"] = 0;
G2L["1fb"]["TextColor3"] = Color3.fromRGB(0, 0, 169);
G2L["1fb"]["TextSize"] = 1;
G2L["1fb"]["TextScaled"] = true;
G2L["1fb"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["1fb"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["1fb"]["Size"] = UDim2.new(1, 0, 0.14283, 0);
G2L["1fb"]["BackgroundTransparency"] = 1;
G2L["1fb"]["LayoutOrder"] = 5;
G2L["1fb"]["Name"] = [[Settings]];
G2L["1fb"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["1fb"]["Text"] = [[SETTINGS]];
G2L["1fb"]["Position"] = UDim2.new(0, 0, 0.85695, 0);


-- StarterGui.havocenchanted.MainFrame.SideFrame.Settings.UITextSizeConstraint
G2L["1fc"] = Instance.new("UITextSizeConstraint", G2L["1fb"]);
G2L["1fc"]["MaxTextSize"] = 21;


-- StarterGui.havocenchanted.MainFrame.SideFrame.Settings.UIAspectRatioConstraint
G2L["1fd"] = Instance.new("UIAspectRatioConstraint", G2L["1fb"]);
G2L["1fd"]["AspectRatio"] = 2.94492;


-- StarterGui.havocenchanted.MainFrame.SideFrame.LocalScript
G2L["1fe"] = Instance.new("LocalScript", G2L["1ed"]);



-- StarterGui.havocenchanted.MainFrame.SideFrame.UIAspectRatioConstraint
G2L["1ff"] = Instance.new("UIAspectRatioConstraint", G2L["1ed"]);
G2L["1ff"]["AspectRatio"] = 0.42061;


-- StarterGui.havocenchanted.MainFrame.SideFrame.Orbit
G2L["200"] = Instance.new("TextButton", G2L["1ed"]);
G2L["200"]["TextWrapped"] = true;
G2L["200"]["BorderSizePixel"] = 0;
G2L["200"]["TextColor3"] = Color3.fromRGB(0, 0, 169);
G2L["200"]["TextSize"] = 1;
G2L["200"]["TextScaled"] = true;
G2L["200"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["200"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["200"]["Size"] = UDim2.new(1, 0, 0.14283, 0);
G2L["200"]["BackgroundTransparency"] = 1;
G2L["200"]["LayoutOrder"] = 1;
G2L["200"]["Name"] = [[Orbit]];
G2L["200"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["200"]["Text"] = [[ORBIT]];
G2L["200"]["Position"] = UDim2.new(0, 0, 0.42848, 0);


-- StarterGui.havocenchanted.MainFrame.SideFrame.Orbit.UITextSizeConstraint
G2L["201"] = Instance.new("UITextSizeConstraint", G2L["200"]);
G2L["201"]["MaxTextSize"] = 21;


-- StarterGui.havocenchanted.MainFrame.SideFrame.Orbit.UIAspectRatioConstraint
G2L["202"] = Instance.new("UIAspectRatioConstraint", G2L["200"]);
G2L["202"]["AspectRatio"] = 2.94492;


-- StarterGui.havocenchanted.MainFrame.SideFrame.AimLock
G2L["203"] = Instance.new("TextButton", G2L["1ed"]);
G2L["203"]["TextWrapped"] = true;
G2L["203"]["BorderSizePixel"] = 0;
G2L["203"]["TextColor3"] = Color3.fromRGB(0, 0, 169);
G2L["203"]["TextSize"] = 1;
G2L["203"]["TextScaled"] = true;
G2L["203"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["203"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["203"]["Size"] = UDim2.new(1, 0, 0.14283, 0);
G2L["203"]["BackgroundTransparency"] = 1;
G2L["203"]["LayoutOrder"] = 4;
G2L["203"]["Name"] = [[AimLock]];
G2L["203"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["203"]["Text"] = [[AIMLOCK]];
G2L["203"]["Position"] = UDim2.new(0, 0, 0.14283, 0);


-- StarterGui.havocenchanted.MainFrame.SideFrame.AimLock.UITextSizeConstraint
G2L["204"] = Instance.new("UITextSizeConstraint", G2L["203"]);
G2L["204"]["MaxTextSize"] = 21;


-- StarterGui.havocenchanted.MainFrame.SideFrame.AimLock.UIAspectRatioConstraint
G2L["205"] = Instance.new("UIAspectRatioConstraint", G2L["203"]);
G2L["205"]["AspectRatio"] = 2.94492;


-- StarterGui.havocenchanted.MainFrame.Accent
G2L["206"] = Instance.new("Frame", G2L["4"]);
G2L["206"]["BorderSizePixel"] = 0;
G2L["206"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 61);
G2L["206"]["Size"] = UDim2.new(0.002, 0, 0.889, 0);
G2L["206"]["Position"] = UDim2.new(0.20659, 0, 0.1108, 0);
G2L["206"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["206"]["Name"] = [[Accent]];


-- StarterGui.havocenchanted.MainFrame.Accent.UIAspectRatioConstraint
G2L["207"] = Instance.new("UIAspectRatioConstraint", G2L["206"]);
G2L["207"]["AspectRatio"] = 0.00407;


-- StarterGui.havocenchanted.MainFrame.Accent
G2L["208"] = Instance.new("Frame", G2L["4"]);
G2L["208"]["BorderSizePixel"] = 0;
G2L["208"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 61);
G2L["208"]["Size"] = UDim2.new(1, 0, 0.002, 0);
G2L["208"]["Position"] = UDim2.new(0, 0, 0.108, 0);
G2L["208"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["208"]["Name"] = [[Accent]];


-- StarterGui.havocenchanted.MainFrame.Accent.UIAspectRatioConstraint
G2L["209"] = Instance.new("UIAspectRatioConstraint", G2L["208"]);
G2L["209"]["AspectRatio"] = 905.19946;


-- StarterGui.havocenchanted.MainFrame.Title
G2L["20a"] = Instance.new("TextLabel", G2L["4"]);
G2L["20a"]["TextWrapped"] = true;
G2L["20a"]["BorderSizePixel"] = 0;
G2L["20a"]["TextSize"] = 14;
G2L["20a"]["TextScaled"] = true;
G2L["20a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["20a"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["20a"]["TextColor3"] = Color3.fromRGB(0, 0, 255);
G2L["20a"]["BackgroundTransparency"] = 1;
G2L["20a"]["Size"] = UDim2.new(0.9985, 0, 0.10803, 0);
G2L["20a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["20a"]["Text"] = [[HAVOC]];
G2L["20a"]["Name"] = [[Title]];


-- StarterGui.havocenchanted.MainFrame.Title.UIAspectRatioConstraint
G2L["20b"] = Instance.new("UIAspectRatioConstraint", G2L["20a"]);
G2L["20b"]["AspectRatio"] = 16.73271;


-- StarterGui.havocenchanted.MainFrame.Title
G2L["20c"] = Instance.new("TextLabel", G2L["4"]);
G2L["20c"]["TextWrapped"] = true;
G2L["20c"]["BorderSizePixel"] = 0;
G2L["20c"]["TextSize"] = 14;
G2L["20c"]["TextScaled"] = true;
G2L["20c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255);
G2L["20c"]["FontFace"] = Font.new([[rbxasset://fonts/families/FredokaOne.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L["20c"]["TextColor3"] = Color3.fromRGB(0, 0, 255);
G2L["20c"]["BackgroundTransparency"] = 1;
G2L["20c"]["Size"] = UDim2.new(0.18093, 0, 0.10803, 0);
G2L["20c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0);
G2L["20c"]["Text"] = [[(ENCHANTED)]];
G2L["20c"]["Name"] = [[Title]];
G2L["20c"]["Position"] = UDim2.new(0.59223, 0, 0, 0);


-- StarterGui.havocenchanted.MainFrame.UIAspectRatioConstraint
G2L["20d"] = Instance.new("UIAspectRatioConstraint", G2L["4"]);
G2L["20d"]["AspectRatio"] = 1.8104;


-- StarterGui.havocenchanted.Lighting
G2L["20e"] = Instance.new("LocalScript", G2L["1"]);
G2L["20e"]["Enabled"] = false;
G2L["20e"]["Name"] = [[Lighting]];
G2L["20e"]["Disabled"] = true;


-- StarterGui.havocenchanted.LoadGlobalTable
G2L["20f"] = Instance.new("LocalScript", G2L["1"]);
G2L["20f"]["Name"] = [[LoadGlobalTable]];


-- StarterGui.havocenchanted.ESPSFolder.Controller
local function C_3()
	local script = G2L["3"];
	local ESPSFolder = script.Parent

	ESPSFolder.ChildAdded:Connect(function(child)
		local Player = game.Players:FindFirstChild(child.Name)
		if Player then
			local Slide = child.Health.Bar.Slide

			local function SetupHealthBar(Character)
				local Humanoid = Character:FindFirstChild("Humanoid")
				if not Humanoid then
					Humanoid = Character:WaitForChild("Humanoid", 5) -- Wait for up to 5 seconds in case of lag
				end
				if not Humanoid then return end -- If Humanoid still doesn't exist, exit

				local function UpdateHealth()
					if Humanoid and Humanoid.Parent then
						local HealthPercent = Humanoid.Health / math.max(Humanoid.MaxHealth, 1)

						-- Tween health bar size and position
						local newSize = UDim2.new(Slide.Size.X.Scale, 0, HealthPercent, 0)
						local newPosition = UDim2.new(Slide.Position.X.Scale, 0, 1, 0)

						Slide:TweenSizeAndPosition(newSize, newPosition, Enum.EasingDirection.Out, Enum.EasingStyle.Linear, 0.15, true)
					end
				end

				-- Connect to HealthChanged
				Humanoid.HealthChanged:Connect(UpdateHealth)
				UpdateHealth()
			end

			-- Set up for the current character
			if Player.Character then
				SetupHealthBar(Player.Character)
			end

			-- Listen for respawns and reinitialize the health bar
			Player.CharacterAdded:Connect(SetupHealthBar)
		end
	end)

end;
task.spawn(C_3);
-- StarterGui.havocenchanted.MainFrame.Glow.GLOW
local function C_8()
	local script = G2L["8"];
	local imageLabel = script.Parent -- Make sure this script is inside your ImageLabel
	local uiGradient = imageLabel:FindFirstChild("UIGradient")

	-- Define the gradient with alternating red and dark red sections
	uiGradient.Color = ColorSequence.new({
		ColorSequenceKeypoint.new(0, Color3.fromRGB(0, 0, 255)),  -- Bright Red
		ColorSequenceKeypoint.new(0.2, Color3.fromRGB(0, 0, 170)), -- Dark Red
		ColorSequenceKeypoint.new(0.4, Color3.fromRGB(0, 0, 255)), -- Bright Red
		ColorSequenceKeypoint.new(0.6, Color3.fromRGB(0, 0, 170)), -- Dark Red
		ColorSequenceKeypoint.new(0.8, Color3.fromRGB(0, 0, 255)), -- Bright Red
		ColorSequenceKeypoint.new(1, Color3.fromRGB(0, 0, 170))   -- Dark Red
	})

	-- Gradient rotation speed
	local speed = 4

	local function rotateGradient()
		while true do
			uiGradient.Rotation = (uiGradient.Rotation + speed) % 360
			wait(0.03)
		end
	end

	rotateGradient()

end;
task.spawn(C_8);
-- StarterGui.havocenchanted.MainFrame.Drag.DragScript
local function C_b()
	local script = G2L["b"];
	local UIS = game:GetService('UserInputService')
	local frame = script.Parent.Parent
	local dragToggle = nil
	local dragSpeed = 0.05
	local dragStart = nil
	local startPos = nil

	local function updateInput(input)
		local delta = input.Position - dragStart
		local position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X,
			startPos.Y.Scale, startPos.Y.Offset + delta.Y)
		game:GetService('TweenService'):Create(frame, TweenInfo.new(dragSpeed), {Position = position}):Play()
	end

	frame.InputBegan:Connect(function(input)
		if (input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch) then 
			dragToggle = true
			dragStart = input.Position
			startPos = frame.Position
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragToggle = false
				end
			end)
		end
	end)

	UIS.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			if dragToggle then
				updateInput(input)
			end
		end
	end)
end;
task.spawn(C_b);
-- StarterGui.havocenchanted.MainFrame.ViewFrame.LocalPlayer.Cframe.CFRAMEWALK.Handle
local function C_1d()
	local script = G2L["1d"];
	local TweenService = game:GetService("TweenService")
	local tweenInfo = TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut)

	local TriggerBTN = script.Parent:WaitForChild("Trigger")
	local Toggle = script.Parent:WaitForChild("Toggle")
	local KeyBindBTN = script.Parent:WaitForChild("KeyBind")

	local player = game.Players.LocalPlayer
	local character = player.Character or player.CharacterAdded:Wait()
	local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
	local userInputService = game:GetService("UserInputService")
	local runService = game:GetService("RunService")

	local activeKeys = {} -- Track currently pressed keys
	local cframeMovementEnabled = false
	local currentKeyBind = Enum.KeyCode.F
	local awaitingKeyBind = false

	-- Function to update the character and humanoidRootPart reference
	local function updateCharacter()
		character = player.Character or player.CharacterAdded:Wait()
		humanoidRootPart = character:WaitForChild("HumanoidRootPart")
	end

	-- Listen for character respawn and update references
	player.CharacterAdded:Connect(function()
		updateCharacter()
	end)

	-- Toggle CFrame movement
	function toggleCFrameMovement(enable)
		if Toggle.BackgroundColor3 == Color3.fromRGB(255,0,0) then
			cframeMovementEnabled = enable
			if not enable then
				activeKeys = {} -- Reset active keys when disabled
			end
		end
	end

	-- Update CFrame movement
	runService.RenderStepped:Connect(function()
		if not cframeMovementEnabled then return end

		local moveDirection = Vector3.new(0, 0, 0)

		-- Update moveDirection based on active keys
		if activeKeys.W then
			moveDirection = moveDirection + Vector3.new(0, 0, 1)
		end
		if activeKeys.S then
			moveDirection = moveDirection + Vector3.new(0, 0, -1)
		end
		if activeKeys.A then
			moveDirection = moveDirection + Vector3.new(-1, 0, 0)
		end
		if activeKeys.D then
			moveDirection = moveDirection + Vector3.new(1, 0, 0)
		end

		-- Normalize and apply camera-relative direction
		if moveDirection.Magnitude > 0 then
			moveDirection = moveDirection.Unit

			local camera = workspace.CurrentCamera
			local cameraCFrame = camera.CFrame
			local lookVector = Vector3.new(cameraCFrame.LookVector.X, 0, cameraCFrame.LookVector.Z).Unit
			local rightVector = Vector3.new(cameraCFrame.RightVector.X, 0, cameraCFrame.RightVector.Z).Unit

			local finalDirection = (lookVector * moveDirection.Z + rightVector * moveDirection.X) * tonumber(script.Parent.Parent:WaitForChild("CFRAMESPEED").SPEED.Text) / 60
			humanoidRootPart.CFrame = humanoidRootPart.CFrame + finalDirection
		end
	end)

	-- Handle key presses
	userInputService.InputBegan:Connect(function(input, processed)
		if awaitingKeyBind then
			currentKeyBind = input.KeyCode
			KeyBindBTN.Text = tostring(currentKeyBind):gsub("Enum.KeyCode.", "")
			awaitingKeyBind = false
			return
		end

		if processed then return end -- Ignore input if processed by chat or GUI

		if input.KeyCode == Enum.KeyCode.W then
			activeKeys.W = true
		elseif input.KeyCode == Enum.KeyCode.S then
			activeKeys.S = true
		elseif input.KeyCode == Enum.KeyCode.A then
			activeKeys.A = true
		elseif input.KeyCode == Enum.KeyCode.D then
			activeKeys.D = true
		elseif input.KeyCode == currentKeyBind then
			toggleCFrameMovement(not cframeMovementEnabled)
		end
	end)

	-- Handle key releases
	userInputService.InputEnded:Connect(function(input)
		if input.KeyCode == Enum.KeyCode.W then
			activeKeys.W = false
		elseif input.KeyCode == Enum.KeyCode.S then
			activeKeys.S = false
		elseif input.KeyCode == Enum.KeyCode.A then
			activeKeys.A = false
		elseif input.KeyCode == Enum.KeyCode.D then
			activeKeys.D = false
		end
	end)

	-- Handle UI toggle button
	TriggerBTN.MouseButton1Up:Connect(function()
		if Toggle.BackgroundColor3 == Color3.fromRGB(0, 0, 255) then
			local tween = TweenService:Create(Toggle, tweenInfo, { BackgroundColor3 = Color3.fromRGB(0, 0, 170) })
			tween:Play()
			toggleCFrameMovement(false)
		else
			local tween = TweenService:Create(Toggle, tweenInfo, { BackgroundColor3 = Color3.fromRGB(0, 0, 255) })
			tween:Play()
			toggleCFrameMovement(true)
		end
	end)

	-- Handle keybind button
	KeyBindBTN.MouseButton1Click:Connect(function()
		KeyBindBTN.Text = "Press Any Key"
		awaitingKeyBind = true
	end)

end;
task.spawn(C_1d);
-- StarterGui.havocenchanted.MainFrame.ViewFrame.LocalPlayer.Cframe.FLY.Handle
local function C_30()
	local script = G2L["30"];
	local TweenService = game:GetService("TweenService")
	local tweenInfo = TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut)

	local HAVOC = getgenv().HAVOC
	local Fly = HAVOC.LocalPlayer.Fly

	local UserInputService = game:GetService("UserInputService")
	local RunService = game:GetService("RunService")

	local Player = game.Players.LocalPlayer
	local Character = Player.Character or Player.CharacterAdded:Wait()
	local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart")
	local Humanoid = Character:WaitForChild("Humanoid")
	local Camera = workspace.CurrentCamera

	local FlyTrigger = script.Parent:WaitForChild("Trigger")
	local FlyToggle = script.Parent:WaitForChild("Toggle")
	local KeyBindBTN = script.Parent:WaitForChild("KeyBind")

	local activeKeys = {}
	local flyEnabled = false
	local currentKeyBind = Fly.KeyBind or Enum.KeyCode.H
	local awaitingKeyBind = false

	local function updateCharacter()
		Character = Player.Character or Player.CharacterAdded:Wait()
		HumanoidRootPart = Character:WaitForChild("HumanoidRootPart")
		Humanoid = Character:WaitForChild("Humanoid")
	end

	Player.CharacterAdded:Connect(updateCharacter)

	local function toggleFlying(enable)
		if FlyToggle.BackgroundColor3 == Color3.fromRGB(0, 0, 255) then
			flyEnabled = enable
			if not enable then
				activeKeys = {} 
			end
		end
	end

	RunService.RenderStepped:Connect(function()
		if not flyEnabled then return end

		HumanoidRootPart.AssemblyLinearVelocity = Vector3.zero
		HumanoidRootPart.AssemblyAngularVelocity = Vector3.zero

		local moveDirection = Vector3.new(0, 0, 0)

		if activeKeys.W then moveDirection = moveDirection + Vector3.new(0, 0, 1) end
		if activeKeys.S then moveDirection = moveDirection + Vector3.new(0, 0, -1) end
		if activeKeys.A then moveDirection = moveDirection + Vector3.new(-1, 0, 0) end
		if activeKeys.D then moveDirection = moveDirection + Vector3.new(1, 0, 0) end
		if activeKeys.Space then moveDirection = moveDirection + Vector3.new(0, 1, 0) end
		if activeKeys.LeftShift then moveDirection = moveDirection + Vector3.new(0, -1, 0) end

		if moveDirection.Magnitude > 0 then
			moveDirection = moveDirection.Unit * (script.Parent.Parent.FLYSPEED.SPEED.Text / 60)
			local cameraCFrame = Camera.CFrame
			local finalDirection = (cameraCFrame.LookVector * moveDirection.Z + cameraCFrame.RightVector * moveDirection.X) + Vector3.new(0, moveDirection.Y, 0)
			HumanoidRootPart.AssemblyLinearVelocity = finalDirection * 60
		else
			local currentVelocity = HumanoidRootPart.AssemblyLinearVelocity
			HumanoidRootPart.AssemblyLinearVelocity = Vector3.new(0, currentVelocity.Y, 0)
		end
	end)

	UserInputService.InputBegan:Connect(function(input, processed)
		if awaitingKeyBind then
			currentKeyBind = input.KeyCode
			KeyBindBTN.Text = tostring(currentKeyBind):gsub("Enum.KeyCode.", "")
			awaitingKeyBind = false
			return
		end

		if processed then return end

		if input.KeyCode == Enum.KeyCode.W then activeKeys.W = true end
		if input.KeyCode == Enum.KeyCode.S then activeKeys.S = true end
		if input.KeyCode == Enum.KeyCode.A then activeKeys.A = true end
		if input.KeyCode == Enum.KeyCode.D then activeKeys.D = true end
		if input.KeyCode == Enum.KeyCode.Space then activeKeys.Space = true end
		if input.KeyCode == Enum.KeyCode.LeftShift then activeKeys.LeftShift = true end
		if input.KeyCode == currentKeyBind then toggleFlying(not flyEnabled) end
	end)

	UserInputService.InputEnded:Connect(function(input)
		if input.KeyCode == Enum.KeyCode.W then activeKeys.W = false end
		if input.KeyCode == Enum.KeyCode.S then activeKeys.S = false end
		if input.KeyCode == Enum.KeyCode.A then activeKeys.A = false end
		if input.KeyCode == Enum.KeyCode.D then activeKeys.D = false end
		if input.KeyCode == Enum.KeyCode.Space then activeKeys.Space = false end
		if input.KeyCode == Enum.KeyCode.LeftShift then activeKeys.LeftShift = false end
	end)

	FlyTrigger.MouseButton1Up:Connect(function()
		if FlyToggle.BackgroundColor3 == Color3.fromRGB(0, 0, 255) then
			local tween = TweenService:Create(FlyToggle, tweenInfo, { BackgroundColor3 = Color3.fromRGB(0, 0, 170) })
			tween:Play()
			toggleFlying(false)
		else
			local tween = TweenService:Create(FlyToggle, tweenInfo, { BackgroundColor3 = Color3.fromRGB(0, 0, 255) })
			tween:Play()
			toggleFlying(true)
		end
	end)

	KeyBindBTN.MouseButton1Click:Connect(function()
		KeyBindBTN.Text = "Press Any Key"
		awaitingKeyBind = true
	end) 
end;
task.spawn(C_30);
-- StarterGui.havocenchanted.MainFrame.ViewFrame.LocalPlayer.Playersettings.INFSTAMINA.Handle
local function C_45()
	local script = G2L["45"];
	local globaltable = getgenv().HAVOC.LocalPlayer.CharacterSettings

	local TweenService = game:GetService("TweenService")
	local runservice = game:GetService("RunService")
	local tweenInfo = TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut)

	local Player = game.Players.LocalPlayer

	local TriggerBTN = script.Parent:WaitForChild("Trigger")
	local Toggle = script.Parent:WaitForChild("Toggle")

	TriggerBTN.MouseButton1Up:Connect(function()
		if globaltable.InfStamina then
			globaltable.InfStamina = false
			local tween = TweenService:Create(Toggle, tweenInfo, { BackgroundColor3 = Color3.fromRGB(0, 0, 170) })
			tween:Play()
		else
			globaltable.InfStamina = true
			local tween = TweenService:Create(Toggle, tweenInfo, { BackgroundColor3 = Color3.fromRGB(0, 0, 255) })
			tween:Play()

		end
	end)

	runservice.RenderStepped:Connect(function()
		if globaltable.InfStamina then
			local character = Player.Character or Player.CharacterAdded:Wait()
			if character then
				local humanoid = character:WaitForChild("Humanoid")
				humanoid.JumpPower = 50
			end
		end
	end)
end;
task.spawn(C_45);
-- StarterGui.havocenchanted.MainFrame.ViewFrame.LocalPlayer.Playersettings.NoShootingRecoil.Handle
local function C_4e()
	local script = G2L["4e"];
	local globaltable = getgenv().HAVOC.LocalPlayer.CharacterSettings

	local TweenService = game:GetService("TweenService")
	local runservice = game:GetService("RunService")
	local tweenInfo = TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut)

	local Player = game.Players.LocalPlayer

	local TriggerBTN = script.Parent:WaitForChild("Trigger")
	local Toggle = script.Parent:WaitForChild("Toggle")

	local MainEvent = game.ReplicatedStorage:WaitForChild("MainEvent")

	TriggerBTN.MouseButton1Up:Connect(function()
		if globaltable.NoShootingRecoil then
			globaltable.NoShootingRecoil = false
			local tween = TweenService:Create(Toggle, tweenInfo, { BackgroundColor3 = Color3.fromRGB(0, 0, 170) })
			tween:Play()
		else
			globaltable.NoShootingRecoil =  true
			local tween = TweenService:Create(Toggle, tweenInfo, { BackgroundColor3 = Color3.fromRGB(0, 0, 255) })
			tween:Play()

		end
	end)

	MainEvent.OnClientEvent:Connect(function(arg1)
		if arg1 == "ShootingRecoil" then

		end
	end)
	runservice.RenderStepped:Connect(function()
		if globaltable.NoShootingRecoil then
			local character = Player.Character or Player.CharacterAdded:Wait()
			if character then
				local humanoid = character:WaitForChild("Humanoid")
				humanoid.JumpPower = 50
			end
		end
	end)
end;
task.spawn(C_4e);
-- StarterGui.havocenchanted.MainFrame.ViewFrame.LocalPlayer.Playersettings.AntiStomp.Handle
local function C_57()
	local script = G2L["57"];
	local globaltable = getgenv().HAVOC.LocalPlayer.CharacterSettings

	local TweenService = game:GetService("TweenService")
	local runservice = game:GetService("RunService")
	local tweenInfo = TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut)

	local Player = game.Players.LocalPlayer

	local TriggerBTN = script.Parent:WaitForChild("Trigger")
	local Toggle = script.Parent:WaitForChild("Toggle")

	TriggerBTN.MouseButton1Up:Connect(function()
		if globaltable.AntiStomp then
			globaltable.AntiStomp = false
			local tween = TweenService:Create(Toggle, tweenInfo, { BackgroundColor3 = Color3.fromRGB(0, 0, 170) })
			tween:Play()
		else
			globaltable.AntiStomp = true
			local tween = TweenService:Create(Toggle, tweenInfo, { BackgroundColor3 = Color3.fromRGB(0, 0, 255) })
			tween:Play()

		end
	end)

	runservice.RenderStepped:Connect(function()
		if globaltable.AntiStomp then
			if Player.Character:WaitForChild("BodyEffects")['K.O'].Value == true then 
				if Player.Character:FindFirstChild("Head") then
					Player.Character.Head:Destroy()
				end
			end
		end
	end)
end;
task.spawn(C_57);
-- StarterGui.havocenchanted.MainFrame.ViewFrame.LocalPlayer.Playersettings.NoSeats.Handle
local function C_60()
	local script = G2L["60"];
	local globaltable = getgenv().HAVOC.LocalPlayer.CharacterSettings

	local Lighting = game:GetService("Lighting")
	local TweenService = game:GetService("TweenService")
	local runservice = game:GetService("RunService")
	local tweenInfo = TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut)

	local Player = game.Players.LocalPlayer

	local TriggerBTN = script.Parent:WaitForChild("Trigger")
	local Toggle = script.Parent:WaitForChild("Toggle")

	local seats = {}
	local cooldown = false

	TriggerBTN.MouseButton1Up:Connect(function()
		if globaltable.NoSeats then
			globaltable.NoSeats = false
			local tween = TweenService:Create(Toggle, tweenInfo, { BackgroundColor3 = Color3.fromRGB(0, 0, 170) })
			tween:Play()
		else
			globaltable.NoSeats = true
			local tween = TweenService:Create(Toggle, tweenInfo, { BackgroundColor3 = Color3.fromRGB(0, 0, 255) })
			tween:Play()

		end
	end)

	runservice.RenderStepped:Connect(function()
		if globaltable.NoSeats and cooldown == false then
			cooldown = true
			for _,v in ipairs(workspace:GetDescendants()) do
				if v:IsA("Seat") then
					v.Parent = Lighting
					table.insert(seats,v)
				end
			end
		elseif not globaltable.NoSeats then
			cooldown = false
			for _,v in ipairs(seats) do
				v.Parent = workspace
			end
		end
	end)
end;
task.spawn(C_60);
-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.Esp.ESP
local function C_82()
	local script = G2L["82"];
	local TweenService = game:GetService("TweenService")
	local Players = game:GetService("Players")

	local Player = Players.LocalPlayer
	local ESPSFolder = script.Parent.Parent.Parent.Parent.Parent:WaitForChild("ESPSFolder")

	local espBTN = script.Parent:WaitForChild("ESP"):WaitForChild("Trigger")
	local espToggle = espBTN.Parent:WaitForChild("Toggle")

	local boxBTN = script.Parent:WaitForChild("BOX"):WaitForChild("Trigger")
	local boxToggle = boxBTN.Parent:WaitForChild("Toggle")

	local aotBTN = script.Parent:WaitForChild("ALWAYSONTOP"):WaitForChild("Trigger")
	local aotToggle = aotBTN.Parent:WaitForChild("Toggle")

	local ESPEnabled = false
	local BOXEnabled = false
	local AOTEnabled = true

	local connections = {}

	-- Function to create ESP for a player
	local function createESP(plr)
		local existingESP = ESPSFolder:FindFirstChild(plr.Name)
		if existingESP then
			existingESP:Destroy()
		end

		local ESPGUI = script.Parent.ESPGUI:Clone()
		ESPGUI.PLAYERNAME.Text = plr.Name
		ESPGUI.Enabled = true
		ESPGUI.Name = plr.Name
		ESPGUI.BOX.Visible = BOXEnabled
		ESPGUI.AlwaysOnTop = AOTEnabled
		ESPGUI.Parent = ESPSFolder


		-- Ensure character exists and set Adornee
		local function updateESP(character)
			local hrp = character:WaitForChild("HumanoidRootPart", 6)
			if hrp then
				ESPGUI.Adornee = hrp
			end
		end

		-- Connect CharacterAdded event
		local charAddedConn = plr.CharacterAdded:Connect(updateESP)
		connections[plr] = charAddedConn

		-- If player has a character, set ESP immediately
		if plr.Character then
			updateESP(plr.Character)
		end
	end

	-- Toggle ESP settings
	local function ESPTOGGLES(action, enabled)
		for _, gui in ipairs(ESPSFolder:GetChildren()) do
			if gui:IsA("BillboardGui") then
				if action == "BOX" then
					gui.BOX.Visible = enabled
				elseif action == "ALWAYSONTOP" then
					gui.AlwaysOnTop = enabled
				end
			end
		end
	end

	-- ESP Toggle logic
	local function ESPTOGGLE(action)
		if action == "EnableESP" then
			ESPEnabled = true
			for _, plr in ipairs(Players:GetPlayers()) do
				if plr ~= Player then
					createESP(plr)
				end
			end
		elseif action == "DisableESP" then
			ESPEnabled = false
			for _, gui in ipairs(ESPSFolder:GetChildren()) do
				if gui:IsA("BillboardGui") then
					gui:Destroy()
				end
			end
		elseif action == "EnableBOX" then
			BOXEnabled = true
			ESPTOGGLES("BOX", true)
		elseif action == "DisableBOX" then
			BOXEnabled = false
			ESPTOGGLES("BOX", false)
		elseif action == "EnableAOT" then
			AOTEnabled = true
			ESPTOGGLES("ALWAYSONTOP", true)
		elseif action == "DisableAOT" then
			AOTEnabled = false
			ESPTOGGLES("ALWAYSONTOP", false)
		end
	end

	-- ESP Button Clicks
	espBTN.MouseButton1Up:Connect(function()
		ESPEnabled = not ESPEnabled
		espToggle.BackgroundColor3 = ESPEnabled and Color3.fromRGB(0, 0, 255) or Color3.fromRGB(0, 0, 170)
		ESPTOGGLE(ESPEnabled and "EnableESP" or "DisableESP")
	end)

	boxBTN.MouseButton1Up:Connect(function()
		BOXEnabled = not BOXEnabled
		boxToggle.BackgroundColor3 = BOXEnabled and Color3.fromRGB(0, 0, 255) or Color3.fromRGB(0, 0, 170)
		ESPTOGGLE(BOXEnabled and "EnableBOX" or "DisableBOX")
	end)

	aotBTN.MouseButton1Up:Connect(function()
		AOTEnabled = not AOTEnabled
		aotToggle.BackgroundColor3 = AOTEnabled and Color3.fromRGB(0, 0, 255) or Color3.fromRGB(0, 0, 170)
		ESPTOGGLE(AOTEnabled and "EnableAOT" or "DisableAOT")
	end)

	-- Player Join/Leave Handling
	Players.ChildAdded:Connect(function(plr)
		wait(1) -- Shorter wait to ensure the player is fully loaded
		if ESPEnabled then
			createESP(plr)
		end
	end)

	Players.ChildRemoved:Connect(function(plr)
		-- Disconnect CharacterAdded connection
		if connections[plr] then
			connections[plr]:Disconnect()
			connections[plr] = nil
		end

		-- Remove ESP GUI
		local ESPGUI = ESPSFolder:FindFirstChild(plr.Name)
		if ESPGUI then
			ESPGUI:Destroy()
		end
	end)

end;
task.spawn(C_82);
-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.View.Spectate
local function C_9d()
	local script = G2L["9d"];
	local TweenService = game:GetService("TweenService")

	local Player = game.Players.LocalPlayer
	local Camera = workspace.CurrentCamera

	local HAVOC = getgenv().HAVOC
	local View = HAVOC.Player.View

	local SpectateTrigger = script.Parent:WaitForChild("VIEW"):WaitForChild("Trigger")
	local SpectateToggle = SpectateTrigger.Parent:WaitForChild("Toggle")

	local function toggleSpectate()
		if View.Enabled then
			local targetPlayer
			for _, plr in ipairs(game.Players:GetPlayers()) do
				if plr.Name == View.Target or plr.DisplayName == View.Target then
					targetPlayer = plr
				end
			end
			if targetPlayer then
				Camera.CameraSubject = targetPlayer.Character.HumanoidRootPart
			end
		else
			Camera.CameraSubject = Player.Character
		end
	end

	SpectateTrigger.MouseButton1Up:Connect(function()
		if View.Enabled then
			View.Enabled = false
			local tween = TweenService:Create(SpectateToggle, TweenInfo.new(0.1), { BackgroundColor3 = Color3.fromRGB(0, 0, 170) })
			tween:Play()
			toggleSpectate()
		else
			View.Enabled = true
			local tween = TweenService:Create(SpectateToggle, TweenInfo.new(0.1), { BackgroundColor3 = Color3.fromRGB(0, 0, 255) })
			tween:Play()
			toggleSpectate()
		end
	end)
end;
task.spawn(C_9d);
-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.View.TargetNameHandler
local function C_9e()
	local script = G2L["9e"];
	local HAVOC = getgenv().HAVOC
	local ViewGLOBAL = HAVOC.Player.View

	local TARGETNAME = script.Parent:WaitForChild("TARGETNAME")
	local TargetNameTextBox = TARGETNAME:WaitForChild("TARGET")

	local function findClosestMatchingPlayer(inputName)
		inputName = inputName:lower()
		for _, player in pairs(game.Players:GetPlayers()) do
			local username = player.Name:lower()
			local displayName = player.DisplayName:lower()

			-- Check if input matches a part of the player's username or display name
			if username:find(inputName, 1, true) or displayName:find(inputName, 1, true) then
				return player.DisplayName
			end
		end
		return nil
	end

	TargetNameTextBox.FocusLost:Connect(function(enterPressed)
		if enterPressed then
			local partialInput = TargetNameTextBox.Text
			local foundPlayer = findClosestMatchingPlayer(partialInput)

			if foundPlayer then
				ViewGLOBAL.Target = foundPlayer
				TargetNameTextBox.Text = foundPlayer
			else
				ViewGLOBAL.Target = nil
				TargetNameTextBox.Text = "No player found"
			end
		end
	end)
end;
task.spawn(C_9e);
-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.RageAim.Togglers
local function C_ac()
	local script = G2L["ac"];
	local HAVOC = getgenv().HAVOC
	local RageAimGLOBAL = HAVOC.Player.RageAim

	local TweenService = game:GetService("TweenService")

	local TweenInfoON = TweenInfo.new(0.1)
	local TweenInfoOFF = TweenInfo.new(0.1)

	local KillAuraTrigger = script.Parent:WaitForChild("KILLAURA"):WaitForChild("Trigger")
	local KillAuraToggle = KillAuraTrigger.Parent:WaitForChild("Toggle")

	local WallBangTrigger = script.Parent:WaitForChild("WALLBANG"):WaitForChild("Trigger")
	local WallBangToggle = WallBangTrigger.Parent:WaitForChild("Toggle")

	KillAuraTrigger.MouseButton1Up:Connect(function()
		if KillAuraToggle.BackgroundColor3 == Color3.fromRGB(0, 0, 255) then
			local tween = TweenService:Create(KillAuraToggle, TweenInfoOFF, { BackgroundColor3 = Color3.fromRGB(0, 0, 170) })
			tween:Play()
			RageAimGLOBAL.KillAura = false
		else
			local tween = TweenService:Create(KillAuraToggle, TweenInfoON, { BackgroundColor3 = Color3.fromRGB(0, 0, 255) })
			tween:Play()
			RageAimGLOBAL.KillAura = true
		end
	end)

	WallBangTrigger.MouseButton1Up:Connect(function()
		if WallBangToggle.BackgroundColor3 == Color3.fromRGB(0, 0, 255) then
			local tween = TweenService:Create(WallBangToggle, TweenInfoOFF, { BackgroundColor3 = Color3.fromRGB(0, 0, 170) })
			tween:Play()
			RageAimGLOBAL.WallBang = false
		else
			local tween = TweenService:Create(WallBangToggle, TweenInfoON, { BackgroundColor3 = Color3.fromRGB(0, 0, 255) })
			tween:Play()
			RageAimGLOBAL.WallBang = true
		end
	end)
end;
task.spawn(C_ac);
-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.RageAim.KillAura
local function C_ae()
	local script = G2L["ae"];
	local RunService = game:GetService("RunService")
	local Players = game:GetService("Players")
	local ReplicatedStorage = game:GetService("ReplicatedStorage")

	local Player = Players.LocalPlayer
	local Character = Player.Character or Player.CharacterAdded:Wait()
	local HumanoidRootPart = Character:FindFirstChild("HumanoidRootPart")

	local HAVOC = getgenv().HAVOC
	local RageAimGLOBAL = HAVOC.Player.RageAim

	local function UpdateCharacter(newCharacter)
		Character = newCharacter
		HumanoidRootPart = Character:WaitForChild("HumanoidRootPart")
	end

	Player.CharacterAdded:Connect(UpdateCharacter)

	local function checkCrew(targetPlayer)
		local OurInformation = Player:WaitForChild("DataFolder"):FindFirstChild("Information")
		local TheirInformation = targetPlayer:WaitForChild("DataFolder"):FindFirstChild("Information")
		if not (OurInformation and TheirInformation) then return false end

		local ourCrew = OurInformation:FindFirstChild("Crew")
		local theirCrew = TheirInformation:FindFirstChild("Crew")

		if not ourCrew or not theirCrew then return true end

		return ourCrew.Value ~= theirCrew.Value
	end

	local function GetTool()
		local Tool = Player:FindFirstChildWhichIsA("Tool")
		for _, v in pairs(Character:GetChildren()) do
			if v:FindFirstChild("Ammo") and v:FindFirstChild("MaxAmmo") then
				return v
			end
		end
		return nil
	end

	local function isPlayerBlacklisted(targetPlayer)
		if not RageAimGLOBAL.Blacklist then return false end
		for _, name in ipairs(RageAimGLOBAL.Blacklist) do
			if targetPlayer.Name == name or targetPlayer.DisplayName == name then
				return true
			end
		end
		return false
	end

	local function isPlayerWhitelisted(targetPlayer)
		if not RageAimGLOBAL.Whitelist then return false end
		for _, name in ipairs(RageAimGLOBAL.Whitelist) do
			if targetPlayer.Name == name or targetPlayer.DisplayName == name then
				return true
			end
		end
		return false
	end

	local function shouldKill(targetPlayer)
		local hasBlacklist = RageAimGLOBAL.Blacklist and #RageAimGLOBAL.Blacklist > 0
		local hasWhitelist = RageAimGLOBAL.Whitelist and #RageAimGLOBAL.Whitelist > 0

		if hasBlacklist and hasWhitelist then
			return true
		elseif hasBlacklist then
			return isPlayerBlacklisted(targetPlayer)
		elseif hasWhitelist then
			return not isPlayerWhitelisted(targetPlayer)
		end

		return true
	end

	local function GetClosestPlayer()
		local closestPlayer = nil
		local shortestDistance = math.huge

		for _, target in pairs(Players:GetPlayers()) do
			if target ~= Player and target.Character and target.Character:FindFirstChild("HumanoidRootPart") then
				local targetRoot = target.Character:FindFirstChild("HumanoidRootPart")
				if HumanoidRootPart then
					local distance = (HumanoidRootPart.Position - targetRoot.Position).Magnitude

					if distance < shortestDistance 
						and target.Character:FindFirstChild("BodyEffects") 
						and not target.Character.BodyEffects["K.O"].Value 
						and checkCrew(target) 
						and shouldKill(target) then

						shortestDistance = distance
						closestPlayer = target
					end
				end
			end
		end

		return closestPlayer
	end

	local function ShootGun(targetPlayer)
		local targetHead = targetPlayer.Character and targetPlayer.Character:FindFirstChild("Head")
		local gun = GetTool()

		if targetHead and gun and HumanoidRootPart then
			if not targetPlayer.Character:FindFirstChild("BodyEffects")["K.O"].Value then
				local args = {
					[1] = "ShootGun",
					[2] = gun:WaitForChild("Handle"),
					[3] = HumanoidRootPart.Position,
					[4] = targetHead.Position,
					[5] = targetHead,
					[6] = Vector3.zAxis
				}
				ReplicatedStorage:WaitForChild("MainEvent"):FireServer(unpack(args))
			end
		end
	end

	RunService.RenderStepped:Connect(function()
		if RageAimGLOBAL.KillAura then
			local targetPlayer = GetClosestPlayer()
			if targetPlayer then
				ShootGun(targetPlayer)
			end
		end
	end)

end;
task.spawn(C_ae);
-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.RageAim.Whitelist
local function C_b9()
	local script = G2L["b9"];
	local HAVOC = getgenv().HAVOC
	local RageAimGLOBAL = HAVOC.Player.RageAim

	local WhitelistTextBox = script.Parent:WaitForChild("WHITELIST"):WaitForChild("TARGET")

	local function findClosestMatchingPlayer(inputName)
		inputName = inputName:lower()
		for _, player in ipairs(game.Players:GetPlayers()) do
			local username = player.Name:lower()
			local displayName = player.DisplayName:lower()
			if username:find(inputName, 1, true) or displayName:find(inputName, 1, true) then
				return player.Name
			end
		end
		return nil
	end

	WhitelistTextBox.FocusLost:Connect(function(enterPressed)
		local inputText = WhitelistTextBox.Text
		local whitelistTable = {}

		if inputText == "" or inputText:match("^%s*$") then
			RageAimGLOBAL.Whitelist = {}
			return
		end

		for substring in string.gmatch(inputText, "[^,]+") do
			local trimmed = substring:match("^%s*(.-)%s*$")
			local foundPlayer = findClosestMatchingPlayer(trimmed)

			if foundPlayer then
				table.insert(whitelistTable, foundPlayer)
			end
		end

		RageAimGLOBAL.Whitelist = whitelistTable

		WhitelistTextBox.Text = table.concat(whitelistTable, ", ")
	end)

end;
task.spawn(C_b9);
-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.RageAim.Blacklist
local function C_ba()
	local script = G2L["ba"];
	local HAVOC = getgenv().HAVOC
	local RageAimGLOBAL = HAVOC.Player.RageAim

	local BlacklistTextBox = script.Parent:WaitForChild("BLACKLIST"):WaitForChild("TARGET")

	local function findClosestMatchingPlayer(inputName)
		inputName = inputName:lower()
		for _, player in ipairs(game.Players:GetPlayers()) do
			local username = player.Name:lower()
			local displayName = player.DisplayName:lower()
			if username:find(inputName, 1, true) or displayName:find(inputName, 1, true) then
				return player.Name
			end
		end
		return nil
	end

	BlacklistTextBox.FocusLost:Connect(function(enterPressed)
		local inputText = BlacklistTextBox.Text
		local blacklistTable = {}

		if inputText == "" or inputText:match("^%s*$") then
			RageAimGLOBAL.Blacklist = {}
			return
		end

		for substring in string.gmatch(inputText, "[^,]+") do
			local trimmed = substring:match("^%s*(.-)%s*$")
			local foundPlayer = findClosestMatchingPlayer(trimmed)

			if foundPlayer then
				table.insert(blacklistTable, foundPlayer)
			end
		end

		RageAimGLOBAL.Blacklist = blacklistTable
		BlacklistTextBox.Text = table.concat(blacklistTable, ", ")
	end)
end;
task.spawn(C_ba);
-- StarterGui.havocenchanted.MainFrame.ViewFrame.Player.RageAim.RageAim
local function C_c3()
	local script = G2L["c3"];
	local RunService = game:GetService("RunService")
	local Players = game:GetService("Players")
	local ReplicatedStorage = game:GetService("ReplicatedStorage")
	local UserInputService = game:GetService("UserInputService")

	local Player = Players.LocalPlayer
	local Character = Player.Character or Player.CharacterAdded:Wait()
	local HumanoidRootPart = Character:FindFirstChild("HumanoidRootPart")

	local HAVOC = getgenv().HAVOC
	local RageAimGLOBAL = HAVOC.Player.RageAim

	local function UpdateCharacter(newCharacter)
		Character = newCharacter
		HumanoidRootPart = Character:WaitForChild("HumanoidRootPart")
	end

	Player.CharacterAdded:Connect(UpdateCharacter)

	local function getClosestPlayer()
		local Camera = workspace.CurrentCamera
		local MousePosition = UserInputService:GetMouseLocation()
		local Closest
		local Distance = math.huge

		for _, otherPlayer in ipairs(Players:GetPlayers()) do
			local Character = otherPlayer.Character
			if otherPlayer ~= Player and Character and Character:FindFirstChild("Head") then
				local Head = Character.Head
				local Position, OnScreen = Camera:WorldToViewportPoint(Head.Position)
				if OnScreen then
					local screenPosition = Vector2.new(Position.X, Position.Y)
					local distance = (screenPosition - MousePosition).Magnitude

					if distance < Distance then
						Closest = otherPlayer
						Distance = distance
					end
				end
			end
		end
		return Closest
	end

	local function GetTool()
		local Tool = Player:FindFirstChildWhichIsA("Tool")
		for _, v in pairs(Player.Character:GetChildren()) do 
			if (v:FindFirstChild('Ammo') and v:FindFirstChild('MaxAmmo')) then 
				Tool = v 
				return Tool
			end
		end
	end

	local function childadded()
		Character.ChildAdded:Connect(function(child)
			local gun = GetTool()
			if gun then
				if RageAimGLOBAL.WallBang then 
					gun:FindFirstChildOfClass("LocalScript").Disabled = true
				end
				gun.Activated:Connect(function()
					if RageAimGLOBAL.WallBang then
						local target = getClosestPlayer()
						if target then
							local args = {
								[1] = "ShootGun",
								[2] = gun:WaitForChild("Handle"),
								[3] = HumanoidRootPart.Position,
								[4] = target.Character.Head.Position,
								[5] = target.Character.Head,
								[6] = Vector3.new(0,0,0)
							}
							game:GetService("ReplicatedStorage"):WaitForChild("MainEvent"):FireServer(unpack(args))
						end
					end
				end)
			end
		end)
	end

	childadded()

	Player.CharacterAdded:Connect(childadded)

	RunService.RenderStepped:Connect(function()
		if not RageAimGLOBAL.WallBang then
			local gun = GetTool()
			if gun then
				gun:FindFirstChildOfClass("LocalScript").Disabled = false
			end
		end
	end)
end;
task.spawn(C_c3);
-- StarterGui.havocenchanted.MainFrame.ViewFrame.Settings.MainSettings.UIVISIBILITY.Handle
local function C_cf()
	local script = G2L["cf"];
	local userInputService = game:GetService("UserInputService")

	local HAVOC = script.Parent.Parent.Parent.Parent.Parent

	local KeyBindBTN = script.Parent:WaitForChild("KeyBind")
	local currentKeyBind = Enum.KeyCode.LeftControl

	KeyBindBTN.MouseButton1Click:Connect(function()
		KeyBindBTN.Text = "Press Any Key"
		awaitingKeyBind = true
	end)

	userInputService.InputBegan:Connect(function(input,processed)
		if not processed then
			if awaitingKeyBind then
				currentKeyBind = input.KeyCode
				KeyBindBTN.Text = tostring(currentKeyBind):gsub("Enum.KeyCode.", "")
				awaitingKeyBind = false
				return
			end

			if input.KeyCode == currentKeyBind then
				HAVOC.Visible = not HAVOC.Visible
			end
		end
	end)
end;
task.spawn(C_cf);
-- StarterGui.havocenchanted.MainFrame.ViewFrame.Settings.MainSettings.Handle
local function C_dc()
	local script = G2L["dc"];
	local TweenService = game:GetService("TweenService")
	local Players = game:GetService("Players")
	local StarterGui = game:GetService("StarterGui")
	local tweenInfo = TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut)

	local player = game.Players.LocalPlayer

	local joinleaveBTN = script.Parent:WaitForChild("JOIN_LEAVENOTI"):WaitForChild("Trigger")
	local joinleaveToggle = joinleaveBTN.Parent:WaitForChild("Toggle")

	local joinleaveEnabled = false

	function sendNotification(title, text, duration)
		StarterGui:SetCore("SendNotification", {
			Title = title;
			Text = text;
			Duration = duration;
		})
	end

	joinleaveBTN.MouseButton1Up:Connect(function()
		if joinleaveEnabled then
			joinleaveEnabled = false
			local tween = TweenService:Create(joinleaveToggle, tweenInfo, { BackgroundColor3 = Color3.fromRGB(0, 0, 170) })
			tween:Play()
		else
			joinleaveEnabled = true
			local tween = TweenService:Create(joinleaveToggle, tweenInfo, { BackgroundColor3 = Color3.fromRGB(0, 0, 255) })
			tween:Play()
		end
	end)

	Players.ChildAdded:Connect(function(plr)
		if plr:IsA("Player") and joinleaveEnabled then
			sendNotification("JOINED", "DISPLAY: " .. plr.DisplayName .. " USER: " .. plr.Name, 4)
		end
	end)

	Players.ChildRemoved:Connect(function(plr)
		if plr:IsA("Player") and joinleaveEnabled then
			sendNotification("LEFT", "DISPLAY: " .. plr.DisplayName .. " USER: " .. plr.Name, 4)
		end
	end)
end;
task.spawn(C_dc);
-- StarterGui.havocenchanted.MainFrame.ViewFrame.Settings.MainSettings.REMOVESNOW.Handle
local function C_e4()
	local script = G2L["e4"];
	local TweenService = game:GetService("TweenService")
	local tweenInfo = TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut)

	local TriggerBTN = script.Parent:WaitForChild("Trigger")
	local Toggle = script.Parent:WaitForChild("Toggle")

	local removesnowEnabled = false

	TriggerBTN.MouseButton1Up:Connect(function()
		if removesnowEnabled then
			removesnowEnabled = false
			local tween = TweenService:Create(Toggle, tweenInfo, { BackgroundColor3 = Color3.fromRGB(0, 0, 170) })
			tween:Play()
			for _, snow in pairs(game.Lighting:GetDescendants()) do
				if snow.Name == "Snow" then
					snow.Parent = workspace
				end
			end
		else
			removesnowEnabled = true
			local tween = TweenService:Create(Toggle, tweenInfo, { BackgroundColor3 = Color3.fromRGB(0, 0, 255) })
			tween:Play()
			for _, snow in pairs(workspace:GetDescendants()) do
				if snow.Name == "Snow" then
					snow.Parent = game.Lighting
				end
			end
		end
	end)
end;
task.spawn(C_e4);
-- StarterGui.havocenchanted.MainFrame.ViewFrame.AutoSettings.Configuration.AutoSettings
local function C_107()
	local script = G2L["107"];
	local HAVOC = getgenv().HAVOC
	local AutoGLOBAL = HAVOC.AutoSettings

	local TweenService = game:GetService("TweenService")
	local runservice = game:GetService("RunService")
	local tweenInfo = TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut)

	local Player = game.Players.LocalPlayer

	local AutoReloadTrigger = script.Parent:WaitForChild("AUTORELOAD"):WaitForChild("Trigger")
	local AutoReloadToggle = AutoReloadTrigger.Parent:WaitForChild("Toggle")

	local AutoStompTrigger = script.Parent:WaitForChild("AUTOSTOMP"):WaitForChild("Trigger")
	local AutoStompToggle = AutoStompTrigger.Parent:WaitForChild("Toggle")

	local AutoShootTrigger = script.Parent:WaitForChild("AUTOSHOOT"):WaitForChild("Trigger")
	local AutoShootToggle = AutoShootTrigger.Parent:WaitForChild("Toggle")

	local AutoMaskTrigger = script.Parent:WaitForChild("AUTOMASK"):WaitForChild("Trigger")
	local AutoMaskToggle = AutoMaskTrigger.Parent:WaitForChild("Toggle")

	AutoReloadTrigger.MouseButton1Up:Connect(function()
		if AutoGLOBAL.AutoReload then
			AutoGLOBAL.AutoReload = false
			local tween = TweenService:Create(AutoReloadToggle, tweenInfo, { BackgroundColor3 = Color3.fromRGB(0, 0, 170) })
			tween:Play()
		else
			AutoGLOBAL.AutoReload = true
			local tween = TweenService:Create(AutoReloadToggle, tweenInfo, { BackgroundColor3 = Color3.fromRGB(0, 0, 255) })
			tween:Play()
		end
	end)

	AutoStompTrigger.MouseButton1Up:Connect(function()
		if AutoGLOBAL.AutoStomp then
			AutoGLOBAL.AutoStomp = false
			local tween = TweenService:Create(AutoStompToggle, tweenInfo, { BackgroundColor3 = Color3.fromRGB(0, 0, 170) })
			tween:Play()
		else
			AutoGLOBAL.AutoStomp = true
			local tween = TweenService:Create(AutoStompToggle, tweenInfo, { BackgroundColor3 = Color3.fromRGB(0, 0, 255) })
			tween:Play()
		end
	end)

	AutoShootTrigger.MouseButton1Up:Connect(function()
		if AutoGLOBAL.AutoShoot then
			AutoGLOBAL.AutoShoot = false
			local tween = TweenService:Create(AutoShootToggle, tweenInfo, { BackgroundColor3 = Color3.fromRGB(0, 0, 170) })
			tween:Play()
		else
			AutoGLOBAL.AutoShoot = true
			local tween = TweenService:Create(AutoShootToggle, tweenInfo, { BackgroundColor3 = Color3.fromRGB(0, 0, 255) })
			tween:Play()
		end
	end)

	AutoMaskTrigger.MouseButton1Up:Connect(function()
		if AutoGLOBAL.AutoMask then
			AutoGLOBAL.AutoMask = false
			local tween = TweenService:Create(AutoMaskToggle, tweenInfo, { BackgroundColor3 = Color3.fromRGB(0, 0, 170) })
			tween:Play()
		else
			AutoGLOBAL.AutoMask = true
			local tween = TweenService:Create(AutoMaskToggle, tweenInfo, { BackgroundColor3 = Color3.fromRGB(0, 0, 255) })
			tween:Play()
		end
	end)

	local function GetTool3()
		local Tool
		for _, v in pairs(Player.Character:GetChildren()) do 
			if (v:FindFirstChild('Ammo') and v:FindFirstChild('MaxAmmo')) then 
				Tool = v 
				return Tool
			end
		end
	end

	runservice.RenderStepped:Connect(function()
		if AutoGLOBAL.AutoReload then
			local Gun = GetTool3()
			local KOValue = Player.Character:WaitForChild('BodyEffects')['K.O'].Value
			if Gun and KOValue ~= true and Gun.Ammo.Value < 1 then
				game:GetService("ReplicatedStorage"):FindFirstChild("MainEvent"):FireServer("Reload",Gun)
			end
		end
		if AutoGLOBAL.AutoShoot then
			local Gun = GetTool3()
			local KOValue = Player.Character:WaitForChild('BodyEffects')['K.O'].Value
			if Gun and KOValue ~= true then
				Gun:Activate()
			end
		end
		if AutoGLOBAL.AutoStomp then
			game:GetService("ReplicatedStorage"):FindFirstChild("MainEvent"):FireServer("Stomp")
		end
		if AutoGLOBAL.AutoMask then
			local Mask = Player.Backpack:FindFirstChild("[Mask]")
			local Humanoid = Player.Character.Humanoid
			if Mask and Humanoid and Humanoid.DisplayDistanceType ~= Enum.HumanoidDisplayDistanceType.None then
				Humanoid:EquipTool(Mask)
				Mask:Activate()
			end
		end
	end)
end;
task.spawn(C_107);
-- StarterGui.havocenchanted.MainFrame.ViewFrame.Teleport.Places.Handle
local function C_13c()
	local script = G2L["13c"];
	local player = game.Players.LocalPlayer
	local Character = player.Character or player.CharacterAdded:Wait()
	local Humanoid = Character:WaitForChild("Humanoid")
	local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart")

	local function updateCharacter()
		Character = player.Character or player.CharacterAdded:Wait()
		HumanoidRootPart = Character:WaitForChild("HumanoidRootPart")
	end

	player.CharacterAdded:Connect(function()
		updateCharacter()
	end)

	for _,TriggerBTN in pairs(script.Parent:GetDescendants()) do
		if TriggerBTN:IsA("TextButton") then
			TriggerBTN.MouseButton1Up:Connect(function()
				if HumanoidRootPart and Humanoid.Health > 0 then
					if TriggerBTN.Parent.Name == "DABANK" then
						HumanoidRootPart.CFrame = CFrame.new(-385.50,21.42,-282.75,-607.5,0,0,0)
					elseif TriggerBTN.Parent.Name == "DB" then
						HumanoidRootPart.CFrame = CFrame.new(-1024.69, 21.97, -274,-607.5,0,0,0)
					elseif TriggerBTN.Parent.Name == "DOWNHILLZGUN" then
						HumanoidRootPart.CFrame = CFrame.new(-557.99,8.22,-736.59,-607.5,0,0,0)
					elseif TriggerBTN.Parent.Name == "MILITARY" then
						HumanoidRootPart.CFrame = CFrame.new(9.52,26.47,-869.6,-607.5,0,0,0)
					elseif TriggerBTN.Parent.Name == "REVOLVER" then
						HumanoidRootPart.CFrame = CFrame.new(-628.08,21.97,-129.13,-607.5,0,0,0)
					elseif TriggerBTN.Parent.Name == "UPHILLZGUN" then
						HumanoidRootPart.CFrame = CFrame.new(481.9,48.2,-607.5,-607.5,0,0,0)
					elseif TriggerBTN.Parent.Name == "WAREHOUSE" then
						HumanoidRootPart.CFrame = CFrame.new(481.9,48,2,-607.5,0,0,0)
					elseif TriggerBTN.Parent.Name == "RIFLE" then
						local rifleModel = workspace:FindFirstChild("[Rifle] - $1694", true)
						HumanoidRootPart.CFrame = rifleModel.Head.CFrame
					end
				end
			end)
		end
	end
end;
task.spawn(C_13c);
-- StarterGui.havocenchanted.MainFrame.ViewFrame.Teleport.PlayerTeleport.Handle
local function C_154()
	local script = G2L["154"];
	local Client = game.Players.LocalPlayer
	local Character = Client.Character or Client.CharacterAdded:Wait()
	local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart")

	local TeleportTrigger = script.Parent:WaitForChild("TELEPORT"):WaitForChild("Trigger")
	local TargetNameTextBox = script.Parent:WaitForChild("TARGETNAME"):WaitForChild("TARGET")
	local function updateCharacter()
		Character = Client.Character or Client.CharacterAdded:Wait()
		HumanoidRootPart = Character:WaitForChild("HumanoidRootPart")
	end

	local function findClosestMatchingPlayer(inputName)
		inputName = inputName:lower()
		for _, player in pairs(game.Players:GetPlayers()) do
			local username = player.Name:lower()
			local displayName = player.DisplayName:lower()

			if username:find(inputName, 1, true) or displayName:find(inputName, 1, true) then
				return player
			end
		end
		return nil
	end

	Client.CharacterAdded:Connect(function()
		updateCharacter()
	end)

	TeleportTrigger.MouseButton1Up:Connect(function()
		local foundPlayer = findClosestMatchingPlayer(TargetNameTextBox.Text)
		if foundPlayer then
			TargetNameTextBox.Text = foundPlayer.DisplayName
			HumanoidRootPart.CFrame = foundPlayer.Character.LowerTorso.CFrame
		else
			TargetNameTextBox.Text = ""
			TargetNameTextBox.PlaceholderText = "NO PLAYER FOUND"
			wait(2)
			TargetNameTextBox.PlaceholderText = "TARGET NAME OR DISPLAY"
		end
	end)
end;
task.spawn(C_154);
-- StarterGui.havocenchanted.MainFrame.ViewFrame.Orbit.Target.SELECTONSCREEN.Handle
local function C_168()
	local script = G2L["168"];
	local HAVOC = getgenv().HAVOC
	local OrbitGLOBAL = HAVOC.Orbit

	local Player = game.Players.LocalPlayer
	local Mouse = Player:GetMouse()

	local TriggerBTN = script.Parent:WaitForChild("Trigger")
	local playerText = script.Parent.Parent:WaitForChild("TARGETNAME"):WaitForChild("TARGET")
	local defaultText = TriggerBTN.Text

	-- Function to find the character model
	local function getCharacterFromTarget(target)
		while target do
			if target:FindFirstChild("Humanoid") then
				return target
			end
			target = target.Parent
		end
		return nil
	end

	TriggerBTN.MouseButton1Up:Connect(function()
		TriggerBTN.Text = "Select a player" -- Change button text to indicate selection mode
		local connection
		connection = Mouse.Button1Up:Connect(function()
			local TargetSelect = Mouse.Target
			if TargetSelect then
				local character = getCharacterFromTarget(TargetSelect)
				if character then
					local selectedPlayer = game.Players:GetPlayerFromCharacter(character)
					if selectedPlayer and selectedPlayer ~= Player then
						playerText.Text = selectedPlayer.Name
						OrbitGLOBAL.Target = selectedPlayer.Name
						TriggerBTN.Text = defaultText
						connection:Disconnect() -- Stop listening for mouse clicks
						return
					end
				end
			end
			-- If no valid character or player is found, reset
			connection:Disconnect()
			TriggerBTN.Text = defaultText
		end)
	end)

end;
task.spawn(C_168);
-- StarterGui.havocenchanted.MainFrame.ViewFrame.Orbit.Target.Orbit
local function C_16a()
	local script = G2L["16a"];
	local vim = game:GetService("VirtualInputManager")
	local HAVOC = getgenv().HAVOC
	local OrbitGLOBAL = HAVOC.Orbit

	local Players = game:GetService("Players")
	local UserInputService = game:GetService("UserInputService")
	local ReplicatedStorage = game:GetService("ReplicatedStorage")
	local RunService = game:GetService("RunService")
	local camera = workspace.CurrentCamera

	local localPlayer = Players.LocalPlayer
	local character = localPlayer.Character or localPlayer.CharacterAdded:Wait()
	local rootPart = character:WaitForChild("HumanoidRootPart")

	local DataFolder = localPlayer:WaitForChild("DataFolder")
	local InventoryFolder = DataFolder:WaitForChild("Inventory")

	local targetPlayer

	local ESPS = script.Parent.Parent.Parent.Parent.Parent:WaitForChild("ESPSFolder")

	local OrbitEnabled = false
	local gettingAmmo = false
	local reloadingAmmo = false
	local isBusy = false
	local minY = 1000000
	local moveDistance = 1000

	local rifleModel = workspace:FindFirstChild("[Rifle] - $1694", true)
	local rifleAmmo
	for _, v in ipairs(workspace:GetDescendants()) do
		if string.find(v.Name, "Rifle Ammo", 1, true) and v:IsA("Model") then
			rifleAmmo = v
			break
		end
	end

	local function updateCharacterReferences()
		character = localPlayer.Character or localPlayer.CharacterAdded:Wait()
		rootPart = character:WaitForChild("HumanoidRootPart")
	end

	localPlayer.CharacterAdded:Connect(function()
		updateCharacterReferences()
	end)

	local function getTargetCFrame()
		for _, player in ipairs(Players:GetPlayers()) do
			if player.Name == OrbitGLOBAL.Target or player.DisplayName == OrbitGLOBAL.Target then
				targetPlayer = player
			end
		end
		if targetPlayer and targetPlayer.Character then
			local targetRoot = targetPlayer.Character:FindFirstChild("HumanoidRootPart")
			if targetRoot then
				return targetRoot.CFrame
			end
		end
		return nil
	end

	local function GetTool()
		local Tool
		for _, v in pairs(localPlayer.Character:GetChildren()) do 
			if string.find(v.Name,"Rifle") or string.find(v.Name, "LMG") or string.find(v.Name,"Silencer") or string.find(v.Name,"AUG") then
				if v:FindFirstChild('Ammo') and v:FindFirstChild('MaxAmmo') then 
					Tool = v
					if not isBusy then
						camera.CameraSubject = character
					end
					return Tool
				end
			end
		end
		for _,v in pairs(localPlayer.Backpack:GetChildren()) do
			if string.find(v.Name,"Rifle") or string.find(v.Name, "LMG") or string.find(v.Name,"Silencer") or string.find(v.Name,"AUG") then
				if v:FindFirstChild('Ammo') and v:FindFirstChild('MaxAmmo') then 
					Tool = v 
					localPlayer.Character.Humanoid:EquipTool(v)
					return Tool
				end
			end 
		end
		rootPart.CFrame = rifleModel.Head.CFrame * CFrame.new(0, -3, 0)
		camera.CameraSubject = rifleModel.Head
		camera.CFrame = CFrame.new(camera.CFrame.Position, rifleModel.Head.Position)
		local screenPoint = camera:WorldToViewportPoint(rifleModel.Head.Position)
		vim:SendMouseMoveEvent(screenPoint.X, screenPoint.Y, game)
		vim:SendMouseButtonEvent(screenPoint.X, screenPoint.Y, 0, true, game, 0)
		task.wait(0.1)
		vim:SendMouseButtonEvent(screenPoint.X, screenPoint.Y, 0, false, game, 0)
	end

	local function getAmmo()
		rootPart.CFrame = rifleAmmo.Head.CFrame * CFrame.new(0, -3, 0)
		camera.CameraSubject = rifleAmmo.Head
		camera.CFrame = CFrame.new(camera.CFrame.Position, rifleAmmo.Head.Position)
		local screenPoint = camera:WorldToViewportPoint(rifleAmmo.Head.Position)
		vim:SendMouseMoveEvent(screenPoint.X, screenPoint.Y, game)
		vim:SendMouseButtonEvent(screenPoint.X, screenPoint.Y, 0, true, game, 0)
		task.wait(0.1)
		vim:SendMouseButtonEvent(screenPoint.X, screenPoint.Y, 0, false, game, 0)
	end

	local function orbitAround()
		local targetCFrame = getTargetCFrame()
		if targetCFrame then
			local orbitRadius = 12
			local orbitSpeed = 30
			local angle = tick() * orbitSpeed
			local x = math.cos(angle) * orbitRadius
			local z = math.sin(angle) * orbitRadius
			local orbitOffset = Vector3.new(x, 10, z)
			rootPart.CFrame = targetCFrame * CFrame.new(orbitOffset)
		end
	end

	local function lockCamera()
		local targetHead = targetPlayer.Character:FindFirstChild("Head")
		if targetHead then
			camera.CFrame = CFrame.new(camera.CFrame.Position, targetHead.Position)
		end
	end

	local function shootGun()
		local targetHead = targetPlayer.Character:FindFirstChild("Head")
		local gun = GetTool()
		if targetHead then
			if gun then
				if not targetPlayer.Character:WaitForChild("BodyEffects")['K.O'].Value then
					local args = {
						[1] = "ShootGun",
						[2] = gun:WaitForChild("Handle"),
						[3] = rootPart.Position,
						[4] = targetHead.Position,
						[5] = targetHead,
						[6] = Vector3.new(0,0,0)
					}
					game:GetService("ReplicatedStorage"):WaitForChild("MainEvent"):FireServer(unpack(args))
				end
			end
		end
	end

	local function void()
		local randomX = math.random(-moveDistance, moveDistance)
		local randomZ = math.random(-moveDistance, moveDistance)
		local randomY = math.random(-moveDistance, moveDistance) 

		local newY = math.max(rootPart.Position.Y + randomY, minY)

		rootPart.CFrame = CFrame.new(rootPart.Position.X + randomX, newY, rootPart.Position.Z + randomZ)
	end
	UserInputService.InputBegan:Connect(function(input,processed)
		if not processed then
			if input.KeyCode == OrbitGLOBAL.Settings.KeyBind and OrbitGLOBAL.Enabled then
				if not OrbitEnabled then
					OrbitEnabled = true
				else
					camera.CameraSubject = character
					OrbitEnabled = false
				end
			end
		end
	end)

	RunService.RenderStepped:Connect(function()
		if not OrbitGLOBAL.Enabled and OrbitEnabled then
			OrbitEnabled = false
		end

		if OrbitEnabled and not isBusy then
			local gun = GetTool()
			if gun then
				getTargetCFrame()
				if targetPlayer and targetPlayer.Character then
					if not targetPlayer.Character:WaitForChild("BodyEffects")['K.O'].Value and isBusy == false then
						orbitAround()
						lockCamera()
						shootGun()
					end

					--[[if ESPS:FindFirstChild(targetPlayer.Name) then
						ESPS[targetPlayer.Name].BOX.ImageColor3 = Color3.fromRGB(0, 0, 255)
					end--]]

					if InventoryFolder[gun.Name].Value == "0" and gun.Ammo.Value == 0 then
						isBusy = true
						while InventoryFolder[gun.Name].Value == "0" and gun.Ammo.Value == 0 and OrbitEnabled and not localPlayer.Character:WaitForChild("BodyEffects")['K.O'].Value and not targetPlayer.Character:WaitForChild("BodyEffects")['K.O'].Value and not targetPlayer.Character:WaitForChild("BodyEffects")['Dead'].Value do
							localPlayer.Character.Humanoid:UnequipTools()
							gettingAmmo = true
							getAmmo()
						end
						GetTool()
						camera.CameraSubject = character
						gettingAmmo = false
						isBusy = false
					end

					if OrbitGLOBAL.Settings.Void and not isBusy then
						if gun.Ammo.Value == 0 and tonumber(InventoryFolder[gun.Name].Value) > 0 then
							if not targetPlayer.Character:WaitForChild("BodyEffects")['K.O'].Value then
								isBusy = true
								while gun.Ammo.Value == 0 and tonumber(InventoryFolder[gun.Name].Value) > 0 and OrbitEnabled and not localPlayer.Character:WaitForChild("BodyEffects")['K.O'].Value and not targetPlayer.Character:WaitForChild("BodyEffects")['K.O'].Value do
									reloadingAmmo = true
									wait()
									void()
								end
								reloadingAmmo = false
								isBusy = false
							end
						end
					end
					if targetPlayer and targetPlayer.Character and targetPlayer.Character:WaitForChild("BodyEffects")['K.O'].Value and not gettingAmmo and not reloadingAmmo and not isBusy then
						if OrbitGLOBAL.Settings.AutoStomp then
							if targetPlayer.Character:WaitForChild("BodyEffects")['Dead'].Value then
								if OrbitGLOBAL.Settings.Void then
									isBusy = true
									while targetPlayer and targetPlayer.Character and OrbitEnabled and targetPlayer.Character:WaitForChild("BodyEffects")['K.O'].Value and not localPlayer.Character:WaitForChild("BodyEffects")['K.O'].Value and not gettingAmmo and not reloadingAmmo do
										wait()
										void()
									end
									isBusy = false
								end
							else
								local upperTorsoPosition = targetPlayer.Character.UpperTorso.Position
								local targetPosition = upperTorsoPosition + Vector3.new(0, 3, 0)
								rootPart.CFrame = CFrame.new(targetPosition, targetPosition + Vector3.new(0, 0, -1))
								ReplicatedStorage.MainEvent:FireServer("Stomp")
							end
						end
					end
				end
			end
		end
	end)
end;
task.spawn(C_16a);
-- StarterGui.havocenchanted.MainFrame.ViewFrame.Orbit.Target.Togglers
local function C_16b()
	local script = G2L["16b"];
	local HAVOC = getgenv().HAVOC
	local OrbitGLOBAL = HAVOC.Orbit

	local TweenService = game:GetService("TweenService")

	local TweenInfoON = TweenInfo.new(0.1)
	local TweenInfoOFF = TweenInfo.new(0.1)

	local OrbitTrigger = script.Parent:WaitForChild("ORBIT"):WaitForChild("Trigger")
	local OrbitToggle = OrbitTrigger.Parent:WaitForChild("Toggle")

	local AutoStompTrigger = script.Parent:WaitForChild("AUTOSTOMP"):WaitForChild("Trigger")
	local AutoStompToggle = AutoStompTrigger.Parent:WaitForChild("Toggle")

	local VoidTrigger = script.Parent:WaitForChild("VOID"):WaitForChild("Trigger")
	local VoidToggle = VoidTrigger.Parent:WaitForChild("Toggle")

	OrbitTrigger.MouseButton1Up:Connect(function()
		if OrbitToggle.BackgroundColor3 == Color3.fromRGB(0, 0, 255) then
			local tween = TweenService:Create(OrbitToggle, TweenInfoOFF, { BackgroundColor3 = Color3.fromRGB(0, 0, 170) })
			tween:Play()
			OrbitGLOBAL.Enabled = false
		else
			local tween = TweenService:Create(OrbitToggle, TweenInfoON, { BackgroundColor3 = Color3.fromRGB(0, 0, 255) })
			tween:Play()
			OrbitGLOBAL.Enabled = true
		end
	end)

	AutoStompTrigger.MouseButton1Up:Connect(function()
		if AutoStompToggle.BackgroundColor3 == Color3.fromRGB(0, 0, 255) then
			local tween = TweenService:Create(AutoStompToggle, TweenInfoOFF, { BackgroundColor3 = Color3.fromRGB(0, 0, 170) })
			tween:Play()
			OrbitGLOBAL.Settings.AutoStomp = false
		else
			local tween = TweenService:Create(AutoStompToggle, TweenInfoON, { BackgroundColor3 = Color3.fromRGB(0, 0, 255) })
			tween:Play()
			OrbitGLOBAL.Settings.AutoStomp = true
		end
	end)

	VoidTrigger.MouseButton1Up:Connect(function()
		if VoidToggle.BackgroundColor3 == Color3.fromRGB(0, 0, 255) then
			local tween = TweenService:Create(VoidToggle, TweenInfoOFF, { BackgroundColor3 = Color3.fromRGB(0, 0, 170) })
			tween:Play()
			OrbitGLOBAL.Settings.Void = false
		else
			local tween = TweenService:Create(VoidToggle, TweenInfoON, { BackgroundColor3 = Color3.fromRGB(0, 0, 255) })
			tween:Play()
			OrbitGLOBAL.Settings.Void = true
		end
	end)
end;
task.spawn(C_16b);
-- StarterGui.havocenchanted.MainFrame.ViewFrame.Orbit.Target.TargetNameHandler
local function C_16c()
	local script = G2L["16c"];
	local HAVOC = getgenv().HAVOC
	local OrbitGLOBAL = HAVOC.Orbit

	local TARGETNAME = script.Parent:WaitForChild("TARGETNAME")
	local TargetNameTextBox = TARGETNAME:WaitForChild("TARGET")

	local function findClosestMatchingPlayer(inputName)
		inputName = inputName:lower()
		for _, player in pairs(game.Players:GetPlayers()) do
			local username = player.Name:lower()
			local displayName = player.DisplayName:lower()
			if username:find(inputName, 1, true) or displayName:find(inputName, 1, true) then
				return player.DisplayName
			end
		end
		return nil
	end

	TargetNameTextBox.FocusLost:Connect(function(enterPressed)
		if enterPressed then
			if TargetNameTextBox.Text == "" then
				OrbitGLOBAL.Target = ""
				return
			end
			local partialInput = TargetNameTextBox.Text
			local foundPlayer = findClosestMatchingPlayer(partialInput)

			if foundPlayer then
				OrbitGLOBAL.Target = foundPlayer
				TargetNameTextBox.Text = foundPlayer
			else
				OrbitGLOBAL.Target = nil
				TargetNameTextBox.Text = ""
				TargetNameTextBox.PlaceholderText = "NO PLAYER FOUND"
				wait(2)
				TargetNameTextBox.PlaceholderText = "TARGET NAME OR DISPLAY"
			end
		end
	end)

end;
task.spawn(C_16c);
-- StarterGui.havocenchanted.MainFrame.ViewFrame.Orbit.Target.Keybind
local function C_177()
	local script = G2L["177"];
	local HAVOC = getgenv().HAVOC
	local OrbitGLOBAL = HAVOC.Orbit

	local UserInputService = game:GetService("UserInputService")
	local KeyBindBTN = script.Parent:WaitForChild("ORBIT"):WaitForChild("KeyBind")
	local awaitingKeyBind = false

	UserInputService.InputBegan:Connect(function(input)
		if awaitingKeyBind then
			OrbitGLOBAL.Settings.KeyBind = input.KeyCode
			KeyBindBTN.Text = tostring(input.KeyCode):gsub("Enum.KeyCode.", "")
			awaitingKeyBind = false
			return
		end
	end)

	KeyBindBTN.MouseButton1Click:Connect(function()
		KeyBindBTN.Text = "Press Any Key"
		awaitingKeyBind = true
	end)
end;
task.spawn(C_177);
-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.Togglers
local function C_1de()
	local script = G2L["1de"];
	local TweenService = game:GetService("TweenService")

	local HAVOC = getgenv().HAVOC
	local AimLockGLOBAL = HAVOC.AimLock

	local aimlockBTN = script.Parent:WaitForChild("AIMLOCK"):WaitForChild("Trigger")
	local aimlockToggle = aimlockBTN.Parent:WaitForChild("Toggle")
	local antidownBTN = script.Parent:WaitForChild("ANTIGROUNDSHOOT"):WaitForChild("Trigger")
	local antidownToggle = antidownBTN.Parent:WaitForChild("Toggle")
	local friendcheckBTN = script.Parent:WaitForChild("FRIENDCHECK").Trigger
	local friendcheckToggle = friendcheckBTN.Parent:WaitForChild("Toggle")
	local crewcheckBTN = script.Parent:WaitForChild("CREWCHECK").Trigger
	local crewcheckToggle = crewcheckBTN.Parent:WaitForChild("Toggle")
	local wallcheckTrigger = script.Parent:WaitForChild("WALLCHECK").Trigger
	local wallcheckToggle = wallcheckTrigger.Parent:WaitForChild("Toggle")

	aimlockBTN.MouseButton1Up:Connect(function()
		if AimLockGLOBAL.Enabled then
			local tween = TweenService:Create(aimlockToggle, TweenInfo.new(0.1), { BackgroundColor3 = Color3.fromRGB(0, 0, 170) })
			tween:Play()
			AimLockGLOBAL.Enabled = false
		else
			local tween = TweenService:Create(aimlockToggle, TweenInfo.new(0.1), { BackgroundColor3 = Color3.fromRGB(0, 0, 255) })
			tween:Play()
			AimLockGLOBAL.Enabled = true
		end
	end)

	crewcheckBTN.MouseButton1Up:Connect(function()
		if AimLockGLOBAL.Settings.CrewCheck then
			AimLockGLOBAL.Settings.CrewCheck = false
			local tween = TweenService:Create(crewcheckToggle, TweenInfo.new(0.1), { BackgroundColor3 = Color3.fromRGB(0, 0, 170) })
			tween:Play()
		else
			AimLockGLOBAL.Settings.CrewCheck = true
			local tween = TweenService:Create(crewcheckToggle, TweenInfo.new(0.1), { BackgroundColor3 = Color3.fromRGB(0, 0, 255) })
			tween:Play()
		end
	end)

	friendcheckBTN.MouseButton1Up:Connect(function()
		if AimLockGLOBAL.Settings.FriendCheck then
			AimLockGLOBAL.Settings.FriendCheck = false
			local tween = TweenService:Create(friendcheckToggle, TweenInfo.new(0.1), { BackgroundColor3 = Color3.fromRGB(0, 0, 170) })
			tween:Play()
		else
			AimLockGLOBAL.Settings.FriendCheck = true
			local tween = TweenService:Create(friendcheckToggle, TweenInfo.new(0.1), { BackgroundColor3 = Color3.fromRGB(0, 0, 255) })
			tween:Play()
		end
	end)

	antidownBTN.MouseButton1Up:Connect(function()
		if AimLockGLOBAL.Settings.AntiGroundShoot then
			AimLockGLOBAL.Settings.AntiGroundShoot = false
			local tween = TweenService:Create(antidownToggle, TweenInfo.new(0.1), { BackgroundColor3 = Color3.fromRGB(0, 0, 170) })
			tween:Play()
		else
			AimLockGLOBAL.Settings.AntiGroundShoot = true
			local tween = TweenService:Create(antidownToggle, TweenInfo.new(0.1), { BackgroundColor3 = Color3.fromRGB(0, 0, 255) })
			tween:Play()
		end
	end)

	wallcheckTrigger.MouseButton1Up:Connect(function()
		if AimLockGLOBAL.Settings.WallCheck then
			AimLockGLOBAL.Settings.WallCheck = false
			local tween = TweenService:Create(wallcheckToggle, TweenInfo.new(0.1), { BackgroundColor3 = Color3.fromRGB(0, 0, 170) })
			tween:Play()
		else
			AimLockGLOBAL.Settings.WallCheck = true
			local tween = TweenService:Create(wallcheckToggle, TweenInfo.new(0.1), { BackgroundColor3 = Color3.fromRGB(0, 0, 255) })
			tween:Play()
		end
	end)
end;
task.spawn(C_1de);
-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.Aimlock
local function C_1df()
	local script = G2L["1df"];
	local Players = game:GetService("Players")
	local RunService = game:GetService("RunService")
	local UserInputService = game:GetService("UserInputService")
	local camera = workspace.CurrentCamera
	local player = Players.LocalPlayer
	local mouse = player:GetMouse()

	local HAVOC = getgenv().HAVOC
	local AimLockGLOBAL = HAVOC.AimLock

	local ESPSFolder = script.Parent.Parent.Parent.Parent.Parent:WaitForChild("ESPSFolder")

	local aimTarget = nil
	local isHoldingKeybind = false

	local toggleMode = false

	function checkCrew(targetPlayer)
		local OurInformation = player:WaitForChild("DataFolder"):FindFirstChild("Information")
		local TheirInformation = targetPlayer:WaitForChild("DataFolder"):FindFirstChild("Information")
		if not (OurInformation and TheirInformation) then
			return false
		end

		local ourCrew = OurInformation:FindFirstChild("Crew")
		local theirCrew = TheirInformation:FindFirstChild("Crew")

		if not ourCrew then 
			return true
		end

		if not theirCrew then
			return true
		end

		return ourCrew.Value ~= theirCrew.Value
	end

	local friendStatusCache = {}

	local function isFriend(targetPlayerID)
		return player:IsFriendsWith(targetPlayerID)
	end

	local function getClosestPlayer()
		local Camera = workspace.CurrentCamera
		local MousePosition = UserInputService:GetMouseLocation()
		local Closest
		local Distance = math.huge

		for _, otherPlayer in ipairs(Players:GetPlayers()) do
			local Character = otherPlayer.Character
			if otherPlayer ~= player and Character and Character:FindFirstChild("Head") then
				local Head = Character.Head
				local Position, OnScreen = Camera:WorldToViewportPoint(Head.Position)
				if OnScreen then
					local screenPosition = Vector2.new(Position.X, Position.Y)
					local distance = (screenPosition - MousePosition).Magnitude
					if AimLockGLOBAL.Settings.WallCheck then
						local rayParams = RaycastParams.new()
						rayParams.FilterDescendantsInstances = {player.Character}
						rayParams.FilterType = Enum.RaycastFilterType.Blacklist

						local origin = Camera.CFrame.Position
						local direction = (Head.Position - origin).Unit * (Head.Position - origin).Magnitude

						local result = workspace:Raycast(origin, direction, rayParams)
						if not result or result.Instance:IsDescendantOf(Character) then
							if distance < Distance then
								Closest = otherPlayer
								Distance = distance
							end
						end
					else
						if distance < Distance then
							Closest = otherPlayer
							Distance = distance
						end
					end
				end
			end
		end
		return Closest
	end

	function updateESPColors()
		for _, guiElement in ipairs(ESPSFolder:GetChildren()) do
			if guiElement:IsA("BillboardGui") then
				if aimTarget and guiElement.Name == aimTarget.Name then
					guiElement.BOX.ImageColor3 = Color3.fromRGB(0, 0, 255)
					guiElement.PLAYERNAME.TextColor3 = Color3.fromRGB(0, 0, 255)
				else
					guiElement.BOX.ImageColor3 = Color3.fromRGB(255, 255, 255)
					guiElement.PLAYERNAME.TextColor3 = Color3.fromRGB(255, 255, 255)
				end
			end
		end
	end

	function toggleAimlock()
		if AimLockGLOBAL.Enabled then
			aimTarget = nil
		end
		--updateESPColors()
	end

	local lastCheckedTarget = nil
	local isLastTargetFriend = false
	local isLastTargetCrewValid = false

	function aimlockUpdate()
		if AimLockGLOBAL.Enabled and isHoldingKeybind then
			if not aimTarget or not aimTarget.Character or not aimTarget.Character:FindFirstChild("Head") then
				aimTarget = getClosestPlayer()
				lastCheckedTarget = nil
			end

			if aimTarget and aimTarget.Character then
				if aimTarget ~= lastCheckedTarget then
					lastCheckedTarget = aimTarget

					if AimLockGLOBAL.Settings.CrewCheck then
						isLastTargetCrewValid = checkCrew(aimTarget)
					else
						isLastTargetCrewValid = true
					end

					if AimLockGLOBAL.Settings.FriendCheck then
						isLastTargetFriend = isFriend(aimTarget.UserId)
					else
						isLastTargetFriend = false
					end
				end

				if AimLockGLOBAL.Settings.AntiGroundShoot and aimTarget.Character:WaitForChild("BodyEffects")['K.O'].Value then
					aimTarget = getClosestPlayer()
					lastCheckedTarget = nil
				elseif AimLockGLOBAL.Settings.CrewCheck and not isLastTargetCrewValid then
					aimTarget = getClosestPlayer()
					lastCheckedTarget = nil
				elseif AimLockGLOBAL.Settings.FriendCheck and isLastTargetFriend then
					aimTarget = getClosestPlayer()
					lastCheckedTarget = nil
				else
					if aimTarget and aimTarget.Character then
						camera.CFrame = CFrame.new(camera.CFrame.Position, aimTarget.Character:FindFirstChild(AimLockGLOBAL.Settings.AimPart).Position)
					end
				end
			end
		end
		--updateESPColors()
	end

	UserInputService.InputBegan:Connect(function(input)
		if AimLockGLOBAL.Enabled and input.KeyCode == AimLockGLOBAL.Settings.KeyBind and toggleMode == false then
			isHoldingKeybind = true
		end
		if AimLockGLOBAL.Enabled and input.KeyCode == AimLockGLOBAL.Settings.KeyBind and toggleMode == true then
			aimTarget = nil
			if isHoldingKeybind then
				isHoldingKeybind = false
			else
				isHoldingKeybind = true
			end
		end
	end)

	UserInputService.InputEnded:Connect(function(input)
		if input.KeyCode == AimLockGLOBAL.Settings.KeyBind and not toggleMode then
			isHoldingKeybind = false
			aimTarget = nil
			--updateESPColors()
		end
	end)

	RunService.Heartbeat:Connect(function()
		local BodyEffects = player.Character:FindFirstChild("BodyEffects")
		if AimLockGLOBAL.Enabled and player.Character.Humanoid.Health > 0 and BodyEffects and not BodyEffects["K.O"].Value then
			aimlockUpdate()
		end
		if AimLockGLOBAL.Settings.Mode == "HOLD" then
			toggleMode = false
		else
			toggleMode = true
		end
	end)
end;
task.spawn(C_1df);
-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.Keybind
local function C_1e0()
	local script = G2L["1e0"];
	local HAVOC = getgenv().HAVOC
	local AimLockGLOBAL = HAVOC.AimLock

	local UserInputService = game:GetService("UserInputService")
	local KeyBindBTN = script.Parent:WaitForChild("AIMLOCK"):WaitForChild("KeyBind")
	local awaitingKeyBind = false

	UserInputService.InputBegan:Connect(function(input)
		if awaitingKeyBind then
			AimLockGLOBAL.Settings.KeyBind = input.KeyCode
			KeyBindBTN.Text = tostring(input.KeyCode):gsub("Enum.KeyCode.", "")
			awaitingKeyBind = false
			return
		end
	end)

	KeyBindBTN.MouseButton1Click:Connect(function()
		KeyBindBTN.Text = "Press Any Key"
		awaitingKeyBind = true
	end)

end;
task.spawn(C_1e0);
-- StarterGui.havocenchanted.MainFrame.ViewFrame.AimLock.AimLock.Dropdown
local function C_1e1()
	local script = G2L["1e1"];
	local TweenService = game:GetService("TweenService")

	local HAVOC = getgenv().HAVOC
	local AimLockGLOBAL = HAVOC.AimLock

	local cameralockBTN = script.Parent:WaitForChild("CAMERALOCK"):WaitForChild("Trigger")
	local cameralockDropDownFrame = cameralockBTN.Parent:WaitForChild("DropDownFrame")
	local cameralockLockOnText = cameralockBTN.Parent:WaitForChild("LOCKON")
	local aimlockmodeBTN = script.Parent:WaitForChild("AIMLOCKTOGGLE"):WaitForChild("Trigger")
	local aimlockmodeDropDownFrame = aimlockmodeBTN.Parent:WaitForChild("DropDownFrame")
	local aimlockmodeLockOnText = aimlockmodeBTN.Parent:WaitForChild("MODE")

	local cameralockDropDownScrolling = cameralockDropDownFrame:WaitForChild("DropDownScrolling")
	local cameralockArrow = cameralockBTN.Parent:WaitForChild("Arrow")
	local aimlockmodeArrow = aimlockmodeBTN.Parent:WaitForChild("Arrow")
	local aimlockmodeDropDownScrolling = aimlockmodeDropDownFrame:WaitForChild("DropDownScrolling")

	function tweenArrow(targetRotation)
		local tweenInfo = TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
		local tween = TweenService:Create(cameralockArrow, tweenInfo, {Rotation = targetRotation})
		tween:Play()
	end

	function tweenArrow2(targetRotation)
		local tweenInfo = TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
		local tween = TweenService:Create(aimlockmodeArrow, tweenInfo, {Rotation = targetRotation})
		tween:Play()
	end

	for _, button in ipairs(cameralockDropDownScrolling:GetChildren()) do
		if button:IsA("TextButton") then
			button.MouseButton1Up:Connect(function()
				cameralockLockOnText.Text = button.Text
				AimLockGLOBAL.Settings.AimPart = button.Text
				cameralockDropDownFrame.Visible = false
				tweenArrow(0)
			end)
		end
	end

	for _, button in ipairs(aimlockmodeDropDownScrolling:GetChildren()) do
		if button:IsA("TextButton") then
			button.MouseButton1Up:Connect(function()
				aimlockmodeLockOnText.Text = button.Text
				AimLockGLOBAL.Settings.Mode = button.Text
				aimlockmodeDropDownFrame.Visible = false
				tweenArrow2(0)
			end)
		end
	end

	cameralockBTN.MouseButton1Up:Connect(function()
		cameralockDropDownFrame.Visible = not cameralockDropDownFrame.Visible
		local targetRotation = cameralockDropDownFrame.Visible and -90 or 0
		tweenArrow(targetRotation)
	end)

	aimlockmodeBTN.MouseButton1Up:Connect(function()
		aimlockmodeDropDownFrame.Visible = not aimlockmodeDropDownFrame.Visible
		local targetRotation = aimlockmodeDropDownFrame.Visible and -90 or 0
		tweenArrow2(targetRotation)
	end)
end;
task.spawn(C_1e1);
-- StarterGui.havocenchanted.MainFrame.SideFrame.LocalScript
local function C_1fe()
	local script = G2L["1fe"];
	local ViewFrame = script.Parent.Parent:WaitForChild("ViewFrame")

	function disableFrames()
		for i,v in ipairs(ViewFrame:GetChildren()) do
			if v:IsA("ScrollingFrame") then
				v.Visible = false
			end
		end
	end

	for _, button in ipairs(script.Parent:GetChildren()) do
		if button:IsA("TextButton") then
			button.MouseButton1Up:Connect(function()
				disableFrames()
				ViewFrame:FindFirstChild(button.Name).Visible = true
			end)
		end
	end
end;
task.spawn(C_1fe);
-- StarterGui.havocenchanted.LoadGlobalTable
local function C_20f()
	local script = G2L["20f"];
	local TweenService = game:GetService("TweenService")
	local TweenInfoON = TweenInfo.new(0.1)
	local TweenInfoOFF = TweenInfo.new(0.1)

	local HAVOC = getgenv().HAVOC

	local function findSettingByName(name, table)
		for key, v in pairs(table) do
			if typeof(v) == "table" then
				local result = findSettingByName(name, v)
				if result ~= nil then
					return result
				end
			elseif key:upper() == name then
				return v
			end
		end
		return nil
	end

	local function findKeyBindValue(buttonName, table)
		for key, setting in pairs(table) do
			if setting.Settings and setting.Settings.KeyBind then
				if key:upper() == buttonName:upper() then
					return setting.Settings.KeyBind
				end
			end
		end
		return nil
	end

	for _, button in ipairs(script.Parent:GetDescendants()) do
		if button:IsA("Frame") and button.Name ~= "Target" then
			local settingValue = findSettingByName(button.Name:upper(), HAVOC)
			if button:FindFirstChild("KeyBind") then
				local keyBindValue = findKeyBindValue(button.Name, HAVOC)
				if keyBindValue and typeof(keyBindValue) == "EnumItem" then
					button.KeyBind.Text = keyBindValue.Name
				end
			end

			if settingValue ~= nil then
				local targetColor = (typeof(settingValue) == "boolean" and settingValue) and Color3.fromRGB(0, 0, 255) or Color3.fromRGB(0, 0, 170)
				local tween = TweenService:Create(button.Toggle, TweenInfoON, { BackgroundColor3 = targetColor })
				tween:Play()
			end
		end
	end

end;
task.spawn(C_20f);

return G2L["1"], require;
